<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1254" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1237.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1237.00"> </text><svg id="frames" x="10" width="1180" total_samples="9149"><g><title>`0x7FFE4396AEE0 (3 samples, 0.03%)</title><rect x="0.0000%" y="1189" width="0.0328%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="1199.50"></text></g><g><title>`0x7FFE439727A8 (2 samples, 0.02%)</title><rect x="0.0328%" y="1141" width="0.0219%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="2"/><text x="0.2828%" y="1151.50"></text></g><g><title>`0x7FFE4395EBE2 (2 samples, 0.02%)</title><rect x="0.0328%" y="1125" width="0.0219%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="2"/><text x="0.2828%" y="1135.50"></text></g><g><title>`0x7FFE439453A6 (2 samples, 0.02%)</title><rect x="0.0328%" y="1109" width="0.0219%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.2828%" y="1119.50"></text></g><g><title>`0x7FFE439B3044 (2 samples, 0.02%)</title><rect x="0.0328%" y="1093" width="0.0219%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="2"/><text x="0.2828%" y="1103.50"></text></g><g><title>`0x7FFE43934117 (2 samples, 0.02%)</title><rect x="0.0547%" y="1093" width="0.0219%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="2"/><text x="0.3047%" y="1103.50"></text></g><g><title>`0x7FFE43934126 (3 samples, 0.03%)</title><rect x="0.0765%" y="1093" width="0.0328%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="3"/><text x="0.3265%" y="1103.50"></text></g><g><title>`0x7FFE43934138 (1 samples, 0.01%)</title><rect x="0.1093%" y="1093" width="0.0109%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="1"/><text x="0.3593%" y="1103.50"></text></g><g><title>`0x7FFE4392127B (7 samples, 0.08%)</title><rect x="0.0547%" y="1109" width="0.0765%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="7"/><text x="0.3047%" y="1119.50"></text></g><g><title>`0x7FFE4393419B (1 samples, 0.01%)</title><rect x="0.1202%" y="1093" width="0.0109%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="1"/><text x="0.3702%" y="1103.50"></text></g><g><title>`0x7FFE43920EEE (1 samples, 0.01%)</title><rect x="0.1312%" y="1093" width="0.0109%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="1"/><text x="0.3812%" y="1103.50"></text></g><g><title>`0x7FFE4393E011 (1 samples, 0.01%)</title><rect x="0.1312%" y="1077" width="0.0109%" height="15" fill="rgb(240,193,28)" fg:x="12" fg:w="1"/><text x="0.3812%" y="1087.50"></text></g><g><title>`0x7FFE4393A8C7 (1 samples, 0.01%)</title><rect x="0.1312%" y="1061" width="0.0109%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="1"/><text x="0.3812%" y="1071.50"></text></g><g><title>`0x7FFE4393B109 (1 samples, 0.01%)</title><rect x="0.1312%" y="1045" width="0.0109%" height="15" fill="rgb(206,188,39)" fg:x="12" fg:w="1"/><text x="0.3812%" y="1055.50"></text></g><g><title>`0x7FFE439B0874 (1 samples, 0.01%)</title><rect x="0.1312%" y="1029" width="0.0109%" height="15" fill="rgb(217,207,13)" fg:x="12" fg:w="1"/><text x="0.3812%" y="1039.50"></text></g><g><title>`0x7FFE43945E46 (11 samples, 0.12%)</title><rect x="0.0328%" y="1157" width="0.1202%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="11"/><text x="0.2828%" y="1167.50"></text></g><g><title>`0x7FFE4397287A (9 samples, 0.10%)</title><rect x="0.0547%" y="1141" width="0.0984%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="9"/><text x="0.3047%" y="1151.50"></text></g><g><title>`0x7FFE439211BB (9 samples, 0.10%)</title><rect x="0.0547%" y="1125" width="0.0984%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="9"/><text x="0.3047%" y="1135.50"></text></g><g><title>`0x7FFE43921380 (2 samples, 0.02%)</title><rect x="0.1312%" y="1109" width="0.0219%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="2"/><text x="0.3812%" y="1119.50"></text></g><g><title>`0x7FFE43920FB8 (1 samples, 0.01%)</title><rect x="0.1421%" y="1093" width="0.0109%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="0.3921%" y="1103.50"></text></g><g><title>`0x7FFE43920AFF (1 samples, 0.01%)</title><rect x="0.1421%" y="1077" width="0.0109%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="1"/><text x="0.3921%" y="1087.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.01%)</title><rect x="0.1421%" y="1061" width="0.0109%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="1"/><text x="0.3921%" y="1071.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.01%)</title><rect x="0.1421%" y="1045" width="0.0109%" height="15" fill="rgb(221,5,38)" fg:x="13" fg:w="1"/><text x="0.3921%" y="1055.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.01%)</title><rect x="0.1421%" y="1029" width="0.0109%" height="15" fill="rgb(247,18,42)" fg:x="13" fg:w="1"/><text x="0.3921%" y="1039.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.01%)</title><rect x="0.1421%" y="1013" width="0.0109%" height="15" fill="rgb(241,131,45)" fg:x="13" fg:w="1"/><text x="0.3921%" y="1023.50"></text></g><g><title>`0x7FFE43921472 (1 samples, 0.01%)</title><rect x="0.1530%" y="997" width="0.0109%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="0.4030%" y="1007.50"></text></g><g><title>`0x7FFE4393A8C7 (1 samples, 0.01%)</title><rect x="0.1530%" y="981" width="0.0109%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="0.4030%" y="991.50"></text></g><g><title>`0x7FFE4393B109 (1 samples, 0.01%)</title><rect x="0.1530%" y="965" width="0.0109%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="0.4030%" y="975.50"></text></g><g><title>`0x7FFE439B0874 (1 samples, 0.01%)</title><rect x="0.1530%" y="949" width="0.0109%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="0.4030%" y="959.50"></text></g><g><title>`0x7FFE43920A4C (1 samples, 0.01%)</title><rect x="0.1640%" y="981" width="0.0109%" height="15" fill="rgb(232,36,49)" fg:x="15" fg:w="1"/><text x="0.4140%" y="991.50"></text></g><g><title>`0x7FFE439B0734 (1 samples, 0.01%)</title><rect x="0.1640%" y="965" width="0.0109%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="1"/><text x="0.4140%" y="975.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.01%)</title><rect x="0.1749%" y="965" width="0.0109%" height="15" fill="rgb(229,88,8)" fg:x="16" fg:w="1"/><text x="0.4249%" y="975.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.01%)</title><rect x="0.1749%" y="949" width="0.0109%" height="15" fill="rgb(213,181,19)" fg:x="16" fg:w="1"/><text x="0.4249%" y="959.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.01%)</title><rect x="0.1749%" y="933" width="0.0109%" height="15" fill="rgb(254,191,54)" fg:x="16" fg:w="1"/><text x="0.4249%" y="943.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.01%)</title><rect x="0.1749%" y="917" width="0.0109%" height="15" fill="rgb(241,83,37)" fg:x="16" fg:w="1"/><text x="0.4249%" y="927.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.01%)</title><rect x="0.1858%" y="885" width="0.0109%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="1"/><text x="0.4358%" y="895.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.01%)</title><rect x="0.1858%" y="869" width="0.0109%" height="15" fill="rgb(226,3,54)" fg:x="17" fg:w="1"/><text x="0.4358%" y="879.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.01%)</title><rect x="0.1858%" y="853" width="0.0109%" height="15" fill="rgb(245,192,40)" fg:x="17" fg:w="1"/><text x="0.4358%" y="863.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.01%)</title><rect x="0.1858%" y="837" width="0.0109%" height="15" fill="rgb(238,167,29)" fg:x="17" fg:w="1"/><text x="0.4358%" y="847.50"></text></g><g><title>`0x7FFE43934B7B (2 samples, 0.02%)</title><rect x="0.1858%" y="949" width="0.0219%" height="15" fill="rgb(232,182,51)" fg:x="17" fg:w="2"/><text x="0.4358%" y="959.50"></text></g><g><title>`0x7FFE43934DC6 (2 samples, 0.02%)</title><rect x="0.1858%" y="933" width="0.0219%" height="15" fill="rgb(231,60,39)" fg:x="17" fg:w="2"/><text x="0.4358%" y="943.50"></text></g><g><title>`0x7FFE43935D84 (2 samples, 0.02%)</title><rect x="0.1858%" y="917" width="0.0219%" height="15" fill="rgb(208,69,12)" fg:x="17" fg:w="2"/><text x="0.4358%" y="927.50"></text></g><g><title>`0x7FFE4393D2E9 (2 samples, 0.02%)</title><rect x="0.1858%" y="901" width="0.0219%" height="15" fill="rgb(235,93,37)" fg:x="17" fg:w="2"/><text x="0.4358%" y="911.50"></text></g><g><title>`0x7FFE4393C8B8 (1 samples, 0.01%)</title><rect x="0.1967%" y="885" width="0.0109%" height="15" fill="rgb(213,116,39)" fg:x="18" fg:w="1"/><text x="0.4467%" y="895.50"></text></g><g><title>`0x7FFE43934C09 (1 samples, 0.01%)</title><rect x="0.1967%" y="869" width="0.0109%" height="15" fill="rgb(222,207,29)" fg:x="18" fg:w="1"/><text x="0.4467%" y="879.50"></text></g><g><title>`0x7FFE439833DF (1 samples, 0.01%)</title><rect x="0.1967%" y="853" width="0.0109%" height="15" fill="rgb(206,96,30)" fg:x="18" fg:w="1"/><text x="0.4467%" y="863.50"></text></g><g><title>`0x7FFE43945204 (1 samples, 0.01%)</title><rect x="0.1967%" y="837" width="0.0109%" height="15" fill="rgb(218,138,4)" fg:x="18" fg:w="1"/><text x="0.4467%" y="847.50"></text></g><g><title>`0x7FFE439453A6 (1 samples, 0.01%)</title><rect x="0.1967%" y="821" width="0.0109%" height="15" fill="rgb(250,191,14)" fg:x="18" fg:w="1"/><text x="0.4467%" y="831.50"></text></g><g><title>`0x7FFE439B3044 (1 samples, 0.01%)</title><rect x="0.1967%" y="805" width="0.0109%" height="15" fill="rgb(239,60,40)" fg:x="18" fg:w="1"/><text x="0.4467%" y="815.50"></text></g><g><title>`0x7FFE43920AFF (4 samples, 0.04%)</title><rect x="0.1749%" y="981" width="0.0437%" height="15" fill="rgb(206,27,48)" fg:x="16" fg:w="4"/><text x="0.4249%" y="991.50"></text></g><g><title>`0x7FFE4393C8B8 (3 samples, 0.03%)</title><rect x="0.1858%" y="965" width="0.0328%" height="15" fill="rgb(225,35,8)" fg:x="17" fg:w="3"/><text x="0.4358%" y="975.50"></text></g><g><title>`0x7FFE43934C34 (1 samples, 0.01%)</title><rect x="0.2077%" y="949" width="0.0109%" height="15" fill="rgb(250,213,24)" fg:x="19" fg:w="1"/><text x="0.4577%" y="959.50"></text></g><g><title>`0x7FFE43934136 (1 samples, 0.01%)</title><rect x="0.2077%" y="933" width="0.0109%" height="15" fill="rgb(247,123,22)" fg:x="19" fg:w="1"/><text x="0.4577%" y="943.50"></text></g><g><title>`0x7FFE43938D94 (7 samples, 0.08%)</title><rect x="0.1530%" y="1029" width="0.0765%" height="15" fill="rgb(231,138,38)" fg:x="14" fg:w="7"/><text x="0.4030%" y="1039.50"></text></g><g><title>`0x7FFE439212AF (7 samples, 0.08%)</title><rect x="0.1530%" y="1013" width="0.0765%" height="15" fill="rgb(231,145,46)" fg:x="14" fg:w="7"/><text x="0.4030%" y="1023.50"></text></g><g><title>`0x7FFE439214E0 (6 samples, 0.07%)</title><rect x="0.1640%" y="997" width="0.0656%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="6"/><text x="0.4140%" y="1007.50"></text></g><g><title>`0x7FFE43920B1D (1 samples, 0.01%)</title><rect x="0.2186%" y="981" width="0.0109%" height="15" fill="rgb(217,147,25)" fg:x="20" fg:w="1"/><text x="0.4686%" y="991.50"></text></g><g><title>`0x7FFE439B02B4 (1 samples, 0.01%)</title><rect x="0.2186%" y="965" width="0.0109%" height="15" fill="rgb(247,81,37)" fg:x="20" fg:w="1"/><text x="0.4686%" y="975.50"></text></g><g><title>`0x7FFE4100BEA8 (8 samples, 0.09%)</title><rect x="0.1530%" y="1125" width="0.0874%" height="15" fill="rgb(209,12,38)" fg:x="14" fg:w="8"/><text x="0.4030%" y="1135.50"></text></g><g><title>`0x7FFE41018FB1 (8 samples, 0.09%)</title><rect x="0.1530%" y="1109" width="0.0874%" height="15" fill="rgb(227,1,9)" fg:x="14" fg:w="8"/><text x="0.4030%" y="1119.50"></text></g><g><title>`0x7FFE41011C03 (8 samples, 0.09%)</title><rect x="0.1530%" y="1093" width="0.0874%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="8"/><text x="0.4030%" y="1103.50"></text></g><g><title>`0x7FFE4122B662 (8 samples, 0.09%)</title><rect x="0.1530%" y="1077" width="0.0874%" height="15" fill="rgb(221,10,30)" fg:x="14" fg:w="8"/><text x="0.4030%" y="1087.50"></text></g><g><title>`0x7FFE4393A71A (8 samples, 0.09%)</title><rect x="0.1530%" y="1061" width="0.0874%" height="15" fill="rgb(210,229,1)" fg:x="14" fg:w="8"/><text x="0.4030%" y="1071.50"></text></g><g><title>`0x7FFE4392909C (8 samples, 0.09%)</title><rect x="0.1530%" y="1045" width="0.0874%" height="15" fill="rgb(222,148,37)" fg:x="14" fg:w="8"/><text x="0.4030%" y="1055.50"></text></g><g><title>`0x7FFE43938E00 (1 samples, 0.01%)</title><rect x="0.2295%" y="1029" width="0.0109%" height="15" fill="rgb(234,67,33)" fg:x="21" fg:w="1"/><text x="0.4795%" y="1039.50"></text></g><g><title>`0x7FFE4393DAED (1 samples, 0.01%)</title><rect x="0.2295%" y="1013" width="0.0109%" height="15" fill="rgb(247,98,35)" fg:x="21" fg:w="1"/><text x="0.4795%" y="1023.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.01%)</title><rect x="0.2295%" y="997" width="0.0109%" height="15" fill="rgb(247,138,52)" fg:x="21" fg:w="1"/><text x="0.4795%" y="1007.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.01%)</title><rect x="0.2295%" y="981" width="0.0109%" height="15" fill="rgb(213,79,30)" fg:x="21" fg:w="1"/><text x="0.4795%" y="991.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.01%)</title><rect x="0.2295%" y="965" width="0.0109%" height="15" fill="rgb(246,177,23)" fg:x="21" fg:w="1"/><text x="0.4795%" y="975.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.01%)</title><rect x="0.2295%" y="949" width="0.0109%" height="15" fill="rgb(230,62,27)" fg:x="21" fg:w="1"/><text x="0.4795%" y="959.50"></text></g><g><title>`0x7FFE42CD7C2F (1 samples, 0.01%)</title><rect x="0.2295%" y="933" width="0.0109%" height="15" fill="rgb(216,154,8)" fg:x="21" fg:w="1"/><text x="0.4795%" y="943.50"></text></g><g><title>`0x7FFE42CF39A2 (1 samples, 0.01%)</title><rect x="0.2295%" y="917" width="0.0109%" height="15" fill="rgb(244,35,45)" fg:x="21" fg:w="1"/><text x="0.4795%" y="927.50"></text></g><g><title>`0x7FFE42CF3B20 (1 samples, 0.01%)</title><rect x="0.2295%" y="901" width="0.0109%" height="15" fill="rgb(251,115,12)" fg:x="21" fg:w="1"/><text x="0.4795%" y="911.50"></text></g><g><title>`0x7FFE42CECD6B (1 samples, 0.01%)</title><rect x="0.2295%" y="885" width="0.0109%" height="15" fill="rgb(240,54,50)" fg:x="21" fg:w="1"/><text x="0.4795%" y="895.50"></text></g><g><title>`0x7FFE42CECB80 (1 samples, 0.01%)</title><rect x="0.2295%" y="869" width="0.0109%" height="15" fill="rgb(233,84,52)" fg:x="21" fg:w="1"/><text x="0.4795%" y="879.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.01%)</title><rect x="0.2295%" y="853" width="0.0109%" height="15" fill="rgb(207,117,47)" fg:x="21" fg:w="1"/><text x="0.4795%" y="863.50"></text></g><g><title>`0x7FFE4394FEF8 (1 samples, 0.01%)</title><rect x="0.2295%" y="837" width="0.0109%" height="15" fill="rgb(249,43,39)" fg:x="21" fg:w="1"/><text x="0.4795%" y="847.50"></text></g><g><title>`0x7FFE4395A49B (1 samples, 0.01%)</title><rect x="0.2295%" y="821" width="0.0109%" height="15" fill="rgb(209,38,44)" fg:x="21" fg:w="1"/><text x="0.4795%" y="831.50"></text></g><g><title>`0x7FFE43959A01 (1 samples, 0.01%)</title><rect x="0.2295%" y="805" width="0.0109%" height="15" fill="rgb(236,212,23)" fg:x="21" fg:w="1"/><text x="0.4795%" y="815.50"></text></g><g><title>`0x7FFE439592DC (1 samples, 0.01%)</title><rect x="0.2295%" y="789" width="0.0109%" height="15" fill="rgb(242,79,21)" fg:x="21" fg:w="1"/><text x="0.4795%" y="799.50"></text></g><g><title>`0x7FFE43959C59 (1 samples, 0.01%)</title><rect x="0.2295%" y="773" width="0.0109%" height="15" fill="rgb(211,96,35)" fg:x="21" fg:w="1"/><text x="0.4795%" y="783.50"></text></g><g><title>`0x7FFE439428BA (1 samples, 0.01%)</title><rect x="0.2295%" y="757" width="0.0109%" height="15" fill="rgb(253,215,40)" fg:x="21" fg:w="1"/><text x="0.4795%" y="767.50"></text></g><g><title>`0x7FFE4398F9B2 (1 samples, 0.01%)</title><rect x="0.2295%" y="741" width="0.0109%" height="15" fill="rgb(211,81,21)" fg:x="21" fg:w="1"/><text x="0.4795%" y="751.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.01%)</title><rect x="0.2295%" y="725" width="0.0109%" height="15" fill="rgb(208,190,38)" fg:x="21" fg:w="1"/><text x="0.4795%" y="735.50"></text></g><g><title>`0x7FFE43961104 (1 samples, 0.01%)</title><rect x="0.2405%" y="1093" width="0.0109%" height="15" fill="rgb(235,213,38)" fg:x="22" fg:w="1"/><text x="0.4905%" y="1103.50"></text></g><g><title>`0x7FFE439B0654 (1 samples, 0.01%)</title><rect x="0.2405%" y="1077" width="0.0109%" height="15" fill="rgb(237,122,38)" fg:x="22" fg:w="1"/><text x="0.4905%" y="1087.50"></text></g><g><title>`0x7FFE4100C099 (10 samples, 0.11%)</title><rect x="0.1530%" y="1141" width="0.1093%" height="15" fill="rgb(244,218,35)" fg:x="14" fg:w="10"/><text x="0.4030%" y="1151.50"></text></g><g><title>`0x7FFE4100BED8 (2 samples, 0.02%)</title><rect x="0.2405%" y="1125" width="0.0219%" height="15" fill="rgb(240,68,47)" fg:x="22" fg:w="2"/><text x="0.4905%" y="1135.50"></text></g><g><title>`0x7FFE42BA7FAB (2 samples, 0.02%)</title><rect x="0.2405%" y="1109" width="0.0219%" height="15" fill="rgb(210,16,53)" fg:x="22" fg:w="2"/><text x="0.4905%" y="1119.50"></text></g><g><title>`0x7FFE4396115D (1 samples, 0.01%)</title><rect x="0.2514%" y="1093" width="0.0109%" height="15" fill="rgb(235,124,12)" fg:x="23" fg:w="1"/><text x="0.5014%" y="1103.50"></text></g><g><title>`0x7FFE43961566 (1 samples, 0.01%)</title><rect x="0.2514%" y="1077" width="0.0109%" height="15" fill="rgb(224,169,11)" fg:x="23" fg:w="1"/><text x="0.5014%" y="1087.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.01%)</title><rect x="0.2514%" y="1061" width="0.0109%" height="15" fill="rgb(250,166,2)" fg:x="23" fg:w="1"/><text x="0.5014%" y="1071.50"></text></g><g><title>`0x7FFE41242108 (1 samples, 0.01%)</title><rect x="0.2514%" y="1045" width="0.0109%" height="15" fill="rgb(242,216,29)" fg:x="23" fg:w="1"/><text x="0.5014%" y="1055.50"></text></g><g><title>`0x7FFE412428B4 (1 samples, 0.01%)</title><rect x="0.2514%" y="1029" width="0.0109%" height="15" fill="rgb(230,116,27)" fg:x="23" fg:w="1"/><text x="0.5014%" y="1039.50"></text></g><g><title>`0x7FFE412429BC (1 samples, 0.01%)</title><rect x="0.2514%" y="1013" width="0.0109%" height="15" fill="rgb(228,99,48)" fg:x="23" fg:w="1"/><text x="0.5014%" y="1023.50"></text></g><g><title>`0x7FFE412BE9A4 (1 samples, 0.01%)</title><rect x="0.2514%" y="997" width="0.0109%" height="15" fill="rgb(253,11,6)" fg:x="23" fg:w="1"/><text x="0.5014%" y="1007.50"></text></g><g><title>`0x7FFE412C9F4C (1 samples, 0.01%)</title><rect x="0.2514%" y="981" width="0.0109%" height="15" fill="rgb(247,143,39)" fg:x="23" fg:w="1"/><text x="0.5014%" y="991.50"></text></g><g><title>`0x7FFE412CE570 (1 samples, 0.01%)</title><rect x="0.2514%" y="965" width="0.0109%" height="15" fill="rgb(236,97,10)" fg:x="23" fg:w="1"/><text x="0.5014%" y="975.50"></text></g><g><title>`0x7FFE412D0B0B (1 samples, 0.01%)</title><rect x="0.2514%" y="949" width="0.0109%" height="15" fill="rgb(233,208,19)" fg:x="23" fg:w="1"/><text x="0.5014%" y="959.50"></text></g><g><title>`0x7FFE412CB329 (1 samples, 0.01%)</title><rect x="0.2514%" y="933" width="0.0109%" height="15" fill="rgb(216,164,2)" fg:x="23" fg:w="1"/><text x="0.5014%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;criterion::Criterion&lt;criterion::measurement::WallTime&gt; &gt;(criterion::Criterion (1 samples, 0.01%)</title><rect x="0.2623%" y="1077" width="0.0109%" height="15" fill="rgb(220,129,5)" fg:x="24" fg:w="1"/><text x="0.5123%" y="1087.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.2623%" y="1061" width="0.0109%" height="15" fill="rgb(242,17,10)" fg:x="24" fg:w="1"/><text x="0.5123%" y="1071.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.2623%" y="1045" width="0.0109%" height="15" fill="rgb(242,107,0)" fg:x="24" fg:w="1"/><text x="0.5123%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.2623%" y="1029" width="0.0109%" height="15" fill="rgb(251,28,31)" fg:x="24" fg:w="1"/><text x="0.5123%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.2623%" y="1013" width="0.0109%" height="15" fill="rgb(233,223,10)" fg:x="24" fg:w="1"/><text x="0.5123%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.01%)</title><rect x="0.2623%" y="997" width="0.0109%" height="15" fill="rgb(215,21,27)" fg:x="24" fg:w="1"/><text x="0.5123%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.2623%" y="981" width="0.0109%" height="15" fill="rgb(232,23,21)" fg:x="24" fg:w="1"/><text x="0.5123%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.2623%" y="965" width="0.0109%" height="15" fill="rgb(244,5,23)" fg:x="24" fg:w="1"/><text x="0.5123%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.01%)</title><rect x="0.2623%" y="949" width="0.0109%" height="15" fill="rgb(226,81,46)" fg:x="24" fg:w="1"/><text x="0.5123%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.01%)</title><rect x="0.2623%" y="933" width="0.0109%" height="15" fill="rgb(247,70,30)" fg:x="24" fg:w="1"/><text x="0.5123%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;enum2$&lt;core::option::Option&lt;criterion::html::Html&gt; &gt; &gt;(enum2$&lt;core::option::Option (1 samples, 0.01%)</title><rect x="0.2623%" y="917" width="0.0109%" height="15" fill="rgb(212,68,19)" fg:x="24" fg:w="1"/><text x="0.5123%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.2623%" y="901" width="0.0109%" height="15" fill="rgb(240,187,13)" fg:x="24" fg:w="1"/><text x="0.5123%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.2623%" y="885" width="0.0109%" height="15" fill="rgb(223,113,26)" fg:x="24" fg:w="1"/><text x="0.5123%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap&lt;ref$ (1 samples, 0.01%)</title><rect x="0.2623%" y="869" width="0.0109%" height="15" fill="rgb(206,192,2)" fg:x="24" fg:w="1"/><text x="0.5123%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;ref$ (1 samples, 0.01%)</title><rect x="0.2623%" y="853" width="0.0109%" height="15" fill="rgb(241,108,4)" fg:x="24" fg:w="1"/><text x="0.5123%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="0.2623%" y="837" width="0.0109%" height="15" fill="rgb(247,173,49)" fg:x="24" fg:w="1"/><text x="0.5123%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="0.2623%" y="821" width="0.0109%" height="15" fill="rgb(224,114,35)" fg:x="24" fg:w="1"/><text x="0.5123%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.01%)</title><rect x="0.2623%" y="805" width="0.0109%" height="15" fill="rgb(245,159,27)" fg:x="24" fg:w="1"/><text x="0.5123%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.01%)</title><rect x="0.2623%" y="789" width="0.0109%" height="15" fill="rgb(245,172,44)" fg:x="24" fg:w="1"/><text x="0.5123%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;str$&gt;,tinytemplate::template::Template&gt; &gt;::drop (1 samples, 0.01%)</title><rect x="0.2623%" y="773" width="0.0109%" height="15" fill="rgb(236,23,11)" fg:x="24" fg:w="1"/><text x="0.5123%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="0.2623%" y="757" width="0.0109%" height="15" fill="rgb(205,117,38)" fg:x="24" fg:w="1"/><text x="0.5123%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(tuple$&lt;ref$ (1 samples, 0.01%)</title><rect x="0.2623%" y="741" width="0.0109%" height="15" fill="rgb(237,72,25)" fg:x="24" fg:w="1"/><text x="0.5123%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.2623%" y="725" width="0.0109%" height="15" fill="rgb(244,70,9)" fg:x="24" fg:w="1"/><text x="0.5123%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (1 samples, 0.01%)</title><rect x="0.2623%" y="709" width="0.0109%" height="15" fill="rgb(217,125,39)" fg:x="24" fg:w="1"/><text x="0.5123%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$ (1 samples, 0.01%)</title><rect x="0.2623%" y="693" width="0.0109%" height="15" fill="rgb(235,36,10)" fg:x="24" fg:w="1"/><text x="0.5123%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$ (1 samples, 0.01%)</title><rect x="0.2623%" y="677" width="0.0109%" height="15" fill="rgb(251,123,47)" fg:x="24" fg:w="1"/><text x="0.5123%" y="687.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.01%)</title><rect x="0.2623%" y="661" width="0.0109%" height="15" fill="rgb(221,13,13)" fg:x="24" fg:w="1"/><text x="0.5123%" y="671.50"></text></g><g><title>`0x7FFE439BCF56 (1 samples, 0.01%)</title><rect x="0.2623%" y="645" width="0.0109%" height="15" fill="rgb(238,131,9)" fg:x="24" fg:w="1"/><text x="0.5123%" y="655.50"></text></g><g><title>`0x7FFE43957B45 (1 samples, 0.01%)</title><rect x="0.2623%" y="629" width="0.0109%" height="15" fill="rgb(211,50,8)" fg:x="24" fg:w="1"/><text x="0.5123%" y="639.50"></text></g><g><title>`0x7FFE43957C3B (1 samples, 0.01%)</title><rect x="0.2623%" y="613" width="0.0109%" height="15" fill="rgb(245,182,24)" fg:x="24" fg:w="1"/><text x="0.5123%" y="623.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.01%)</title><rect x="0.2623%" y="597" width="0.0109%" height="15" fill="rgb(242,14,37)" fg:x="24" fg:w="1"/><text x="0.5123%" y="607.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.01%)</title><rect x="0.2623%" y="581" width="0.0109%" height="15" fill="rgb(246,228,12)" fg:x="24" fg:w="1"/><text x="0.5123%" y="591.50"></text></g><g><title>`0x7FFE43949BE8 (1 samples, 0.01%)</title><rect x="0.2623%" y="565" width="0.0109%" height="15" fill="rgb(213,55,15)" fg:x="24" fg:w="1"/><text x="0.5123%" y="575.50"></text></g><g><title>`0x7FFE43954FDB (1 samples, 0.01%)</title><rect x="0.2623%" y="549" width="0.0109%" height="15" fill="rgb(209,9,3)" fg:x="24" fg:w="1"/><text x="0.5123%" y="559.50"></text></g><g><title>`0x7FFE439568BA (1 samples, 0.01%)</title><rect x="0.2623%" y="533" width="0.0109%" height="15" fill="rgb(230,59,30)" fg:x="24" fg:w="1"/><text x="0.5123%" y="543.50"></text></g><g><title>`0x7FFE43956968 (1 samples, 0.01%)</title><rect x="0.2623%" y="517" width="0.0109%" height="15" fill="rgb(209,121,21)" fg:x="24" fg:w="1"/><text x="0.5123%" y="527.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.01%)</title><rect x="0.2623%" y="501" width="0.0109%" height="15" fill="rgb(220,109,13)" fg:x="24" fg:w="1"/><text x="0.5123%" y="511.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.01%)</title><rect x="0.2623%" y="485" width="0.0109%" height="15" fill="rgb(232,18,1)" fg:x="24" fg:w="1"/><text x="0.5123%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::final_summary (1 samples, 0.01%)</title><rect x="0.2733%" y="1077" width="0.0109%" height="15" fill="rgb(215,41,42)" fg:x="25" fg:w="1"/><text x="0.5233%" y="1087.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (1 samples, 0.01%)</title><rect x="0.2733%" y="1061" width="0.0109%" height="15" fill="rgb(224,123,36)" fg:x="25" fg:w="1"/><text x="0.5233%" y="1071.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::arg (1 samples, 0.01%)</title><rect x="0.2733%" y="1045" width="0.0109%" height="15" fill="rgb(240,125,3)" fg:x="25" fg:w="1"/><text x="0.5233%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::arg_internal (1 samples, 0.01%)</title><rect x="0.2733%" y="1029" width="0.0109%" height="15" fill="rgb(205,98,50)" fg:x="25" fg:w="1"/><text x="0.5233%" y="1039.50"></text></g><g><title>`0x7FFE26C114A7 (1 samples, 0.01%)</title><rect x="0.2733%" y="1013" width="0.0109%" height="15" fill="rgb(205,185,37)" fg:x="25" fg:w="1"/><text x="0.5233%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::impl$4::default (1 samples, 0.01%)</title><rect x="0.2842%" y="1077" width="0.0109%" height="15" fill="rgb(238,207,15)" fg:x="26" fg:w="1"/><text x="0.5342%" y="1087.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (1 samples, 0.01%)</title><rect x="0.2842%" y="1061" width="0.0109%" height="15" fill="rgb(213,199,42)" fg:x="26" fg:w="1"/><text x="0.5342%" y="1071.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::html::Html::new(alloc::boxed::Box&lt;dyn$ (1 samples, 0.01%)</title><rect x="0.2842%" y="1045" width="0.0109%" height="15" fill="rgb(235,201,11)" fg:x="26" fg:w="1"/><text x="0.5342%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;, ref$ (1 samples, 0.01%)</title><rect x="0.2842%" y="1029" width="0.0109%" height="15" fill="rgb(207,46,11)" fg:x="26" fg:w="1"/><text x="0.5342%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::TinyTemplate::add_template(ref$&lt;str$&gt;, ref$ (1 samples, 0.01%)</title><rect x="0.2842%" y="1013" width="0.0109%" height="15" fill="rgb(241,35,35)" fg:x="26" fg:w="1"/><text x="0.5342%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::template::Template::compile(ref$ (1 samples, 0.01%)</title><rect x="0.2842%" y="997" width="0.0109%" height="15" fill="rgb(243,32,47)" fg:x="26" fg:w="1"/><text x="0.5342%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::compile (1 samples, 0.01%)</title><rect x="0.2842%" y="981" width="0.0109%" height="15" fill="rgb(247,202,23)" fg:x="26" fg:w="1"/><text x="0.5342%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::consume_block (1 samples, 0.01%)</title><rect x="0.2842%" y="965" width="0.0109%" height="15" fill="rgb(219,102,11)" fg:x="26" fg:w="1"/><text x="0.5342%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::traits::impl$4::index(ref$&lt;str$&gt;, core::ops::range::Range (1 samples, 0.01%)</title><rect x="0.2842%" y="949" width="0.0109%" height="15" fill="rgb(243,110,44)" fg:x="26" fg:w="1"/><text x="0.5342%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::impl$0::trim_matches&lt;core::str::impl$0::trim::closure_env$0&gt;(ref$ (1 samples, 0.01%)</title><rect x="0.2842%" y="933" width="0.0109%" height="15" fill="rgb(222,74,54)" fg:x="26" fg:w="1"/><text x="0.5342%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::pattern::impl$26::next_reject(core::str::pattern::CharPredicateSearcher (1 samples, 0.01%)</title><rect x="0.2842%" y="917" width="0.0109%" height="15" fill="rgb(216,99,12)" fg:x="26" fg:w="1"/><text x="0.5342%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::pattern::Searcher::next_reject(core::str::pattern::MultiCharEqSearcher (1 samples, 0.01%)</title><rect x="0.2842%" y="901" width="0.0109%" height="15" fill="rgb(226,22,26)" fg:x="26" fg:w="1"/><text x="0.5342%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::pattern::impl$10::next(core::str::pattern::MultiCharEqSearcher (1 samples, 0.01%)</title><rect x="0.2842%" y="885" width="0.0109%" height="15" fill="rgb(217,163,10)" fg:x="26" fg:w="1"/><text x="0.5342%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::pattern::impl$5::matches (1 samples, 0.01%)</title><rect x="0.2842%" y="869" width="0.0109%" height="15" fill="rgb(213,25,53)" fg:x="26" fg:w="1"/><text x="0.5342%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::impl$0::trim::closure$0 (1 samples, 0.01%)</title><rect x="0.2842%" y="853" width="0.0109%" height="15" fill="rgb(252,105,26)" fg:x="26" fg:w="1"/><text x="0.5342%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::char::methods::impl$0::is_whitespace (1 samples, 0.01%)</title><rect x="0.2842%" y="837" width="0.0109%" height="15" fill="rgb(220,39,43)" fg:x="26" fg:w="1"/><text x="0.5342%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt; &gt;(criterion::benchmark_group::BenchmarkGroup (1 samples, 0.01%)</title><rect x="0.2951%" y="1061" width="0.0109%" height="15" fill="rgb(229,68,48)" fg:x="27" fg:w="1"/><text x="0.5451%" y="1071.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::impl$1::drop(criterion::benchmark_group::BenchmarkGroup (1 samples, 0.01%)</title><rect x="0.2951%" y="1045" width="0.0109%" height="15" fill="rgb(252,8,32)" fg:x="27" fg:w="1"/><text x="0.5451%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::impl$5::group_separator (1 samples, 0.01%)</title><rect x="0.2951%" y="1029" width="0.0109%" height="15" fill="rgb(223,20,43)" fg:x="27" fg:w="1"/><text x="0.5451%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::impl$7::group_separator (1 samples, 0.01%)</title><rect x="0.2951%" y="1013" width="0.0109%" height="15" fill="rgb(229,81,49)" fg:x="27" fg:w="1"/><text x="0.5451%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::_print (1 samples, 0.01%)</title><rect x="0.2951%" y="997" width="0.0109%" height="15" fill="rgb(236,28,36)" fg:x="27" fg:w="1"/><text x="0.5451%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::print_to (1 samples, 0.01%)</title><rect x="0.2951%" y="981" width="0.0109%" height="15" fill="rgb(249,185,26)" fg:x="27" fg:w="1"/><text x="0.5451%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$15::write_fmt (1 samples, 0.01%)</title><rect x="0.2951%" y="965" width="0.0109%" height="15" fill="rgb(249,174,33)" fg:x="27" fg:w="1"/><text x="0.5451%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$16::write_fmt (1 samples, 0.01%)</title><rect x="0.2951%" y="949" width="0.0109%" height="15" fill="rgb(233,201,37)" fg:x="27" fg:w="1"/><text x="0.5451%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt (1 samples, 0.01%)</title><rect x="0.2951%" y="933" width="0.0109%" height="15" fill="rgb(221,78,26)" fg:x="27" fg:w="1"/><text x="0.5451%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::fmt::write (1 samples, 0.01%)</title><rect x="0.2951%" y="917" width="0.0109%" height="15" fill="rgb(250,127,30)" fg:x="27" fg:w="1"/><text x="0.5451%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.01%)</title><rect x="0.2951%" y="901" width="0.0109%" height="15" fill="rgb(230,49,44)" fg:x="27" fg:w="1"/><text x="0.5451%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$19::write_all (1 samples, 0.01%)</title><rect x="0.2951%" y="885" width="0.0109%" height="15" fill="rgb(229,67,23)" fg:x="27" fg:w="1"/><text x="0.5451%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cell::RefCell::borrow_mut (1 samples, 0.01%)</title><rect x="0.2951%" y="869" width="0.0109%" height="15" fill="rgb(249,83,47)" fg:x="27" fg:w="1"/><text x="0.5451%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.01%)</title><rect x="0.2951%" y="853" width="0.0109%" height="15" fill="rgb(215,43,3)" fg:x="27" fg:w="1"/><text x="0.5451%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$1::write_all (1 samples, 0.01%)</title><rect x="0.2951%" y="837" width="0.0109%" height="15" fill="rgb(238,154,13)" fg:x="27" fg:w="1"/><text x="0.5451%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::handle_ebadf (1 samples, 0.01%)</title><rect x="0.2951%" y="821" width="0.0109%" height="15" fill="rgb(219,56,2)" fg:x="27" fg:w="1"/><text x="0.5451%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_all&lt;std::sys::pal::windows::stdio::Stdout&gt; (1 samples, 0.01%)</title><rect x="0.2951%" y="805" width="0.0109%" height="15" fill="rgb(233,0,4)" fg:x="27" fg:w="1"/><text x="0.5451%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write (1 samples, 0.01%)</title><rect x="0.2951%" y="789" width="0.0109%" height="15" fill="rgb(235,30,7)" fg:x="27" fg:w="1"/><text x="0.5451%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (1 samples, 0.01%)</title><rect x="0.2951%" y="773" width="0.0109%" height="15" fill="rgb(250,79,13)" fg:x="27" fg:w="1"/><text x="0.5451%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write_u16s (1 samples, 0.01%)</title><rect x="0.2951%" y="757" width="0.0109%" height="15" fill="rgb(211,146,34)" fg:x="27" fg:w="1"/><text x="0.5451%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (1 samples, 0.01%)</title><rect x="0.2951%" y="741" width="0.0109%" height="15" fill="rgb(228,22,38)" fg:x="27" fg:w="1"/><text x="0.5451%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.01%)</title><rect x="0.2951%" y="725" width="0.0109%" height="15" fill="rgb(235,168,5)" fg:x="27" fg:w="1"/><text x="0.5451%" y="735.50"></text></g><g><title>`0x7FFE41242E4E (1 samples, 0.01%)</title><rect x="0.2951%" y="709" width="0.0109%" height="15" fill="rgb(221,155,16)" fg:x="27" fg:w="1"/><text x="0.5451%" y="719.50"></text></g><g><title>`0x7FFE41242EE3 (1 samples, 0.01%)</title><rect x="0.2951%" y="693" width="0.0109%" height="15" fill="rgb(215,215,53)" fg:x="27" fg:w="1"/><text x="0.5451%" y="703.50"></text></g><g><title>`0x7FFE41243219 (1 samples, 0.01%)</title><rect x="0.2951%" y="677" width="0.0109%" height="15" fill="rgb(223,4,10)" fg:x="27" fg:w="1"/><text x="0.5451%" y="687.50"></text></g><g><title>`0x7FFE439B01B4 (1 samples, 0.01%)</title><rect x="0.2951%" y="661" width="0.0109%" height="15" fill="rgb(234,103,6)" fg:x="27" fg:w="1"/><text x="0.5451%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::filter::impl$3::next (1 samples, 0.01%)</title><rect x="0.3060%" y="805" width="0.0109%" height="15" fill="rgb(227,97,0)" fg:x="28" fg:w="1"/><text x="0.5560%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::find (1 samples, 0.01%)</title><rect x="0.3060%" y="789" width="0.0109%" height="15" fill="rgb(234,150,53)" fg:x="28" fg:w="1"/><text x="0.5560%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="0.3060%" y="773" width="0.0109%" height="15" fill="rgb(228,201,54)" fg:x="28" fg:w="1"/><text x="0.5560%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::env::impl$6::next (1 samples, 0.01%)</title><rect x="0.3060%" y="757" width="0.0109%" height="15" fill="rgb(222,22,37)" fg:x="28" fg:w="1"/><text x="0.5560%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::os::impl$6::next (1 samples, 0.01%)</title><rect x="0.3060%" y="741" width="0.0109%" height="15" fill="rgb(237,53,32)" fg:x="28" fg:w="1"/><text x="0.5560%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::push (1 samples, 0.01%)</title><rect x="0.3060%" y="725" width="0.0109%" height="15" fill="rgb(233,25,53)" fg:x="28" fg:w="1"/><text x="0.5560%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::as_mut_ptr (1 samples, 0.01%)</title><rect x="0.3060%" y="709" width="0.0109%" height="15" fill="rgb(210,40,34)" fg:x="28" fg:w="1"/><text x="0.5560%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::ptr (1 samples, 0.01%)</title><rect x="0.3060%" y="693" width="0.0109%" height="15" fill="rgb(241,220,44)" fg:x="28" fg:w="1"/><text x="0.5560%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::ptr (1 samples, 0.01%)</title><rect x="0.3060%" y="677" width="0.0109%" height="15" fill="rgb(235,28,35)" fg:x="28" fg:w="1"/><text x="0.5560%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::non_null (1 samples, 0.01%)</title><rect x="0.3060%" y="661" width="0.0109%" height="15" fill="rgb(210,56,17)" fg:x="28" fg:w="1"/><text x="0.5560%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::grow_one&lt;u16,alloc::alloc::Global&gt; (1 samples, 0.01%)</title><rect x="0.3060%" y="645" width="0.0109%" height="15" fill="rgb(224,130,29)" fg:x="28" fg:w="1"/><text x="0.5560%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::os::current_exe (1 samples, 0.01%)</title><rect x="0.3170%" y="805" width="0.0109%" height="15" fill="rgb(235,212,8)" fg:x="29" fg:w="1"/><text x="0.5670%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.01%)</title><rect x="0.3170%" y="789" width="0.0109%" height="15" fill="rgb(223,33,50)" fg:x="29" fg:w="1"/><text x="0.5670%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::ffi::impl$0::from_wide (1 samples, 0.01%)</title><rect x="0.3170%" y="773" width="0.0109%" height="15" fill="rgb(219,149,13)" fg:x="29" fg:w="1"/><text x="0.5670%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (1 samples, 0.01%)</title><rect x="0.3170%" y="757" width="0.0109%" height="15" fill="rgb(250,156,29)" fg:x="29" fg:w="1"/><text x="0.5670%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::Wtf8Buf::push_char (1 samples, 0.01%)</title><rect x="0.3170%" y="741" width="0.0109%" height="15" fill="rgb(216,193,19)" fg:x="29" fg:w="1"/><text x="0.5670%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (1 samples, 0.01%)</title><rect x="0.3170%" y="725" width="0.0109%" height="15" fill="rgb(216,135,14)" fg:x="29" fg:w="1"/><text x="0.5670%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.01%)</title><rect x="0.3170%" y="709" width="0.0109%" height="15" fill="rgb(241,47,5)" fg:x="29" fg:w="1"/><text x="0.5670%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.01%)</title><rect x="0.3170%" y="693" width="0.0109%" height="15" fill="rgb(233,42,35)" fg:x="29" fg:w="1"/><text x="0.5670%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::append_elements (1 samples, 0.01%)</title><rect x="0.3170%" y="677" width="0.0109%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="1"/><text x="0.5670%" y="687.50"></text></g><g><title>`0x7FFE26C13010 (1 samples, 0.01%)</title><rect x="0.3170%" y="661" width="0.0109%" height="15" fill="rgb(207,181,40)" fg:x="29" fg:w="1"/><text x="0.5670%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;criterion::PlottingBackend&gt;::initialize&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (11 samples, 0.12%)</title><rect x="0.3060%" y="1045" width="0.1202%" height="15" fill="rgb(254,173,49)" fg:x="28" fg:w="11"/><text x="0.5560%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (11 samples, 0.12%)</title><rect x="0.3060%" y="1029" width="0.1202%" height="15" fill="rgb(221,1,38)" fg:x="28" fg:w="11"/><text x="0.5560%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$ (11 samples, 0.12%)</title><rect x="0.3060%" y="1013" width="0.1202%" height="15" fill="rgb(206,124,46)" fg:x="28" fg:w="11"/><text x="0.5560%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_PLOTTING_BACKEND::closure_env$0,tuple$&lt;&gt; &gt; (11 samples, 0.12%)</title><rect x="0.3060%" y="997" width="0.1202%" height="15" fill="rgb(249,21,11)" fg:x="28" fg:w="11"/><text x="0.5560%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_PLOTTING_BACKEND::closure$0 (11 samples, 0.12%)</title><rect x="0.3060%" y="981" width="0.1202%" height="15" fill="rgb(222,201,40)" fg:x="28" fg:w="11"/><text x="0.5560%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; &gt;::initialize&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*) (11 samples, 0.12%)</title><rect x="0.3060%" y="965" width="0.1202%" height="15" fill="rgb(235,61,29)" fg:x="28" fg:w="11"/><text x="0.5560%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (11 samples, 0.12%)</title><rect x="0.3060%" y="949" width="0.1202%" height="15" fill="rgb(219,207,3)" fg:x="28" fg:w="11"/><text x="0.5560%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$ (11 samples, 0.12%)</title><rect x="0.3060%" y="933" width="0.1202%" height="15" fill="rgb(222,56,46)" fg:x="28" fg:w="11"/><text x="0.5560%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion_plot::version (11 samples, 0.12%)</title><rect x="0.3060%" y="917" width="0.1202%" height="15" fill="rgb(239,76,54)" fg:x="28" fg:w="11"/><text x="0.5560%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;, enum2$&lt;criterion_plot::VersionError&gt; (*) (11 samples, 0.12%)</title><rect x="0.3060%" y="901" width="0.1202%" height="15" fill="rgb(231,124,27)" fg:x="28" fg:w="11"/><text x="0.5560%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (11 samples, 0.12%)</title><rect x="0.3060%" y="885" width="0.1202%" height="15" fill="rgb(249,195,6)" fg:x="28" fg:w="11"/><text x="0.5560%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (11 samples, 0.12%)</title><rect x="0.3060%" y="869" width="0.1202%" height="15" fill="rgb(237,174,47)" fg:x="28" fg:w="11"/><text x="0.5560%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (11 samples, 0.12%)</title><rect x="0.3060%" y="853" width="0.1202%" height="15" fill="rgb(206,201,31)" fg:x="28" fg:w="11"/><text x="0.5560%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe (11 samples, 0.12%)</title><rect x="0.3060%" y="837" width="0.1202%" height="15" fill="rgb(231,57,52)" fg:x="28" fg:w="11"/><text x="0.5560%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::search_paths (11 samples, 0.12%)</title><rect x="0.3060%" y="821" width="0.1202%" height="15" fill="rgb(248,177,22)" fg:x="28" fg:w="11"/><text x="0.5560%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe::closure$0 (9 samples, 0.10%)</title><rect x="0.3279%" y="805" width="0.0984%" height="15" fill="rgb(215,211,37)" fg:x="30" fg:w="9"/><text x="0.5779%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.10%)</title><rect x="0.3279%" y="789" width="0.0984%" height="15" fill="rgb(241,128,51)" fg:x="30" fg:w="9"/><text x="0.5779%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.10%)</title><rect x="0.3279%" y="773" width="0.0984%" height="15" fill="rgb(227,165,31)" fg:x="30" fg:w="9"/><text x="0.5779%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.10%)</title><rect x="0.3279%" y="757" width="0.0984%" height="15" fill="rgb(228,167,24)" fg:x="30" fg:w="9"/><text x="0.5779%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.10%)</title><rect x="0.3279%" y="741" width="0.0984%" height="15" fill="rgb(228,143,12)" fg:x="30" fg:w="9"/><text x="0.5779%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.10%)</title><rect x="0.3279%" y="725" width="0.0984%" height="15" fill="rgb(249,149,8)" fg:x="30" fg:w="9"/><text x="0.5779%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.10%)</title><rect x="0.3279%" y="709" width="0.0984%" height="15" fill="rgb(243,35,44)" fg:x="30" fg:w="9"/><text x="0.5779%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop (9 samples, 0.10%)</title><rect x="0.3279%" y="693" width="0.0984%" height="15" fill="rgb(246,89,9)" fg:x="30" fg:w="9"/><text x="0.5779%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::deallocate (9 samples, 0.10%)</title><rect x="0.3279%" y="677" width="0.0984%" height="15" fill="rgb(233,213,13)" fg:x="30" fg:w="9"/><text x="0.5779%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::current_memory (9 samples, 0.10%)</title><rect x="0.3279%" y="661" width="0.0984%" height="15" fill="rgb(233,141,41)" fg:x="30" fg:w="9"/><text x="0.5779%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::program_exists (9 samples, 0.10%)</title><rect x="0.3279%" y="645" width="0.0984%" height="15" fill="rgb(239,167,4)" fg:x="30" fg:w="9"/><text x="0.5779%" y="655.50"></text></g><g><title>`0x7FFE41232291 (9 samples, 0.10%)</title><rect x="0.3279%" y="629" width="0.0984%" height="15" fill="rgb(209,217,16)" fg:x="30" fg:w="9"/><text x="0.5779%" y="639.50"></text></g><g><title>`0x7FFE439B0874 (9 samples, 0.10%)</title><rect x="0.3279%" y="613" width="0.0984%" height="15" fill="rgb(219,88,35)" fg:x="30" fg:w="9"/><text x="0.5779%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;, ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="1013" width="0.0109%" height="15" fill="rgb(220,193,23)" fg:x="39" fg:w="1"/><text x="0.6763%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::TinyTemplate::add_template(ref$&lt;str$&gt;, ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="997" width="0.0109%" height="15" fill="rgb(230,90,52)" fg:x="39" fg:w="1"/><text x="0.6763%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::collections::hash::map::HashMap&lt;ref$&lt;str$&gt;,tinytemplate::template::Template,std::hash::random::RandomState&gt;::insert(ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="981" width="0.0109%" height="15" fill="rgb(252,106,19)" fg:x="39" fg:w="1"/><text x="0.6763%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::map::HashMap&lt;ref$&lt;str$&gt;,tinytemplate::template::Template,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert(ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="965" width="0.0109%" height="15" fill="rgb(206,74,20)" fg:x="39" fg:w="1"/><text x="0.6763%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::map::make_hash(std::hash::random::RandomState*, ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="949" width="0.0109%" height="15" fill="rgb(230,138,44)" fg:x="39" fg:w="1"/><text x="0.6763%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::BuildHasher::hash_one&lt;std::hash::random::RandomState,ref$&lt;ref$&lt;str$&gt; &gt; &gt;(std::hash::random::RandomState*, ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="933" width="0.0109%" height="15" fill="rgb(235,182,43)" fg:x="39" fg:w="1"/><text x="0.6763%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::impls::impl$5::hash(ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="917" width="0.0109%" height="15" fill="rgb(242,16,51)" fg:x="39" fg:w="1"/><text x="0.6763%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::impls::impl$5::hash(ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="901" width="0.0109%" height="15" fill="rgb(248,9,4)" fg:x="39" fg:w="1"/><text x="0.6763%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::impls::impl$2::hash(ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="885" width="0.0109%" height="15" fill="rgb(210,31,22)" fg:x="39" fg:w="1"/><text x="0.6763%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::hash::random::impl$4::write_str(std::hash::random::DefaultHasher*, ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="869" width="0.0109%" height="15" fill="rgb(239,54,39)" fg:x="39" fg:w="1"/><text x="0.6763%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="853" width="0.0109%" height="15" fill="rgb(230,99,41)" fg:x="39" fg:w="1"/><text x="0.6763%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (1 samples, 0.01%)</title><rect x="0.4263%" y="837" width="0.0109%" height="15" fill="rgb(253,106,12)" fg:x="39" fg:w="1"/><text x="0.6763%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (1 samples, 0.01%)</title><rect x="0.4263%" y="821" width="0.0109%" height="15" fill="rgb(213,46,41)" fg:x="39" fg:w="1"/><text x="0.6763%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (1 samples, 0.01%)</title><rect x="0.4263%" y="805" width="0.0109%" height="15" fill="rgb(215,133,35)" fg:x="39" fg:w="1"/><text x="0.6763%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (1 samples, 0.01%)</title><rect x="0.4263%" y="789" width="0.0109%" height="15" fill="rgb(213,28,5)" fg:x="39" fg:w="1"/><text x="0.6763%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="0.4263%" y="773" width="0.0109%" height="15" fill="rgb(215,77,49)" fg:x="39" fg:w="1"/><text x="0.6763%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (2 samples, 0.02%)</title><rect x="0.4263%" y="1045" width="0.0219%" height="15" fill="rgb(248,100,22)" fg:x="39" fg:w="2"/><text x="0.6763%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::html::Html::new(alloc::boxed::Box&lt;dyn$ (2 samples, 0.02%)</title><rect x="0.4263%" y="1029" width="0.0219%" height="15" fill="rgb(208,67,9)" fg:x="39" fg:w="2"/><text x="0.6763%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::TinyTemplate::new (1 samples, 0.01%)</title><rect x="0.4372%" y="1013" width="0.0109%" height="15" fill="rgb(219,133,21)" fg:x="40" fg:w="1"/><text x="0.6872%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::pop (1 samples, 0.01%)</title><rect x="0.4481%" y="677" width="0.0109%" height="15" fill="rgb(246,46,29)" fg:x="41" fg:w="1"/><text x="0.6981%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::ignore_integer&lt;serde_json::read::SliceRead&gt; (1 samples, 0.01%)</title><rect x="0.4591%" y="677" width="0.0109%" height="15" fill="rgb(246,185,52)" fg:x="42" fg:w="1"/><text x="0.7091%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::parse_whitespace (2 samples, 0.02%)</title><rect x="0.4700%" y="677" width="0.0219%" height="15" fill="rgb(252,136,11)" fg:x="43" fg:w="2"/><text x="0.7200%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::peek (2 samples, 0.02%)</title><rect x="0.4700%" y="661" width="0.0219%" height="15" fill="rgb(219,138,53)" fg:x="43" fg:w="2"/><text x="0.7200%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::peek (2 samples, 0.02%)</title><rect x="0.4700%" y="645" width="0.0219%" height="15" fill="rgb(211,51,23)" fg:x="43" fg:w="2"/><text x="0.7200%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (9 samples, 0.10%)</title><rect x="0.4481%" y="853" width="0.0984%" height="15" fill="rgb(247,221,28)" fg:x="41" fg:w="9"/><text x="0.6981%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (9 samples, 0.10%)</title><rect x="0.4481%" y="837" width="0.0984%" height="15" fill="rgb(251,222,45)" fg:x="41" fg:w="9"/><text x="0.6981%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize(serde_json::de::Deserializer (9 samples, 0.10%)</title><rect x="0.4481%" y="821" width="0.0984%" height="15" fill="rgb(217,162,53)" fg:x="41" fg:w="9"/><text x="0.6981%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (9 samples, 0.10%)</title><rect x="0.4481%" y="805" width="0.0984%" height="15" fill="rgb(229,93,14)" fg:x="41" fg:w="9"/><text x="0.6981%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize::impl$2::visit_map(criterion::cargo_target_directory::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (9 samples, 0.10%)</title><rect x="0.4481%" y="789" width="0.0984%" height="15" fill="rgb(209,67,49)" fg:x="41" fg:w="9"/><text x="0.6981%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_value(serde_json::de::MapAccess (9 samples, 0.10%)</title><rect x="0.4481%" y="773" width="0.0984%" height="15" fill="rgb(213,87,29)" fg:x="41" fg:w="9"/><text x="0.6981%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt;*, core::marker::PhantomData (9 samples, 0.10%)</title><rect x="0.4481%" y="757" width="0.0984%" height="15" fill="rgb(205,151,52)" fg:x="41" fg:w="9"/><text x="0.6981%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;serde::de::ignored_any::IgnoredAny&gt;, serde_json::de::Deserializer (9 samples, 0.10%)</title><rect x="0.4481%" y="741" width="0.0984%" height="15" fill="rgb(253,215,39)" fg:x="41" fg:w="9"/><text x="0.6981%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::ignored_any::impl$1::deserialize(serde_json::de::Deserializer (9 samples, 0.10%)</title><rect x="0.4481%" y="725" width="0.0984%" height="15" fill="rgb(221,220,41)" fg:x="41" fg:w="9"/><text x="0.6981%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_ignored_any(serde_json::de::Deserializer (9 samples, 0.10%)</title><rect x="0.4481%" y="709" width="0.0984%" height="15" fill="rgb(218,133,21)" fg:x="41" fg:w="9"/><text x="0.6981%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::ignore_value (9 samples, 0.10%)</title><rect x="0.4481%" y="693" width="0.0984%" height="15" fill="rgb(221,193,43)" fg:x="41" fg:w="9"/><text x="0.6981%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::ignore_str (5 samples, 0.05%)</title><rect x="0.4919%" y="677" width="0.0547%" height="15" fill="rgb(240,128,52)" fg:x="45" fg:w="5"/><text x="0.7419%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="0.5465%" y="853" width="0.0109%" height="15" fill="rgb(253,114,12)" fg:x="50" fg:w="1"/><text x="0.7965%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.01%)</title><rect x="0.5465%" y="837" width="0.0109%" height="15" fill="rgb(215,223,47)" fg:x="50" fg:w="1"/><text x="0.7965%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.5465%" y="821" width="0.0109%" height="15" fill="rgb(248,225,23)" fg:x="50" fg:w="1"/><text x="0.7965%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.5465%" y="805" width="0.0109%" height="15" fill="rgb(250,108,0)" fg:x="50" fg:w="1"/><text x="0.7965%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.01%)</title><rect x="0.5465%" y="789" width="0.0109%" height="15" fill="rgb(228,208,7)" fg:x="50" fg:w="1"/><text x="0.7965%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.01%)</title><rect x="0.5465%" y="773" width="0.0109%" height="15" fill="rgb(244,45,10)" fg:x="50" fg:w="1"/><text x="0.7965%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="0.5465%" y="757" width="0.0109%" height="15" fill="rgb(207,125,25)" fg:x="50" fg:w="1"/><text x="0.7965%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.01%)</title><rect x="0.5465%" y="741" width="0.0109%" height="15" fill="rgb(210,195,18)" fg:x="50" fg:w="1"/><text x="0.7965%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 0.01%)</title><rect x="0.5465%" y="725" width="0.0109%" height="15" fill="rgb(249,80,12)" fg:x="50" fg:w="1"/><text x="0.7965%" y="735.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.01%)</title><rect x="0.5465%" y="709" width="0.0109%" height="15" fill="rgb(221,65,9)" fg:x="50" fg:w="1"/><text x="0.7965%" y="719.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.01%)</title><rect x="0.5465%" y="693" width="0.0109%" height="15" fill="rgb(235,49,36)" fg:x="50" fg:w="1"/><text x="0.7965%" y="703.50"></text></g><g><title>`0x7FFE4394A0EC (1 samples, 0.01%)</title><rect x="0.5465%" y="677" width="0.0109%" height="15" fill="rgb(225,32,20)" fg:x="50" fg:w="1"/><text x="0.7965%" y="687.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.01%)</title><rect x="0.5465%" y="661" width="0.0109%" height="15" fill="rgb(215,141,46)" fg:x="50" fg:w="1"/><text x="0.7965%" y="671.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.01%)</title><rect x="0.5465%" y="645" width="0.0109%" height="15" fill="rgb(250,160,47)" fg:x="50" fg:w="1"/><text x="0.7965%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.01%)</title><rect x="0.5574%" y="757" width="0.0109%" height="15" fill="rgb(216,222,40)" fg:x="51" fg:w="1"/><text x="0.8074%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.01%)</title><rect x="0.5574%" y="741" width="0.0109%" height="15" fill="rgb(234,217,39)" fg:x="51" fg:w="1"/><text x="0.8074%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.01%)</title><rect x="0.5574%" y="725" width="0.0109%" height="15" fill="rgb(207,178,40)" fg:x="51" fg:w="1"/><text x="0.8074%" y="735.50"></text></g><g><title>`0x7FFE41229EEC (1 samples, 0.01%)</title><rect x="0.5574%" y="709" width="0.0109%" height="15" fill="rgb(221,136,13)" fg:x="51" fg:w="1"/><text x="0.8074%" y="719.50"></text></g><g><title>`0x7FFE4122A121 (1 samples, 0.01%)</title><rect x="0.5574%" y="693" width="0.0109%" height="15" fill="rgb(249,199,10)" fg:x="51" fg:w="1"/><text x="0.8074%" y="703.50"></text></g><g><title>`0x7FFE4392BB13 (1 samples, 0.01%)</title><rect x="0.5574%" y="677" width="0.0109%" height="15" fill="rgb(249,222,13)" fg:x="51" fg:w="1"/><text x="0.8074%" y="687.50"></text></g><g><title>`0x7FFE4392BC98 (1 samples, 0.01%)</title><rect x="0.5574%" y="661" width="0.0109%" height="15" fill="rgb(244,185,38)" fg:x="51" fg:w="1"/><text x="0.8074%" y="671.50"></text></g><g><title>`0x7FFE4394CC7A (1 samples, 0.01%)</title><rect x="0.5574%" y="645" width="0.0109%" height="15" fill="rgb(236,202,9)" fg:x="51" fg:w="1"/><text x="0.8074%" y="655.50"></text></g><g><title>`0x7FFE4394D6A7 (1 samples, 0.01%)</title><rect x="0.5574%" y="629" width="0.0109%" height="15" fill="rgb(250,229,37)" fg:x="51" fg:w="1"/><text x="0.8074%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (2 samples, 0.02%)</title><rect x="0.5574%" y="789" width="0.0219%" height="15" fill="rgb(206,174,23)" fg:x="51" fg:w="2"/><text x="0.8074%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Stdio::to_handle (2 samples, 0.02%)</title><rect x="0.5574%" y="773" width="0.0219%" height="15" fill="rgb(211,33,43)" fg:x="51" fg:w="2"/><text x="0.8074%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.01%)</title><rect x="0.5684%" y="757" width="0.0109%" height="15" fill="rgb(245,58,50)" fg:x="52" fg:w="1"/><text x="0.8184%" y="767.50"></text></g><g><title>`0x7FFE4127CDCB (1 samples, 0.01%)</title><rect x="0.5684%" y="741" width="0.0109%" height="15" fill="rgb(244,68,36)" fg:x="52" fg:w="1"/><text x="0.8184%" y="751.50"></text></g><g><title>`0x7FFE439B17E4 (1 samples, 0.01%)</title><rect x="0.5684%" y="725" width="0.0109%" height="15" fill="rgb(232,229,15)" fg:x="52" fg:w="1"/><text x="0.8184%" y="735.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.01%)</title><rect x="0.5793%" y="565" width="0.0109%" height="15" fill="rgb(254,30,23)" fg:x="53" fg:w="1"/><text x="0.8293%" y="575.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.01%)</title><rect x="0.5793%" y="549" width="0.0109%" height="15" fill="rgb(235,160,14)" fg:x="53" fg:w="1"/><text x="0.8293%" y="559.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.01%)</title><rect x="0.5793%" y="533" width="0.0109%" height="15" fill="rgb(212,155,44)" fg:x="53" fg:w="1"/><text x="0.8293%" y="543.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.01%)</title><rect x="0.5793%" y="517" width="0.0109%" height="15" fill="rgb(226,2,50)" fg:x="53" fg:w="1"/><text x="0.8293%" y="527.50"></text></g><g><title>`0x7FFE43938D76 (2 samples, 0.02%)</title><rect x="0.5793%" y="613" width="0.0219%" height="15" fill="rgb(234,177,6)" fg:x="53" fg:w="2"/><text x="0.8293%" y="623.50"></text></g><g><title>`0x7FFE4393E269 (2 samples, 0.02%)</title><rect x="0.5793%" y="597" width="0.0219%" height="15" fill="rgb(217,24,9)" fg:x="53" fg:w="2"/><text x="0.8293%" y="607.50"></text></g><g><title>`0x7FFE4393D2E9 (2 samples, 0.02%)</title><rect x="0.5793%" y="581" width="0.0219%" height="15" fill="rgb(220,13,46)" fg:x="53" fg:w="2"/><text x="0.8293%" y="591.50"></text></g><g><title>`0x7FFE4393C8B8 (1 samples, 0.01%)</title><rect x="0.5902%" y="565" width="0.0109%" height="15" fill="rgb(239,221,27)" fg:x="54" fg:w="1"/><text x="0.8402%" y="575.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.01%)</title><rect x="0.5902%" y="549" width="0.0109%" height="15" fill="rgb(222,198,25)" fg:x="54" fg:w="1"/><text x="0.8402%" y="559.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.01%)</title><rect x="0.5902%" y="533" width="0.0109%" height="15" fill="rgb(211,99,13)" fg:x="54" fg:w="1"/><text x="0.8402%" y="543.50"></text></g><g><title>`0x7FFE43935D84 (1 samples, 0.01%)</title><rect x="0.5902%" y="517" width="0.0109%" height="15" fill="rgb(232,111,31)" fg:x="54" fg:w="1"/><text x="0.8402%" y="527.50"></text></g><g><title>`0x7FFE4393D2E9 (1 samples, 0.01%)</title><rect x="0.5902%" y="501" width="0.0109%" height="15" fill="rgb(245,82,37)" fg:x="54" fg:w="1"/><text x="0.8402%" y="511.50"></text></g><g><title>`0x7FFE4393C859 (1 samples, 0.01%)</title><rect x="0.5902%" y="485" width="0.0109%" height="15" fill="rgb(227,149,46)" fg:x="54" fg:w="1"/><text x="0.8402%" y="495.50"></text></g><g><title>`0x7FFE4393B445 (1 samples, 0.01%)</title><rect x="0.5902%" y="469" width="0.0109%" height="15" fill="rgb(218,36,50)" fg:x="54" fg:w="1"/><text x="0.8402%" y="479.50"></text></g><g><title>`0x7FFE4393B941 (1 samples, 0.01%)</title><rect x="0.5902%" y="453" width="0.0109%" height="15" fill="rgb(226,80,48)" fg:x="54" fg:w="1"/><text x="0.8402%" y="463.50"></text></g><g><title>`0x7FFE4393DAA1 (1 samples, 0.01%)</title><rect x="0.6012%" y="597" width="0.0109%" height="15" fill="rgb(238,224,15)" fg:x="55" fg:w="1"/><text x="0.8512%" y="607.50"></text></g><g><title>`0x7FFE4393ECC9 (1 samples, 0.01%)</title><rect x="0.6012%" y="581" width="0.0109%" height="15" fill="rgb(241,136,10)" fg:x="55" fg:w="1"/><text x="0.8512%" y="591.50"></text></g><g><title>`0x7FFE4393ECAF (1 samples, 0.01%)</title><rect x="0.6012%" y="565" width="0.0109%" height="15" fill="rgb(208,32,45)" fg:x="55" fg:w="1"/><text x="0.8512%" y="575.50"></text></g><g><title>`0x7FFE4393ED8C (1 samples, 0.01%)</title><rect x="0.6012%" y="549" width="0.0109%" height="15" fill="rgb(207,135,9)" fg:x="55" fg:w="1"/><text x="0.8512%" y="559.50"></text></g><g><title>`0x7FFE43984100 (1 samples, 0.01%)</title><rect x="0.6012%" y="533" width="0.0109%" height="15" fill="rgb(206,86,44)" fg:x="55" fg:w="1"/><text x="0.8512%" y="543.50"></text></g><g><title>`0x7FFE439B0A54 (1 samples, 0.01%)</title><rect x="0.6012%" y="517" width="0.0109%" height="15" fill="rgb(245,177,15)" fg:x="55" fg:w="1"/><text x="0.8512%" y="527.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.01%)</title><rect x="0.6121%" y="581" width="0.0109%" height="15" fill="rgb(206,64,50)" fg:x="56" fg:w="1"/><text x="0.8621%" y="591.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.01%)</title><rect x="0.6121%" y="565" width="0.0109%" height="15" fill="rgb(234,36,40)" fg:x="56" fg:w="1"/><text x="0.8621%" y="575.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.01%)</title><rect x="0.6121%" y="549" width="0.0109%" height="15" fill="rgb(213,64,8)" fg:x="56" fg:w="1"/><text x="0.8621%" y="559.50"></text></g><g><title>`0x7FFE428E79EA (1 samples, 0.01%)</title><rect x="0.6121%" y="533" width="0.0109%" height="15" fill="rgb(210,75,36)" fg:x="56" fg:w="1"/><text x="0.8621%" y="543.50"></text></g><g><title>`0x7FFE428E8705 (1 samples, 0.01%)</title><rect x="0.6121%" y="517" width="0.0109%" height="15" fill="rgb(229,88,21)" fg:x="56" fg:w="1"/><text x="0.8621%" y="527.50"></text></g><g><title>`0x7FFE428E2528 (1 samples, 0.01%)</title><rect x="0.6121%" y="501" width="0.0109%" height="15" fill="rgb(252,204,47)" fg:x="56" fg:w="1"/><text x="0.8621%" y="511.50"></text></g><g><title>`0x7FFE428E2615 (1 samples, 0.01%)</title><rect x="0.6121%" y="485" width="0.0109%" height="15" fill="rgb(208,77,27)" fg:x="56" fg:w="1"/><text x="0.8621%" y="495.50"></text></g><g><title>`0x7FFE428E30C4 (1 samples, 0.01%)</title><rect x="0.6121%" y="469" width="0.0109%" height="15" fill="rgb(221,76,26)" fg:x="56" fg:w="1"/><text x="0.8621%" y="479.50"></text></g><g><title>`0x7FFE4393FAF0 (1 samples, 0.01%)</title><rect x="0.6121%" y="453" width="0.0109%" height="15" fill="rgb(225,139,18)" fg:x="56" fg:w="1"/><text x="0.8621%" y="463.50"></text></g><g><title>`0x7FFE4393FBD5 (1 samples, 0.01%)</title><rect x="0.6121%" y="437" width="0.0109%" height="15" fill="rgb(230,137,11)" fg:x="56" fg:w="1"/><text x="0.8621%" y="447.50"></text></g><g><title>`0x7FFE439B3B24 (1 samples, 0.01%)</title><rect x="0.6121%" y="421" width="0.0109%" height="15" fill="rgb(212,28,1)" fg:x="56" fg:w="1"/><text x="0.8621%" y="431.50"></text></g><g><title>`0x7FFE41246A7A (5 samples, 0.05%)</title><rect x="0.5793%" y="725" width="0.0547%" height="15" fill="rgb(248,164,17)" fg:x="53" fg:w="5"/><text x="0.8293%" y="735.50"></text></g><g><title>`0x7FFE412B4869 (5 samples, 0.05%)</title><rect x="0.5793%" y="709" width="0.0547%" height="15" fill="rgb(222,171,42)" fg:x="53" fg:w="5"/><text x="0.8293%" y="719.50"></text></g><g><title>`0x7FFE4127EE32 (5 samples, 0.05%)</title><rect x="0.5793%" y="693" width="0.0547%" height="15" fill="rgb(243,84,45)" fg:x="53" fg:w="5"/><text x="0.8293%" y="703.50"></text></g><g><title>`0x7FFE4393BEB7 (5 samples, 0.05%)</title><rect x="0.5793%" y="677" width="0.0547%" height="15" fill="rgb(252,49,23)" fg:x="53" fg:w="5"/><text x="0.8293%" y="687.50"></text></g><g><title>`0x7FFE439330F5 (5 samples, 0.05%)</title><rect x="0.5793%" y="661" width="0.0547%" height="15" fill="rgb(215,19,7)" fg:x="53" fg:w="5"/><text x="0.8293%" y="671.50"></text></g><g><title>`0x7FFE4392607E (5 samples, 0.05%)</title><rect x="0.5793%" y="645" width="0.0547%" height="15" fill="rgb(238,81,41)" fg:x="53" fg:w="5"/><text x="0.8293%" y="655.50"></text></g><g><title>`0x7FFE43928EC0 (5 samples, 0.05%)</title><rect x="0.5793%" y="629" width="0.0547%" height="15" fill="rgb(210,199,37)" fg:x="53" fg:w="5"/><text x="0.8293%" y="639.50"></text></g><g><title>`0x7FFE43938E00 (3 samples, 0.03%)</title><rect x="0.6012%" y="613" width="0.0328%" height="15" fill="rgb(244,192,49)" fg:x="55" fg:w="3"/><text x="0.8512%" y="623.50"></text></g><g><title>`0x7FFE4393DAED (2 samples, 0.02%)</title><rect x="0.6121%" y="597" width="0.0219%" height="15" fill="rgb(226,211,11)" fg:x="56" fg:w="2"/><text x="0.8621%" y="607.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.01%)</title><rect x="0.6230%" y="581" width="0.0109%" height="15" fill="rgb(236,162,54)" fg:x="57" fg:w="1"/><text x="0.8730%" y="591.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.01%)</title><rect x="0.6230%" y="565" width="0.0109%" height="15" fill="rgb(220,229,9)" fg:x="57" fg:w="1"/><text x="0.8730%" y="575.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.01%)</title><rect x="0.6230%" y="549" width="0.0109%" height="15" fill="rgb(250,87,22)" fg:x="57" fg:w="1"/><text x="0.8730%" y="559.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.01%)</title><rect x="0.6230%" y="533" width="0.0109%" height="15" fill="rgb(239,43,17)" fg:x="57" fg:w="1"/><text x="0.8730%" y="543.50"></text></g><g><title>`0x7FFE411DA067 (1 samples, 0.01%)</title><rect x="0.6230%" y="517" width="0.0109%" height="15" fill="rgb(231,177,25)" fg:x="57" fg:w="1"/><text x="0.8730%" y="527.50"></text></g><g><title>`0x7FFE411D35BC (1 samples, 0.01%)</title><rect x="0.6230%" y="501" width="0.0109%" height="15" fill="rgb(219,179,1)" fg:x="57" fg:w="1"/><text x="0.8730%" y="511.50"></text></g><g><title>`0x7FFE411D3839 (1 samples, 0.01%)</title><rect x="0.6230%" y="485" width="0.0109%" height="15" fill="rgb(238,219,53)" fg:x="57" fg:w="1"/><text x="0.8730%" y="495.50"></text></g><g><title>`0x7FFE411D3953 (1 samples, 0.01%)</title><rect x="0.6230%" y="469" width="0.0109%" height="15" fill="rgb(232,167,36)" fg:x="57" fg:w="1"/><text x="0.8730%" y="479.50"></text></g><g><title>`0x7FFE411D6413 (1 samples, 0.01%)</title><rect x="0.6230%" y="453" width="0.0109%" height="15" fill="rgb(244,19,51)" fg:x="57" fg:w="1"/><text x="0.8730%" y="463.50"></text></g><g><title>`0x7FFE439B01B4 (1 samples, 0.01%)</title><rect x="0.6230%" y="437" width="0.0109%" height="15" fill="rgb(224,6,22)" fg:x="57" fg:w="1"/><text x="0.8730%" y="447.50"></text></g><g><title>`0x7FFE41247624 (6 samples, 0.07%)</title><rect x="0.6339%" y="725" width="0.0656%" height="15" fill="rgb(224,145,5)" fg:x="58" fg:w="6"/><text x="0.8839%" y="735.50"></text></g><g><title>`0x7FFE439B1AA4 (6 samples, 0.07%)</title><rect x="0.6339%" y="709" width="0.0656%" height="15" fill="rgb(234,130,49)" fg:x="58" fg:w="6"/><text x="0.8839%" y="719.50"></text></g><g><title>`0x7FFE42B989AC (1 samples, 0.01%)</title><rect x="0.6995%" y="693" width="0.0109%" height="15" fill="rgb(254,6,2)" fg:x="64" fg:w="1"/><text x="0.9495%" y="703.50"></text></g><g><title>`0x7FFE42B9986D (1 samples, 0.01%)</title><rect x="0.6995%" y="677" width="0.0109%" height="15" fill="rgb(208,96,46)" fg:x="64" fg:w="1"/><text x="0.9495%" y="687.50"></text></g><g><title>`0x7FFE42BA5309 (1 samples, 0.01%)</title><rect x="0.6995%" y="661" width="0.0109%" height="15" fill="rgb(239,3,39)" fg:x="64" fg:w="1"/><text x="0.9495%" y="671.50"></text></g><g><title>`0x7FFE4123E755 (1 samples, 0.01%)</title><rect x="0.6995%" y="645" width="0.0109%" height="15" fill="rgb(233,210,1)" fg:x="64" fg:w="1"/><text x="0.9495%" y="655.50"></text></g><g><title>`0x7FFE412486DA (3 samples, 0.03%)</title><rect x="0.6995%" y="725" width="0.0328%" height="15" fill="rgb(244,137,37)" fg:x="64" fg:w="3"/><text x="0.9495%" y="735.50"></text></g><g><title>`0x7FFE42B959A4 (3 samples, 0.03%)</title><rect x="0.6995%" y="709" width="0.0328%" height="15" fill="rgb(240,136,2)" fg:x="64" fg:w="3"/><text x="0.9495%" y="719.50"></text></g><g><title>`0x7FFE42B98ABB (2 samples, 0.02%)</title><rect x="0.7105%" y="693" width="0.0219%" height="15" fill="rgb(239,18,37)" fg:x="65" fg:w="2"/><text x="0.9605%" y="703.50"></text></g><g><title>`0x7FFE439B0A54 (2 samples, 0.02%)</title><rect x="0.7105%" y="677" width="0.0219%" height="15" fill="rgb(218,185,22)" fg:x="65" fg:w="2"/><text x="0.9605%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (17 samples, 0.19%)</title><rect x="0.5574%" y="805" width="0.1858%" height="15" fill="rgb(225,218,4)" fg:x="51" fg:w="17"/><text x="0.8074%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (15 samples, 0.16%)</title><rect x="0.5793%" y="789" width="0.1640%" height="15" fill="rgb(230,182,32)" fg:x="53" fg:w="15"/><text x="0.8293%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (15 samples, 0.16%)</title><rect x="0.5793%" y="773" width="0.1640%" height="15" fill="rgb(242,56,43)" fg:x="53" fg:w="15"/><text x="0.8293%" y="783.50"></text></g><g><title>`0x7FFE42BA61F4 (15 samples, 0.16%)</title><rect x="0.5793%" y="757" width="0.1640%" height="15" fill="rgb(233,99,24)" fg:x="53" fg:w="15"/><text x="0.8293%" y="767.50"></text></g><g><title>`0x7FFE4127EAB6 (15 samples, 0.16%)</title><rect x="0.5793%" y="741" width="0.1640%" height="15" fill="rgb(234,209,42)" fg:x="53" fg:w="15"/><text x="0.8293%" y="751.50"></text></g><g><title>`0x7FFE41248816 (1 samples, 0.01%)</title><rect x="0.7323%" y="725" width="0.0109%" height="15" fill="rgb(227,7,12)" fg:x="67" fg:w="1"/><text x="0.9823%" y="735.50"></text></g><g><title>`0x7FFE42B99207 (1 samples, 0.01%)</title><rect x="0.7323%" y="709" width="0.0109%" height="15" fill="rgb(245,203,43)" fg:x="67" fg:w="1"/><text x="0.9823%" y="719.50"></text></g><g><title>`0x7FFE42B9A030 (1 samples, 0.01%)</title><rect x="0.7323%" y="693" width="0.0109%" height="15" fill="rgb(238,205,33)" fg:x="67" fg:w="1"/><text x="0.9823%" y="703.50"></text></g><g><title>`0x7FFE42B97BF5 (1 samples, 0.01%)</title><rect x="0.7323%" y="677" width="0.0109%" height="15" fill="rgb(231,56,7)" fg:x="67" fg:w="1"/><text x="0.9823%" y="687.50"></text></g><g><title>`0x7FFE43921BA3 (1 samples, 0.01%)</title><rect x="0.7323%" y="661" width="0.0109%" height="15" fill="rgb(244,186,29)" fg:x="67" fg:w="1"/><text x="0.9823%" y="671.50"></text></g><g><title>`0x7FFE4392F149 (1 samples, 0.01%)</title><rect x="0.7323%" y="645" width="0.0109%" height="15" fill="rgb(234,111,31)" fg:x="67" fg:w="1"/><text x="0.9823%" y="655.50"></text></g><g><title>`0x7FFE4391A58D (1 samples, 0.01%)</title><rect x="0.7323%" y="629" width="0.0109%" height="15" fill="rgb(241,149,10)" fg:x="67" fg:w="1"/><text x="0.9823%" y="639.50"></text></g><g><title>`0x7FFE4391C6AA (1 samples, 0.01%)</title><rect x="0.7323%" y="613" width="0.0109%" height="15" fill="rgb(249,206,44)" fg:x="67" fg:w="1"/><text x="0.9823%" y="623.50"></text></g><g><title>`0x7FFE4391E86C (1 samples, 0.01%)</title><rect x="0.7323%" y="597" width="0.0109%" height="15" fill="rgb(251,153,30)" fg:x="67" fg:w="1"/><text x="0.9823%" y="607.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.01%)</title><rect x="0.7323%" y="581" width="0.0109%" height="15" fill="rgb(239,152,38)" fg:x="67" fg:w="1"/><text x="0.9823%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;std::sys::pal::windows::pipe::AsyncPipe&gt; (1 samples, 0.01%)</title><rect x="0.7433%" y="757" width="0.0109%" height="15" fill="rgb(249,139,47)" fg:x="68" fg:w="1"/><text x="0.9933%" y="767.50"></text></g><g><title>`0x7FFE412292BF (1 samples, 0.01%)</title><rect x="0.7433%" y="741" width="0.0109%" height="15" fill="rgb(244,64,35)" fg:x="68" fg:w="1"/><text x="0.9933%" y="751.50"></text></g><g><title>`0x7FFE439B02B4 (1 samples, 0.01%)</title><rect x="0.7433%" y="725" width="0.0109%" height="15" fill="rgb(216,46,15)" fg:x="68" fg:w="1"/><text x="0.9933%" y="735.50"></text></g><g><title>`0x7FFE4395299F (1 samples, 0.01%)</title><rect x="0.7542%" y="549" width="0.0109%" height="15" fill="rgb(250,74,19)" fg:x="69" fg:w="1"/><text x="1.0042%" y="559.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.01%)</title><rect x="0.7542%" y="533" width="0.0109%" height="15" fill="rgb(249,42,33)" fg:x="69" fg:w="1"/><text x="1.0042%" y="543.50"></text></g><g><title>`0x7FFE4394F613 (1 samples, 0.01%)</title><rect x="0.7542%" y="517" width="0.0109%" height="15" fill="rgb(242,149,17)" fg:x="69" fg:w="1"/><text x="1.0042%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::spare_capacity_mut (2 samples, 0.02%)</title><rect x="0.7542%" y="741" width="0.0219%" height="15" fill="rgb(244,29,21)" fg:x="69" fg:w="2"/><text x="1.0042%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::capacity (2 samples, 0.02%)</title><rect x="0.7542%" y="725" width="0.0219%" height="15" fill="rgb(220,130,37)" fg:x="69" fg:w="2"/><text x="1.0042%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::capacity (2 samples, 0.02%)</title><rect x="0.7542%" y="709" width="0.0219%" height="15" fill="rgb(211,67,2)" fg:x="69" fg:w="2"/><text x="1.0042%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (2 samples, 0.02%)</title><rect x="0.7542%" y="693" width="0.0219%" height="15" fill="rgb(235,68,52)" fg:x="69" fg:w="2"/><text x="1.0042%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::grow_amortized (2 samples, 0.02%)</title><rect x="0.7542%" y="677" width="0.0219%" height="15" fill="rgb(246,142,3)" fg:x="69" fg:w="2"/><text x="1.0042%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (2 samples, 0.02%)</title><rect x="0.7542%" y="661" width="0.0219%" height="15" fill="rgb(241,25,7)" fg:x="69" fg:w="2"/><text x="1.0042%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (2 samples, 0.02%)</title><rect x="0.7542%" y="645" width="0.0219%" height="15" fill="rgb(242,119,39)" fg:x="69" fg:w="2"/><text x="1.0042%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::grow (2 samples, 0.02%)</title><rect x="0.7542%" y="629" width="0.0219%" height="15" fill="rgb(241,98,45)" fg:x="69" fg:w="2"/><text x="1.0042%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="0.7542%" y="613" width="0.0219%" height="15" fill="rgb(254,28,30)" fg:x="69" fg:w="2"/><text x="1.0042%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (2 samples, 0.02%)</title><rect x="0.7542%" y="597" width="0.0219%" height="15" fill="rgb(241,142,54)" fg:x="69" fg:w="2"/><text x="1.0042%" y="607.50"></text></g><g><title>`0x7FFE4395216A (2 samples, 0.02%)</title><rect x="0.7542%" y="581" width="0.0219%" height="15" fill="rgb(222,85,15)" fg:x="69" fg:w="2"/><text x="1.0042%" y="591.50"></text></g><g><title>`0x7FFE439522A7 (2 samples, 0.02%)</title><rect x="0.7542%" y="565" width="0.0219%" height="15" fill="rgb(210,85,47)" fg:x="69" fg:w="2"/><text x="1.0042%" y="575.50"></text></g><g><title>`0x7FFE43952ADE (1 samples, 0.01%)</title><rect x="0.7651%" y="549" width="0.0109%" height="15" fill="rgb(224,206,25)" fg:x="70" fg:w="1"/><text x="1.0151%" y="559.50"></text></g><g><title>`0x7FFE439B6E13 (1 samples, 0.01%)</title><rect x="0.7651%" y="533" width="0.0109%" height="15" fill="rgb(243,201,19)" fg:x="70" fg:w="1"/><text x="1.0151%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::impl$4::default (45 samples, 0.49%)</title><rect x="0.3060%" y="1061" width="0.4919%" height="15" fill="rgb(236,59,4)" fg:x="28" fg:w="45"/><text x="0.5560%" y="1071.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;std::path::PathBuf,std::path::PathBuf (*) (32 samples, 0.35%)</title><rect x="0.4481%" y="1045" width="0.3498%" height="15" fill="rgb(254,179,45)" fg:x="41" fg:w="32"/><text x="0.6981%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::ffi::os_str::impl$10::clone (32 samples, 0.35%)</title><rect x="0.4481%" y="1029" width="0.3498%" height="15" fill="rgb(226,14,10)" fg:x="41" fg:w="32"/><text x="0.6981%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::os_str::wtf8::impl$10::clone (32 samples, 0.35%)</title><rect x="0.4481%" y="1013" width="0.3498%" height="15" fill="rgb(244,27,41)" fg:x="41" fg:w="32"/><text x="0.6981%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::impl$35::clone (32 samples, 0.35%)</title><rect x="0.4481%" y="997" width="0.3498%" height="15" fill="rgb(235,35,32)" fg:x="41" fg:w="32"/><text x="0.6981%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;std::path::PathBuf&gt;::initialize&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*) (32 samples, 0.35%)</title><rect x="0.4481%" y="981" width="0.3498%" height="15" fill="rgb(218,68,31)" fg:x="41" fg:w="32"/><text x="0.6981%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (32 samples, 0.35%)</title><rect x="0.4481%" y="965" width="0.3498%" height="15" fill="rgb(207,120,37)" fg:x="41" fg:w="32"/><text x="0.6981%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$ (32 samples, 0.35%)</title><rect x="0.4481%" y="949" width="0.3498%" height="15" fill="rgb(227,98,0)" fg:x="41" fg:w="32"/><text x="0.6981%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_OUTPUT_DIRECTORY::closure_env$0,tuple$&lt;&gt; &gt; (32 samples, 0.35%)</title><rect x="0.4481%" y="933" width="0.3498%" height="15" fill="rgb(207,7,3)" fg:x="41" fg:w="32"/><text x="0.6981%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_OUTPUT_DIRECTORY::closure$0 (32 samples, 0.35%)</title><rect x="0.4481%" y="917" width="0.3498%" height="15" fill="rgb(206,98,19)" fg:x="41" fg:w="32"/><text x="0.6981%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory (32 samples, 0.35%)</title><rect x="0.4481%" y="901" width="0.3498%" height="15" fill="rgb(217,5,26)" fg:x="41" fg:w="32"/><text x="0.6981%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;::or_else(enum2$&lt;core::option::Option (32 samples, 0.35%)</title><rect x="0.4481%" y="885" width="0.3498%" height="15" fill="rgb(235,190,38)" fg:x="41" fg:w="32"/><text x="0.6981%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::closure$0 (32 samples, 0.35%)</title><rect x="0.4481%" y="869" width="0.3498%" height="15" fill="rgb(247,86,24)" fg:x="41" fg:w="32"/><text x="0.6981%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result (22 samples, 0.24%)</title><rect x="0.5574%" y="853" width="0.2405%" height="15" fill="rgb(205,101,16)" fg:x="51" fg:w="22"/><text x="0.8074%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (22 samples, 0.24%)</title><rect x="0.5574%" y="837" width="0.2405%" height="15" fill="rgb(246,168,33)" fg:x="51" fg:w="22"/><text x="0.8074%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (22 samples, 0.24%)</title><rect x="0.5574%" y="821" width="0.2405%" height="15" fill="rgb(231,114,1)" fg:x="51" fg:w="22"/><text x="0.8074%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::process::wait_with_output (5 samples, 0.05%)</title><rect x="0.7433%" y="805" width="0.0547%" height="15" fill="rgb(207,184,53)" fg:x="68" fg:w="5"/><text x="0.9933%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::unwrap (5 samples, 0.05%)</title><rect x="0.7433%" y="789" width="0.0547%" height="15" fill="rgb(224,95,51)" fg:x="68" fg:w="5"/><text x="0.9933%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::read2 (5 samples, 0.05%)</title><rect x="0.7433%" y="773" width="0.0547%" height="15" fill="rgb(212,188,45)" fg:x="68" fg:w="5"/><text x="0.9933%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (4 samples, 0.04%)</title><rect x="0.7542%" y="757" width="0.0437%" height="15" fill="rgb(223,154,38)" fg:x="69" fg:w="4"/><text x="1.0042%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read_overlapped (2 samples, 0.02%)</title><rect x="0.7760%" y="741" width="0.0219%" height="15" fill="rgb(251,22,52)" fg:x="71" fg:w="2"/><text x="1.0260%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (2 samples, 0.02%)</title><rect x="0.7760%" y="725" width="0.0219%" height="15" fill="rgb(229,209,22)" fg:x="71" fg:w="2"/><text x="1.0260%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (2 samples, 0.02%)</title><rect x="0.7760%" y="709" width="0.0219%" height="15" fill="rgb(234,138,34)" fg:x="71" fg:w="2"/><text x="1.0260%" y="719.50"></text></g><g><title>`0x7FFE4122BDC8 (2 samples, 0.02%)</title><rect x="0.7760%" y="693" width="0.0219%" height="15" fill="rgb(212,95,11)" fg:x="71" fg:w="2"/><text x="1.0260%" y="703.50"></text></g><g><title>`0x7FFE439B0194 (2 samples, 0.02%)</title><rect x="0.7760%" y="677" width="0.0219%" height="15" fill="rgb(240,179,47)" fg:x="71" fg:w="2"/><text x="1.0260%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::arg::Arg::conflicts_with(clap_builder::builder::arg::Arg, ref$ (1 samples, 0.01%)</title><rect x="0.7979%" y="741" width="0.0109%" height="15" fill="rgb(240,163,11)" fg:x="73" fg:w="1"/><text x="1.0479%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;clap_builder::util::id::Id,alloc::alloc::Global&gt;::push (1 samples, 0.01%)</title><rect x="0.7979%" y="725" width="0.0109%" height="15" fill="rgb(236,37,12)" fg:x="73" fg:w="1"/><text x="1.0479%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;clap_builder::util::id::Id,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="0.7979%" y="709" width="0.0109%" height="15" fill="rgb(232,164,16)" fg:x="73" fg:w="1"/><text x="1.0479%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;clap_builder::util::id::Id,alloc::alloc::Global&gt;::ptr (1 samples, 0.01%)</title><rect x="0.7979%" y="693" width="0.0109%" height="15" fill="rgb(244,205,15)" fg:x="73" fg:w="1"/><text x="1.0479%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.01%)</title><rect x="0.7979%" y="677" width="0.0109%" height="15" fill="rgb(223,117,47)" fg:x="73" fg:w="1"/><text x="1.0479%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.01%)</title><rect x="0.7979%" y="661" width="0.0109%" height="15" fill="rgb(244,107,35)" fg:x="73" fg:w="1"/><text x="1.0479%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;usize,u16&gt;,alloc::alloc::Global&gt;::grow_one&lt;tuple$&lt;usize,u16&gt;,alloc::alloc::Global&gt; (1 samples, 0.01%)</title><rect x="0.7979%" y="645" width="0.0109%" height="15" fill="rgb(205,140,8)" fg:x="73" fg:w="1"/><text x="1.0479%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::arg_matcher::ArgMatcher::new (1 samples, 0.01%)</title><rect x="0.8088%" y="645" width="0.0109%" height="15" fill="rgb(228,84,46)" fg:x="74" fg:w="1"/><text x="1.0588%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::_build_self (1 samples, 0.01%)</title><rect x="0.8088%" y="629" width="0.0109%" height="15" fill="rgb(254,188,9)" fg:x="74" fg:w="1"/><text x="1.0588%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::_check_help_and_version (1 samples, 0.01%)</title><rect x="0.8088%" y="613" width="0.0109%" height="15" fill="rgb(206,112,54)" fg:x="74" fg:w="1"/><text x="1.0588%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::long_help_exists_ (1 samples, 0.01%)</title><rect x="0.8088%" y="597" width="0.0109%" height="15" fill="rgb(216,84,49)" fg:x="74" fg:w="1"/><text x="1.0588%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::any(core::slice::iter::Iter (1 samples, 0.01%)</title><rect x="0.8088%" y="581" width="0.0109%" height="15" fill="rgb(214,194,35)" fg:x="74" fg:w="1"/><text x="1.0588%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::impl$7::long_help_exists_::closure$0 (1 samples, 0.01%)</title><rect x="0.8088%" y="565" width="0.0109%" height="15" fill="rgb(249,28,3)" fg:x="74" fg:w="1"/><text x="1.0588%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.01%)</title><rect x="0.8088%" y="549" width="0.0109%" height="15" fill="rgb(222,56,52)" fg:x="74" fg:w="1"/><text x="1.0588%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.8088%" y="533" width="0.0109%" height="15" fill="rgb(245,217,50)" fg:x="74" fg:w="1"/><text x="1.0588%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="0.8088%" y="517" width="0.0109%" height="15" fill="rgb(213,201,24)" fg:x="74" fg:w="1"/><text x="1.0588%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.01%)</title><rect x="0.8088%" y="501" width="0.0109%" height="15" fill="rgb(248,116,28)" fg:x="74" fg:w="1"/><text x="1.0588%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.01%)</title><rect x="0.8088%" y="485" width="0.0109%" height="15" fill="rgb(219,72,43)" fg:x="74" fg:w="1"/><text x="1.0588%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="0.8088%" y="469" width="0.0109%" height="15" fill="rgb(209,138,14)" fg:x="74" fg:w="1"/><text x="1.0588%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.01%)</title><rect x="0.8088%" y="453" width="0.0109%" height="15" fill="rgb(222,18,33)" fg:x="74" fg:w="1"/><text x="1.0588%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 0.01%)</title><rect x="0.8088%" y="437" width="0.0109%" height="15" fill="rgb(213,199,7)" fg:x="74" fg:w="1"/><text x="1.0588%" y="447.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.01%)</title><rect x="0.8088%" y="421" width="0.0109%" height="15" fill="rgb(250,110,10)" fg:x="74" fg:w="1"/><text x="1.0588%" y="431.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.01%)</title><rect x="0.8088%" y="405" width="0.0109%" height="15" fill="rgb(248,123,6)" fg:x="74" fg:w="1"/><text x="1.0588%" y="415.50"></text></g><g><title>`0x7FFE43949BE8 (1 samples, 0.01%)</title><rect x="0.8088%" y="389" width="0.0109%" height="15" fill="rgb(206,91,31)" fg:x="74" fg:w="1"/><text x="1.0588%" y="399.50"></text></g><g><title>`0x7FFE43954FDB (1 samples, 0.01%)</title><rect x="0.8088%" y="373" width="0.0109%" height="15" fill="rgb(211,154,13)" fg:x="74" fg:w="1"/><text x="1.0588%" y="383.50"></text></g><g><title>`0x7FFE439568BA (1 samples, 0.01%)</title><rect x="0.8088%" y="357" width="0.0109%" height="15" fill="rgb(225,148,7)" fg:x="74" fg:w="1"/><text x="1.0588%" y="367.50"></text></g><g><title>`0x7FFE43956968 (1 samples, 0.01%)</title><rect x="0.8088%" y="341" width="0.0109%" height="15" fill="rgb(220,160,43)" fg:x="74" fg:w="1"/><text x="1.0588%" y="351.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.01%)</title><rect x="0.8088%" y="325" width="0.0109%" height="15" fill="rgb(213,52,39)" fg:x="74" fg:w="1"/><text x="1.0588%" y="335.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.01%)</title><rect x="0.8088%" y="309" width="0.0109%" height="15" fill="rgb(243,137,7)" fg:x="74" fg:w="1"/><text x="1.0588%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::benchmark_group(ref$ (3 samples, 0.03%)</title><rect x="0.7979%" y="1029" width="0.0328%" height="15" fill="rgb(230,79,13)" fg:x="73" fg:w="3"/><text x="1.0479%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::convert::impl$3::into(ref$ (3 samples, 0.03%)</title><rect x="0.7979%" y="1013" width="0.0328%" height="15" fill="rgb(247,105,23)" fg:x="73" fg:w="3"/><text x="1.0479%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.03%)</title><rect x="0.7979%" y="997" width="0.0328%" height="15" fill="rgb(223,179,41)" fg:x="73" fg:w="3"/><text x="1.0479%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.03%)</title><rect x="0.7979%" y="981" width="0.0328%" height="15" fill="rgb(218,9,34)" fg:x="73" fg:w="3"/><text x="1.0479%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="0.7979%" y="965" width="0.0328%" height="15" fill="rgb(222,106,8)" fg:x="73" fg:w="3"/><text x="1.0479%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="0.7979%" y="949" width="0.0328%" height="15" fill="rgb(211,220,0)" fg:x="73" fg:w="3"/><text x="1.0479%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="0.7979%" y="933" width="0.0328%" height="15" fill="rgb(229,52,16)" fg:x="73" fg:w="3"/><text x="1.0479%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="0.7979%" y="917" width="0.0328%" height="15" fill="rgb(212,155,18)" fg:x="73" fg:w="3"/><text x="1.0479%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.03%)</title><rect x="0.7979%" y="901" width="0.0328%" height="15" fill="rgb(242,21,14)" fg:x="73" fg:w="3"/><text x="1.0479%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="0.7979%" y="885" width="0.0328%" height="15" fill="rgb(222,19,48)" fg:x="73" fg:w="3"/><text x="1.0479%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="0.7979%" y="869" width="0.0328%" height="15" fill="rgb(232,45,27)" fg:x="73" fg:w="3"/><text x="1.0479%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="0.7979%" y="853" width="0.0328%" height="15" fill="rgb(249,103,42)" fg:x="73" fg:w="3"/><text x="1.0479%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.03%)</title><rect x="0.7979%" y="837" width="0.0328%" height="15" fill="rgb(246,81,33)" fg:x="73" fg:w="3"/><text x="1.0479%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::allocate (3 samples, 0.03%)</title><rect x="0.7979%" y="821" width="0.0328%" height="15" fill="rgb(252,33,42)" fg:x="73" fg:w="3"/><text x="1.0479%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="0.7979%" y="805" width="0.0328%" height="15" fill="rgb(209,212,41)" fg:x="73" fg:w="3"/><text x="1.0479%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="0.7979%" y="789" width="0.0328%" height="15" fill="rgb(207,154,6)" fg:x="73" fg:w="3"/><text x="1.0479%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::read_volatile (3 samples, 0.03%)</title><rect x="0.7979%" y="773" width="0.0328%" height="15" fill="rgb(223,64,47)" fg:x="73" fg:w="3"/><text x="1.0479%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (3 samples, 0.03%)</title><rect x="0.7979%" y="757" width="0.0328%" height="15" fill="rgb(211,161,38)" fg:x="73" fg:w="3"/><text x="1.0479%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches (2 samples, 0.02%)</title><rect x="0.8088%" y="741" width="0.0219%" height="15" fill="rgb(219,138,40)" fg:x="74" fg:w="2"/><text x="1.0588%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches_from (2 samples, 0.02%)</title><rect x="0.8088%" y="725" width="0.0219%" height="15" fill="rgb(241,228,46)" fg:x="74" fg:w="2"/><text x="1.0588%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (2 samples, 0.02%)</title><rect x="0.8088%" y="709" width="0.0219%" height="15" fill="rgb(223,209,38)" fg:x="74" fg:w="2"/><text x="1.0588%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (2 samples, 0.02%)</title><rect x="0.8088%" y="693" width="0.0219%" height="15" fill="rgb(236,164,45)" fg:x="74" fg:w="2"/><text x="1.0588%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (2 samples, 0.02%)</title><rect x="0.8088%" y="677" width="0.0219%" height="15" fill="rgb(231,15,5)" fg:x="74" fg:w="2"/><text x="1.0588%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::_do_parse (2 samples, 0.02%)</title><rect x="0.8088%" y="661" width="0.0219%" height="15" fill="rgb(252,35,15)" fg:x="74" fg:w="2"/><text x="1.0588%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.01%)</title><rect x="0.8198%" y="645" width="0.0109%" height="15" fill="rgb(248,181,18)" fg:x="75" fg:w="1"/><text x="1.0698%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::parser::Parser::add_defaults (1 samples, 0.01%)</title><rect x="0.8198%" y="629" width="0.0109%" height="15" fill="rgb(233,39,42)" fg:x="75" fg:w="1"/><text x="1.0698%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::parser::Parser::add_default_value (1 samples, 0.01%)</title><rect x="0.8198%" y="613" width="0.0109%" height="15" fill="rgb(238,110,33)" fg:x="75" fg:w="1"/><text x="1.0698%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::parser::Parser::react(enum2$&lt;core::option::Option&lt;clap_builder::parser::parser::Identifier&gt; &gt;, clap_builder::parser::matches::value_source::ValueSource, clap_builder::builder::arg::Arg*, alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;, enum2$&lt;core::option::Option (1 samples, 0.01%)</title><rect x="0.8198%" y="597" width="0.0109%" height="15" fill="rgb(233,195,10)" fg:x="75" fg:w="1"/><text x="1.0698%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::parser::Parser::push_arg_values(clap_builder::builder::arg::Arg*, alloc::vec::Vec (1 samples, 0.01%)</title><rect x="0.8198%" y="581" width="0.0109%" height="15" fill="rgb(254,105,3)" fg:x="75" fg:w="1"/><text x="1.0698%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::arg_matcher::ArgMatcher::add_index_to (1 samples, 0.01%)</title><rect x="0.8198%" y="565" width="0.0109%" height="15" fill="rgb(221,225,9)" fg:x="75" fg:w="1"/><text x="1.0698%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::matches::matched_arg::MatchedArg::push_index (1 samples, 0.01%)</title><rect x="0.8198%" y="549" width="0.0109%" height="15" fill="rgb(224,227,45)" fg:x="75" fg:w="1"/><text x="1.0698%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;usize,alloc::alloc::Global&gt;::push (1 samples, 0.01%)</title><rect x="0.8198%" y="533" width="0.0109%" height="15" fill="rgb(229,198,43)" fg:x="75" fg:w="1"/><text x="1.0698%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;usize,alloc::alloc::Global&gt;::grow_one&lt;usize,alloc::alloc::Global&gt; (1 samples, 0.01%)</title><rect x="0.8198%" y="517" width="0.0109%" height="15" fill="rgb(206,209,35)" fg:x="75" fg:w="1"/><text x="1.0698%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::BenchmarkId::ensure_directory_name_unique(std::collections::hash::set::HashSet (1 samples, 0.01%)</title><rect x="0.8307%" y="997" width="0.0109%" height="15" fill="rgb(245,195,53)" fg:x="76" fg:w="1"/><text x="1.0807%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::BenchmarkId::as_directory_name (1 samples, 0.01%)</title><rect x="0.8307%" y="981" width="0.0109%" height="15" fill="rgb(240,92,26)" fg:x="76" fg:w="1"/><text x="1.0807%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::string::impl$28::deref (1 samples, 0.01%)</title><rect x="0.8307%" y="965" width="0.0109%" height="15" fill="rgb(207,40,23)" fg:x="76" fg:w="1"/><text x="1.0807%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (1 samples, 0.01%)</title><rect x="0.8307%" y="949" width="0.0109%" height="15" fill="rgb(223,111,35)" fg:x="76" fg:w="1"/><text x="1.0807%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_ptr (1 samples, 0.01%)</title><rect x="0.8307%" y="933" width="0.0109%" height="15" fill="rgb(229,147,28)" fg:x="76" fg:w="1"/><text x="1.0807%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::ptr (1 samples, 0.01%)</title><rect x="0.8307%" y="917" width="0.0109%" height="15" fill="rgb(211,29,28)" fg:x="76" fg:w="1"/><text x="1.0807%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.01%)</title><rect x="0.8307%" y="901" width="0.0109%" height="15" fill="rgb(228,72,33)" fg:x="76" fg:w="1"/><text x="1.0807%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.01%)</title><rect x="0.8307%" y="885" width="0.0109%" height="15" fill="rgb(205,214,31)" fg:x="76" fg:w="1"/><text x="1.0807%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::BenchmarkId::new(alloc::string::String, enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;, enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;, enum2$&lt;core::option::Option&lt;enum2$ (1 samples, 0.01%)</title><rect x="0.8307%" y="869" width="0.0109%" height="15" fill="rgb(224,111,15)" fg:x="76" fg:w="1"/><text x="1.0807%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::string::impl$6::clone (1 samples, 0.01%)</title><rect x="0.8307%" y="853" width="0.0109%" height="15" fill="rgb(253,21,26)" fg:x="76" fg:w="1"/><text x="1.0807%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$11::clone (1 samples, 0.01%)</title><rect x="0.8307%" y="837" width="0.0109%" height="15" fill="rgb(245,139,43)" fg:x="76" fg:w="1"/><text x="1.0807%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec_in (1 samples, 0.01%)</title><rect x="0.8307%" y="821" width="0.0109%" height="15" fill="rgb(252,170,7)" fg:x="76" fg:w="1"/><text x="1.0807%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="0.8307%" y="805" width="0.0109%" height="15" fill="rgb(231,118,14)" fg:x="76" fg:w="1"/><text x="1.0807%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::impl$1::to_vec (1 samples, 0.01%)</title><rect x="0.8307%" y="789" width="0.0109%" height="15" fill="rgb(238,83,0)" fg:x="76" fg:w="1"/><text x="1.0807%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="0.8307%" y="773" width="0.0109%" height="15" fill="rgb(221,39,39)" fg:x="76" fg:w="1"/><text x="1.0807%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="0.8307%" y="757" width="0.0109%" height="15" fill="rgb(222,119,46)" fg:x="76" fg:w="1"/><text x="1.0807%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::impl$5::test_pass (1 samples, 0.01%)</title><rect x="0.8416%" y="997" width="0.0109%" height="15" fill="rgb(222,165,49)" fg:x="77" fg:w="1"/><text x="1.0916%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::impl$7::test_pass (1 samples, 0.01%)</title><rect x="0.8416%" y="981" width="0.0109%" height="15" fill="rgb(219,113,52)" fg:x="77" fg:w="1"/><text x="1.0916%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::_print (1 samples, 0.01%)</title><rect x="0.8416%" y="965" width="0.0109%" height="15" fill="rgb(214,7,15)" fg:x="77" fg:w="1"/><text x="1.0916%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::print_to (1 samples, 0.01%)</title><rect x="0.8416%" y="949" width="0.0109%" height="15" fill="rgb(235,32,4)" fg:x="77" fg:w="1"/><text x="1.0916%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$15::write_fmt (1 samples, 0.01%)</title><rect x="0.8416%" y="933" width="0.0109%" height="15" fill="rgb(238,90,54)" fg:x="77" fg:w="1"/><text x="1.0916%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$16::write_fmt (1 samples, 0.01%)</title><rect x="0.8416%" y="917" width="0.0109%" height="15" fill="rgb(213,208,19)" fg:x="77" fg:w="1"/><text x="1.0916%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt (1 samples, 0.01%)</title><rect x="0.8416%" y="901" width="0.0109%" height="15" fill="rgb(233,156,4)" fg:x="77" fg:w="1"/><text x="1.0916%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::fmt::write (1 samples, 0.01%)</title><rect x="0.8416%" y="885" width="0.0109%" height="15" fill="rgb(207,194,5)" fg:x="77" fg:w="1"/><text x="1.0916%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.01%)</title><rect x="0.8416%" y="869" width="0.0109%" height="15" fill="rgb(206,111,30)" fg:x="77" fg:w="1"/><text x="1.0916%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$19::write_all (1 samples, 0.01%)</title><rect x="0.8416%" y="853" width="0.0109%" height="15" fill="rgb(243,70,54)" fg:x="77" fg:w="1"/><text x="1.0916%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cell::RefCell::borrow_mut (1 samples, 0.01%)</title><rect x="0.8416%" y="837" width="0.0109%" height="15" fill="rgb(242,28,8)" fg:x="77" fg:w="1"/><text x="1.0916%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.01%)</title><rect x="0.8416%" y="821" width="0.0109%" height="15" fill="rgb(219,106,18)" fg:x="77" fg:w="1"/><text x="1.0916%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$1::write_all (1 samples, 0.01%)</title><rect x="0.8416%" y="805" width="0.0109%" height="15" fill="rgb(244,222,10)" fg:x="77" fg:w="1"/><text x="1.0916%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::handle_ebadf (1 samples, 0.01%)</title><rect x="0.8416%" y="789" width="0.0109%" height="15" fill="rgb(236,179,52)" fg:x="77" fg:w="1"/><text x="1.0916%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_all&lt;std::sys::pal::windows::stdio::Stdout&gt; (1 samples, 0.01%)</title><rect x="0.8416%" y="773" width="0.0109%" height="15" fill="rgb(213,23,39)" fg:x="77" fg:w="1"/><text x="1.0916%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write (1 samples, 0.01%)</title><rect x="0.8416%" y="757" width="0.0109%" height="15" fill="rgb(238,48,10)" fg:x="77" fg:w="1"/><text x="1.0916%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (1 samples, 0.01%)</title><rect x="0.8416%" y="741" width="0.0109%" height="15" fill="rgb(251,196,23)" fg:x="77" fg:w="1"/><text x="1.0916%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write_u16s (1 samples, 0.01%)</title><rect x="0.8416%" y="725" width="0.0109%" height="15" fill="rgb(250,152,24)" fg:x="77" fg:w="1"/><text x="1.0916%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (1 samples, 0.01%)</title><rect x="0.8416%" y="709" width="0.0109%" height="15" fill="rgb(209,150,17)" fg:x="77" fg:w="1"/><text x="1.0916%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.01%)</title><rect x="0.8416%" y="693" width="0.0109%" height="15" fill="rgb(234,202,34)" fg:x="77" fg:w="1"/><text x="1.0916%" y="703.50"></text></g><g><title>`0x7FFE41242E4E (1 samples, 0.01%)</title><rect x="0.8416%" y="677" width="0.0109%" height="15" fill="rgb(253,148,53)" fg:x="77" fg:w="1"/><text x="1.0916%" y="687.50"></text></g><g><title>`0x7FFE41242EE3 (1 samples, 0.01%)</title><rect x="0.8416%" y="661" width="0.0109%" height="15" fill="rgb(218,129,16)" fg:x="77" fg:w="1"/><text x="1.0916%" y="671.50"></text></g><g><title>`0x7FFE41243219 (1 samples, 0.01%)</title><rect x="0.8416%" y="645" width="0.0109%" height="15" fill="rgb(216,85,19)" fg:x="77" fg:w="1"/><text x="1.0916%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (1,849 samples, 20.21%)</title><rect x="0.8526%" y="645" width="20.2099%" height="15" fill="rgb(235,228,7)" fg:x="78" fg:w="1849"/><text x="1.1026%" y="655.50">my_benchmark-c9a97925f9d084bf.ex..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1,849 samples, 20.21%)</title><rect x="0.8526%" y="629" width="20.2099%" height="15" fill="rgb(245,175,0)" fg:x="78" fg:w="1849"/><text x="1.1026%" y="639.50">my_benchmark-c9a97925f9d084bf.ex..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$76::lt (1,277 samples, 13.96%)</title><rect x="7.1046%" y="613" width="13.9578%" height="15" fill="rgb(208,168,36)" fg:x="650" fg:w="1277"/><text x="7.3546%" y="623.50">my_benchmark-c9a97925..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$2::play(my_benchmark::NullAudioPlayer*, ref$&lt;slice2$ (372 samples, 4.07%)</title><rect x="16.9964%" y="597" width="4.0660%" height="15" fill="rgb(246,171,24)" fg:x="1555" fg:w="372"/><text x="17.2464%" y="607.50">my_b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt; &gt;(gb_core::gameboy::GameBoy (1 samples, 0.01%)</title><rect x="21.0624%" y="645" width="0.0109%" height="15" fill="rgb(215,142,24)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="21.0624%" y="629" width="0.0109%" height="15" fill="rgb(250,187,7)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="21.0624%" y="613" width="0.0109%" height="15" fill="rgb(228,66,33)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (1 samples, 0.01%)</title><rect x="21.0624%" y="597" width="0.0109%" height="15" fill="rgb(234,215,21)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (1 samples, 0.01%)</title><rect x="21.0624%" y="581" width="0.0109%" height="15" fill="rgb(222,191,20)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt; &gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="21.0624%" y="565" width="0.0109%" height="15" fill="rgb(245,79,54)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::hardware::rom::Rom (1 samples, 0.01%)</title><rect x="21.0624%" y="549" width="0.0109%" height="15" fill="rgb(240,10,37)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="21.0624%" y="533" width="0.0109%" height="15" fill="rgb(214,192,32)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.01%)</title><rect x="21.0624%" y="517" width="0.0109%" height="15" fill="rgb(209,36,54)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="21.0624%" y="501" width="0.0109%" height="15" fill="rgb(220,10,11)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="21.0624%" y="485" width="0.0109%" height="15" fill="rgb(221,106,17)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.01%)</title><rect x="21.0624%" y="469" width="0.0109%" height="15" fill="rgb(251,142,44)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.01%)</title><rect x="21.0624%" y="453" width="0.0109%" height="15" fill="rgb(238,13,15)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="463.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.01%)</title><rect x="21.0624%" y="437" width="0.0109%" height="15" fill="rgb(208,107,27)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="447.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.01%)</title><rect x="21.0624%" y="421" width="0.0109%" height="15" fill="rgb(205,136,37)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="431.50"></text></g><g><title>`0x7FFE4394A0EC (1 samples, 0.01%)</title><rect x="21.0624%" y="405" width="0.0109%" height="15" fill="rgb(250,205,27)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="415.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.01%)</title><rect x="21.0624%" y="389" width="0.0109%" height="15" fill="rgb(210,80,43)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="399.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.01%)</title><rect x="21.0624%" y="373" width="0.0109%" height="15" fill="rgb(247,160,36)" fg:x="1927" fg:w="1"/><text x="21.3124%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;gb_core::hardware::sound::Sound&gt; (1 samples, 0.01%)</title><rect x="21.0733%" y="645" width="0.0109%" height="15" fill="rgb(234,13,49)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="21.0733%" y="629" width="0.0109%" height="15" fill="rgb(234,122,0)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.01%)</title><rect x="21.0733%" y="613" width="0.0109%" height="15" fill="rgb(207,146,38)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.01%)</title><rect x="21.0733%" y="597" width="0.0109%" height="15" fill="rgb(207,177,25)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="21.0733%" y="581" width="0.0109%" height="15" fill="rgb(211,178,42)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.01%)</title><rect x="21.0733%" y="565" width="0.0109%" height="15" fill="rgb(230,69,54)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.01%)</title><rect x="21.0733%" y="549" width="0.0109%" height="15" fill="rgb(214,135,41)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.01%)</title><rect x="21.0733%" y="533" width="0.0109%" height="15" fill="rgb(237,67,25)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="543.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.01%)</title><rect x="21.0733%" y="517" width="0.0109%" height="15" fill="rgb(222,189,50)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="527.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.01%)</title><rect x="21.0733%" y="501" width="0.0109%" height="15" fill="rgb(245,148,34)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="511.50"></text></g><g><title>`0x7FFE43949BE8 (1 samples, 0.01%)</title><rect x="21.0733%" y="485" width="0.0109%" height="15" fill="rgb(222,29,6)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="495.50"></text></g><g><title>`0x7FFE43954FDB (1 samples, 0.01%)</title><rect x="21.0733%" y="469" width="0.0109%" height="15" fill="rgb(221,189,43)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="479.50"></text></g><g><title>`0x7FFE439568BA (1 samples, 0.01%)</title><rect x="21.0733%" y="453" width="0.0109%" height="15" fill="rgb(207,36,27)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="463.50"></text></g><g><title>`0x7FFE43956968 (1 samples, 0.01%)</title><rect x="21.0733%" y="437" width="0.0109%" height="15" fill="rgb(217,90,24)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="447.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.01%)</title><rect x="21.0733%" y="421" width="0.0109%" height="15" fill="rgb(224,66,35)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="431.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.01%)</title><rect x="21.0733%" y="405" width="0.0109%" height="15" fill="rgb(221,13,50)" fg:x="1928" fg:w="1"/><text x="21.3233%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;::and_then(enum2$&lt;core::result::Result (2 samples, 0.02%)</title><rect x="21.0843%" y="645" width="0.0219%" height="15" fill="rgb(236,68,49)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci::closure$0 (2 samples, 0.02%)</title><rect x="21.0843%" y="629" width="0.0219%" height="15" fill="rgb(229,146,28)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (2 samples, 0.02%)</title><rect x="21.0843%" y="613" width="0.0219%" height="15" fill="rgb(225,31,38)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::impl$5::read_buf (2 samples, 0.02%)</title><rect x="21.0843%" y="597" width="0.0219%" height="15" fill="rgb(250,208,3)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::read_buf (2 samples, 0.02%)</title><rect x="21.0843%" y="581" width="0.0219%" height="15" fill="rgb(246,54,23)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read_buf (2 samples, 0.02%)</title><rect x="21.0843%" y="565" width="0.0219%" height="15" fill="rgb(243,76,11)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::synchronous_read (2 samples, 0.02%)</title><rect x="21.0843%" y="549" width="0.0219%" height="15" fill="rgb(245,21,50)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="559.50"></text></g><g><title>`0x7FFE439B0194 (2 samples, 0.02%)</title><rect x="21.0843%" y="533" width="0.0219%" height="15" fill="rgb(228,9,43)" fg:x="1929" fg:w="2"/><text x="21.3343%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;usize,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result (1 samples, 0.01%)</title><rect x="21.1061%" y="645" width="0.0109%" height="15" fill="rgb(208,100,47)" fg:x="1931" fg:w="1"/><text x="21.3561%" y="655.50"></text></g><g><title>`0x7FFE412292BF (1 samples, 0.01%)</title><rect x="21.1061%" y="629" width="0.0109%" height="15" fill="rgb(232,26,8)" fg:x="1931" fg:w="1"/><text x="21.3561%" y="639.50"></text></g><g><title>`0x7FFE439B02B4 (1 samples, 0.01%)</title><rect x="21.1061%" y="613" width="0.0109%" height="15" fill="rgb(216,166,38)" fg:x="1931" fg:w="1"/><text x="21.3561%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::create_from_state(my_benchmark::DummyScreen, alloc::boxed::Box&lt;dyn$&lt;gb_core::hardware::cartridge::Cartridge&gt;,alloc::alloc::Global&gt;, gb_core::hardware::boot_rom::Bootrom, alloc::boxed::Box&lt;dyn$ (1 samples, 0.01%)</title><rect x="21.1171%" y="645" width="0.0109%" height="15" fill="rgb(251,202,51)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;::create_from_state(my_benchmark::DummyScreen, alloc::boxed::Box&lt;dyn$&lt;gb_core::hardware::cartridge::Cartridge&gt;,alloc::alloc::Global&gt;, gb_core::hardware::boot_rom::Bootrom, alloc::boxed::Box&lt;dyn$ (1 samples, 0.01%)</title><rect x="21.1171%" y="629" width="0.0109%" height="15" fill="rgb(254,216,34)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::new_dmg(alloc::boxed::Box&lt;dyn$ (1 samples, 0.01%)</title><rect x="21.1171%" y="613" width="0.0109%" height="15" fill="rgb(251,32,27)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::new_internal(alloc::boxed::Box&lt;dyn$ (1 samples, 0.01%)</title><rect x="21.1171%" y="597" width="0.0109%" height="15" fill="rgb(208,127,28)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::create_blipbuf (1 samples, 0.01%)</title><rect x="21.1171%" y="581" width="0.0109%" height="15" fill="rgb(224,137,22)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::blip_buf::Blip::new (1 samples, 0.01%)</title><rect x="21.1171%" y="565" width="0.0109%" height="15" fill="rgb(254,70,32)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::from_elem (1 samples, 0.01%)</title><rect x="21.1171%" y="549" width="0.0109%" height="15" fill="rgb(229,75,37)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_elem::impl$1::from_elem (1 samples, 0.01%)</title><rect x="21.1171%" y="533" width="0.0109%" height="15" fill="rgb(252,64,23)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;i32,alloc::alloc::Global&gt;::with_capacity_zeroed_in (1 samples, 0.01%)</title><rect x="21.1171%" y="517" width="0.0109%" height="15" fill="rgb(232,162,48)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_zeroed_in (1 samples, 0.01%)</title><rect x="21.1171%" y="501" width="0.0109%" height="15" fill="rgb(246,160,12)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.01%)</title><rect x="21.1171%" y="485" width="0.0109%" height="15" fill="rgb(247,166,0)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="495.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.01%)</title><rect x="21.1171%" y="469" width="0.0109%" height="15" fill="rgb(249,219,21)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="479.50"></text></g><g><title>`0x7FFE4394F613 (1 samples, 0.01%)</title><rect x="21.1171%" y="453" width="0.0109%" height="15" fill="rgb(205,209,3)" fg:x="1932" fg:w="1"/><text x="21.3671%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="27.5768%" y="549" width="0.0109%" height="15" fill="rgb(243,44,1)" fg:x="2523" fg:w="1"/><text x="27.8268%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (3 samples, 0.03%)</title><rect x="27.5659%" y="565" width="0.0328%" height="15" fill="rgb(206,159,16)" fg:x="2522" fg:w="3"/><text x="27.8159%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="27.5877%" y="549" width="0.0109%" height="15" fill="rgb(244,77,30)" fg:x="2524" fg:w="1"/><text x="27.8377%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (9 samples, 0.10%)</title><rect x="27.5440%" y="581" width="0.0984%" height="15" fill="rgb(218,69,12)" fg:x="2520" fg:w="9"/><text x="27.7940%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="27.5986%" y="565" width="0.0437%" height="15" fill="rgb(212,87,7)" fg:x="2525" fg:w="4"/><text x="27.8486%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::add16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (20 samples, 0.22%)</title><rect x="27.5112%" y="597" width="0.2186%" height="15" fill="rgb(245,114,25)" fg:x="2517" fg:w="20"/><text x="27.7612%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$3::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (8 samples, 0.09%)</title><rect x="27.6424%" y="581" width="0.0874%" height="15" fill="rgb(210,61,42)" fg:x="2529" fg:w="8"/><text x="27.8924%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_bc (5 samples, 0.05%)</title><rect x="27.6752%" y="565" width="0.0547%" height="15" fill="rgb(211,52,33)" fg:x="2532" fg:w="5"/><text x="27.9252%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::add&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (1 samples, 0.01%)</title><rect x="27.7298%" y="597" width="0.0109%" height="15" fill="rgb(234,58,33)" fg:x="2537" fg:w="1"/><text x="27.9798%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::add&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.01%)</title><rect x="27.7407%" y="597" width="0.0109%" height="15" fill="rgb(220,115,36)" fg:x="2538" fg:w="1"/><text x="27.9907%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="27.8063%" y="565" width="0.0109%" height="15" fill="rgb(243,153,54)" fg:x="2544" fg:w="1"/><text x="28.0563%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (4 samples, 0.04%)</title><rect x="27.7954%" y="581" width="0.0437%" height="15" fill="rgb(251,47,18)" fg:x="2543" fg:w="4"/><text x="28.0454%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="27.8172%" y="565" width="0.0219%" height="15" fill="rgb(242,102,42)" fg:x="2545" fg:w="2"/><text x="28.0672%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="27.8391%" y="581" width="0.0109%" height="15" fill="rgb(234,31,38)" fg:x="2547" fg:w="1"/><text x="28.0891%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.01%)</title><rect x="27.8391%" y="565" width="0.0109%" height="15" fill="rgb(221,117,51)" fg:x="2547" fg:w="1"/><text x="28.0891%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (1 samples, 0.01%)</title><rect x="27.8391%" y="549" width="0.0109%" height="15" fill="rgb(212,20,18)" fg:x="2547" fg:w="1"/><text x="28.0891%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.01%)</title><rect x="27.8391%" y="533" width="0.0109%" height="15" fill="rgb(245,133,36)" fg:x="2547" fg:w="1"/><text x="28.0891%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="27.8500%" y="581" width="0.0109%" height="15" fill="rgb(212,6,19)" fg:x="2548" fg:w="1"/><text x="28.1000%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (14 samples, 0.15%)</title><rect x="27.7517%" y="597" width="0.1530%" height="15" fill="rgb(218,1,36)" fg:x="2539" fg:w="14"/><text x="28.0017%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="27.8610%" y="581" width="0.0437%" height="15" fill="rgb(246,84,54)" fg:x="2549" fg:w="4"/><text x="28.1110%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="28.0359%" y="565" width="0.0219%" height="15" fill="rgb(242,110,6)" fg:x="2565" fg:w="2"/><text x="28.2859%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="28.0577%" y="565" width="0.0437%" height="15" fill="rgb(214,47,5)" fg:x="2567" fg:w="4"/><text x="28.3077%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (19 samples, 0.21%)</title><rect x="27.9047%" y="597" width="0.2077%" height="15" fill="rgb(218,159,25)" fg:x="2553" fg:w="19"/><text x="28.1547%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (11 samples, 0.12%)</title><rect x="27.9921%" y="581" width="0.1202%" height="15" fill="rgb(215,211,28)" fg:x="2561" fg:w="11"/><text x="28.2421%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="28.1014%" y="565" width="0.0109%" height="15" fill="rgb(238,59,32)" fg:x="2571" fg:w="1"/><text x="28.3514%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (1 samples, 0.01%)</title><rect x="28.1014%" y="549" width="0.0109%" height="15" fill="rgb(226,82,3)" fg:x="2571" fg:w="1"/><text x="28.3514%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="28.2217%" y="533" width="0.0109%" height="15" fill="rgb(240,164,32)" fg:x="2582" fg:w="1"/><text x="28.4717%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (7 samples, 0.08%)</title><rect x="28.1998%" y="549" width="0.0765%" height="15" fill="rgb(232,46,7)" fg:x="2580" fg:w="7"/><text x="28.4498%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (4 samples, 0.04%)</title><rect x="28.2326%" y="533" width="0.0437%" height="15" fill="rgb(229,129,53)" fg:x="2583" fg:w="4"/><text x="28.4826%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (13 samples, 0.14%)</title><rect x="28.1779%" y="565" width="0.1421%" height="15" fill="rgb(234,188,29)" fg:x="2578" fg:w="13"/><text x="28.4279%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="28.2763%" y="549" width="0.0437%" height="15" fill="rgb(246,141,4)" fg:x="2587" fg:w="4"/><text x="28.5263%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_sub (1 samples, 0.01%)</title><rect x="28.3310%" y="549" width="0.0109%" height="15" fill="rgb(229,23,39)" fg:x="2592" fg:w="1"/><text x="28.5810%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16 (8 samples, 0.09%)</title><rect x="28.3200%" y="565" width="0.0874%" height="15" fill="rgb(206,12,3)" fg:x="2591" fg:w="8"/><text x="28.5700%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (6 samples, 0.07%)</title><rect x="28.3419%" y="549" width="0.0656%" height="15" fill="rgb(252,226,20)" fg:x="2593" fg:w="6"/><text x="28.5919%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_call&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (29 samples, 0.32%)</title><rect x="28.1670%" y="581" width="0.3170%" height="15" fill="rgb(216,123,35)" fg:x="2577" fg:w="29"/><text x="28.4170%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (7 samples, 0.08%)</title><rect x="28.4075%" y="565" width="0.0765%" height="15" fill="rgb(212,68,40)" fg:x="2599" fg:w="7"/><text x="28.6575%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.04%)</title><rect x="28.5058%" y="533" width="0.0437%" height="15" fill="rgb(254,125,32)" fg:x="2608" fg:w="4"/><text x="28.7558%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.02%)</title><rect x="28.5277%" y="517" width="0.0219%" height="15" fill="rgb(253,97,22)" fg:x="2610" fg:w="2"/><text x="28.7777%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (6 samples, 0.07%)</title><rect x="28.5058%" y="565" width="0.0656%" height="15" fill="rgb(241,101,14)" fg:x="2608" fg:w="6"/><text x="28.7558%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (6 samples, 0.07%)</title><rect x="28.5058%" y="549" width="0.0656%" height="15" fill="rgb(238,103,29)" fg:x="2608" fg:w="6"/><text x="28.7558%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="28.5496%" y="533" width="0.0219%" height="15" fill="rgb(233,195,47)" fg:x="2612" fg:w="2"/><text x="28.7996%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="28.5714%" y="533" width="0.0109%" height="15" fill="rgb(246,218,30)" fg:x="2614" fg:w="1"/><text x="28.8214%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="28.5714%" y="549" width="0.0219%" height="15" fill="rgb(219,145,47)" fg:x="2614" fg:w="2"/><text x="28.8214%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="28.5824%" y="533" width="0.0109%" height="15" fill="rgb(243,12,26)" fg:x="2615" fg:w="1"/><text x="28.8324%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::call (49 samples, 0.54%)</title><rect x="28.1124%" y="597" width="0.5356%" height="15" fill="rgb(214,87,16)" fg:x="2572" fg:w="49"/><text x="28.3624%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (15 samples, 0.16%)</title><rect x="28.4840%" y="581" width="0.1640%" height="15" fill="rgb(208,99,42)" fg:x="2606" fg:w="15"/><text x="28.7340%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (7 samples, 0.08%)</title><rect x="28.5714%" y="565" width="0.0765%" height="15" fill="rgb(253,99,2)" fg:x="2614" fg:w="7"/><text x="28.8214%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (5 samples, 0.05%)</title><rect x="28.5933%" y="549" width="0.0547%" height="15" fill="rgb(220,168,23)" fg:x="2616" fg:w="5"/><text x="28.8433%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="28.8338%" y="549" width="0.0109%" height="15" fill="rgb(242,38,24)" fg:x="2638" fg:w="1"/><text x="29.0838%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="28.8338%" y="533" width="0.0109%" height="15" fill="rgb(225,182,9)" fg:x="2638" fg:w="1"/><text x="29.0838%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="28.8338%" y="517" width="0.0109%" height="15" fill="rgb(243,178,37)" fg:x="2638" fg:w="1"/><text x="29.0838%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::bit&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(unsigned long long, enum2$ (7 samples, 0.08%)</title><rect x="28.8119%" y="565" width="0.0765%" height="15" fill="rgb(232,139,19)" fg:x="2636" fg:w="7"/><text x="29.0619%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="28.8447%" y="549" width="0.0437%" height="15" fill="rgb(225,201,24)" fg:x="2639" fg:w="4"/><text x="29.0947%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::bit&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (2 samples, 0.02%)</title><rect x="28.8884%" y="565" width="0.0219%" height="15" fill="rgb(221,47,46)" fg:x="2643" fg:w="2"/><text x="29.1384%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="28.8993%" y="549" width="0.0109%" height="15" fill="rgb(249,23,13)" fg:x="2644" fg:w="1"/><text x="29.1493%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="28.8993%" y="533" width="0.0109%" height="15" fill="rgb(219,9,5)" fg:x="2644" fg:w="1"/><text x="29.1493%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::res&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(unsigned long long, enum2$ (1 samples, 0.01%)</title><rect x="28.9103%" y="565" width="0.0109%" height="15" fill="rgb(254,171,16)" fg:x="2645" fg:w="1"/><text x="29.1603%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$10::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (1 samples, 0.01%)</title><rect x="28.9103%" y="549" width="0.0109%" height="15" fill="rgb(230,171,20)" fg:x="2645" fg:w="1"/><text x="29.1603%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="28.9103%" y="533" width="0.0109%" height="15" fill="rgb(210,71,41)" fg:x="2645" fg:w="1"/><text x="29.1603%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rl&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.01%)</title><rect x="28.9212%" y="565" width="0.0109%" height="15" fill="rgb(206,173,20)" fg:x="2646" fg:w="1"/><text x="29.1712%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="28.9212%" y="549" width="0.0109%" height="15" fill="rgb(233,88,34)" fg:x="2646" fg:w="1"/><text x="29.1712%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="28.9212%" y="533" width="0.0109%" height="15" fill="rgb(223,209,46)" fg:x="2646" fg:w="1"/><text x="29.1712%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rrc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.01%)</title><rect x="28.9321%" y="565" width="0.0109%" height="15" fill="rgb(250,43,18)" fg:x="2647" fg:w="1"/><text x="29.1821%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="28.9321%" y="549" width="0.0109%" height="15" fill="rgb(208,13,10)" fg:x="2647" fg:w="1"/><text x="29.1821%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="28.9321%" y="533" width="0.0109%" height="15" fill="rgb(212,200,36)" fg:x="2647" fg:w="1"/><text x="29.1821%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::sla&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.01%)</title><rect x="28.9431%" y="565" width="0.0109%" height="15" fill="rgb(225,90,30)" fg:x="2648" fg:w="1"/><text x="29.1931%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="28.9431%" y="549" width="0.0109%" height="15" fill="rgb(236,182,39)" fg:x="2648" fg:w="1"/><text x="29.1931%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="28.9431%" y="533" width="0.0109%" height="15" fill="rgb(212,144,35)" fg:x="2648" fg:w="1"/><text x="29.1931%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::srl&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (2 samples, 0.02%)</title><rect x="28.9540%" y="565" width="0.0219%" height="15" fill="rgb(228,63,44)" fg:x="2649" fg:w="2"/><text x="29.2040%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="28.9649%" y="549" width="0.0109%" height="15" fill="rgb(228,109,6)" fg:x="2650" fg:w="1"/><text x="29.2149%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_decode_execute (30 samples, 0.33%)</title><rect x="28.6807%" y="581" width="0.3279%" height="15" fill="rgb(238,117,24)" fg:x="2624" fg:w="30"/><text x="28.9307%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::swap&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (3 samples, 0.03%)</title><rect x="28.9758%" y="565" width="0.0328%" height="15" fill="rgb(242,26,26)" fg:x="2651" fg:w="3"/><text x="29.2258%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="28.9977%" y="549" width="0.0109%" height="15" fill="rgb(221,92,48)" fg:x="2653" fg:w="1"/><text x="29.2477%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.01%)</title><rect x="29.0086%" y="581" width="0.0109%" height="15" fill="rgb(209,209,32)" fg:x="2654" fg:w="1"/><text x="29.2586%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (1 samples, 0.01%)</title><rect x="29.0086%" y="565" width="0.0109%" height="15" fill="rgb(221,70,22)" fg:x="2654" fg:w="1"/><text x="29.2586%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="29.0524%" y="565" width="0.0109%" height="15" fill="rgb(248,145,5)" fg:x="2658" fg:w="1"/><text x="29.3024%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (7 samples, 0.08%)</title><rect x="29.0196%" y="581" width="0.0765%" height="15" fill="rgb(226,116,26)" fg:x="2655" fg:w="7"/><text x="29.2696%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.03%)</title><rect x="29.0633%" y="565" width="0.0328%" height="15" fill="rgb(244,5,17)" fg:x="2659" fg:w="3"/><text x="29.3133%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_prefix&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (44 samples, 0.48%)</title><rect x="28.6479%" y="597" width="0.4809%" height="15" fill="rgb(252,159,33)" fg:x="2621" fg:w="44"/><text x="28.8979%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (3 samples, 0.03%)</title><rect x="29.0961%" y="581" width="0.0328%" height="15" fill="rgb(206,71,0)" fg:x="2662" fg:w="3"/><text x="29.3461%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="29.2710%" y="565" width="0.0109%" height="15" fill="rgb(233,118,54)" fg:x="2678" fg:w="1"/><text x="29.5210%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (3 samples, 0.03%)</title><rect x="29.2600%" y="581" width="0.0328%" height="15" fill="rgb(234,83,48)" fg:x="2677" fg:w="3"/><text x="29.5100%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (1 samples, 0.01%)</title><rect x="29.2819%" y="565" width="0.0109%" height="15" fill="rgb(228,3,54)" fg:x="2679" fg:w="1"/><text x="29.5319%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.01%)</title><rect x="29.2819%" y="549" width="0.0109%" height="15" fill="rgb(226,155,13)" fg:x="2679" fg:w="1"/><text x="29.5319%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="29.2819%" y="533" width="0.0109%" height="15" fill="rgb(241,28,37)" fg:x="2679" fg:w="1"/><text x="29.5319%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="29.2819%" y="517" width="0.0109%" height="15" fill="rgb(233,93,10)" fg:x="2679" fg:w="1"/><text x="29.5319%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="29.8503%" y="533" width="0.0109%" height="15" fill="rgb(225,113,19)" fg:x="2731" fg:w="1"/><text x="30.1003%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (29 samples, 0.32%)</title><rect x="29.6098%" y="549" width="0.3170%" height="15" fill="rgb(241,2,18)" fg:x="2709" fg:w="29"/><text x="29.8598%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (6 samples, 0.07%)</title><rect x="29.8612%" y="533" width="0.0656%" height="15" fill="rgb(228,207,21)" fg:x="2732" fg:w="6"/><text x="30.1112%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (72 samples, 0.79%)</title><rect x="29.4896%" y="565" width="0.7870%" height="15" fill="rgb(213,211,35)" fg:x="2698" fg:w="72"/><text x="29.7396%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (32 samples, 0.35%)</title><rect x="29.9268%" y="549" width="0.3498%" height="15" fill="rgb(209,83,10)" fg:x="2738" fg:w="32"/><text x="30.1768%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.01%)</title><rect x="30.4405%" y="549" width="0.0109%" height="15" fill="rgb(209,164,1)" fg:x="2785" fg:w="1"/><text x="30.6905%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (2 samples, 0.02%)</title><rect x="30.8340%" y="533" width="0.0219%" height="15" fill="rgb(213,184,43)" fg:x="2821" fg:w="2"/><text x="31.0840%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (41 samples, 0.45%)</title><rect x="30.4514%" y="549" width="0.4481%" height="15" fill="rgb(231,61,34)" fg:x="2786" fg:w="41"/><text x="30.7014%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (4 samples, 0.04%)</title><rect x="30.8558%" y="533" width="0.0437%" height="15" fill="rgb(235,75,3)" fg:x="2823" fg:w="4"/><text x="31.1058%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctrl_jr (109 samples, 1.19%)</title><rect x="30.2765%" y="565" width="1.1914%" height="15" fill="rgb(220,106,47)" fg:x="2770" fg:w="109"/><text x="30.5265%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (52 samples, 0.57%)</title><rect x="30.8996%" y="549" width="0.5684%" height="15" fill="rgb(210,196,33)" fg:x="2827" fg:w="52"/><text x="31.1496%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (218 samples, 2.38%)</title><rect x="29.1289%" y="597" width="2.3828%" height="15" fill="rgb(229,154,42)" fg:x="2665" fg:w="218"/><text x="29.3789%" y="607.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jr_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (203 samples, 2.22%)</title><rect x="29.2928%" y="581" width="2.2188%" height="15" fill="rgb(228,114,26)" fg:x="2680" fg:w="203"/><text x="29.5428%" y="591.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (4 samples, 0.04%)</title><rect x="31.4679%" y="565" width="0.0437%" height="15" fill="rgb(208,144,1)" fg:x="2879" fg:w="4"/><text x="31.7179%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (7 samples, 0.08%)</title><rect x="31.5554%" y="565" width="0.0765%" height="15" fill="rgb(239,112,37)" fg:x="2887" fg:w="7"/><text x="31.8054%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.02%)</title><rect x="31.6100%" y="549" width="0.0219%" height="15" fill="rgb(210,96,50)" fg:x="2892" fg:w="2"/><text x="31.8600%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::alu_sub (12 samples, 0.13%)</title><rect x="31.5444%" y="581" width="0.1312%" height="15" fill="rgb(222,178,2)" fg:x="2886" fg:w="12"/><text x="31.7944%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="31.6319%" y="565" width="0.0437%" height="15" fill="rgb(226,74,18)" fg:x="2894" fg:w="4"/><text x="31.8819%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="31.6756%" y="565" width="0.0109%" height="15" fill="rgb(225,67,54)" fg:x="2898" fg:w="1"/><text x="31.9256%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cp&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (18 samples, 0.20%)</title><rect x="31.5116%" y="597" width="0.1967%" height="15" fill="rgb(251,92,32)" fg:x="2883" fg:w="18"/><text x="31.7616%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (3 samples, 0.03%)</title><rect x="31.6756%" y="581" width="0.0328%" height="15" fill="rgb(228,149,22)" fg:x="2898" fg:w="3"/><text x="31.9256%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="31.6865%" y="565" width="0.0219%" height="15" fill="rgb(243,54,13)" fg:x="2899" fg:w="2"/><text x="31.9365%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::alu_sub (18 samples, 0.20%)</title><rect x="31.7849%" y="581" width="0.1967%" height="15" fill="rgb(243,180,28)" fg:x="2908" fg:w="18"/><text x="32.0349%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (2 samples, 0.02%)</title><rect x="32.2768%" y="549" width="0.0219%" height="15" fill="rgb(208,167,24)" fg:x="2953" fg:w="2"/><text x="32.5268%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (24 samples, 0.26%)</title><rect x="32.0800%" y="565" width="0.2623%" height="15" fill="rgb(245,73,45)" fg:x="2935" fg:w="24"/><text x="32.3300%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (4 samples, 0.04%)</title><rect x="32.2986%" y="549" width="0.0437%" height="15" fill="rgb(237,203,48)" fg:x="2955" fg:w="4"/><text x="32.5486%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cp&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (69 samples, 0.75%)</title><rect x="31.7084%" y="597" width="0.7542%" height="15" fill="rgb(211,197,16)" fg:x="2901" fg:w="69"/><text x="31.9584%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (44 samples, 0.48%)</title><rect x="31.9816%" y="581" width="0.4809%" height="15" fill="rgb(243,99,51)" fg:x="2926" fg:w="44"/><text x="32.2316%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (11 samples, 0.12%)</title><rect x="32.3423%" y="565" width="0.1202%" height="15" fill="rgb(215,123,29)" fg:x="2959" fg:w="11"/><text x="32.5923%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cpl (2 samples, 0.02%)</title><rect x="32.4626%" y="597" width="0.0219%" height="15" fill="rgb(239,186,37)" fg:x="2970" fg:w="2"/><text x="32.7126%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (2 samples, 0.02%)</title><rect x="32.4626%" y="581" width="0.0219%" height="15" fill="rgb(252,136,39)" fg:x="2970" fg:w="2"/><text x="32.7126%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="32.4735%" y="565" width="0.0109%" height="15" fill="rgb(223,213,32)" fg:x="2971" fg:w="1"/><text x="32.7235%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::dec16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (3 samples, 0.03%)</title><rect x="32.4844%" y="597" width="0.0328%" height="15" fill="rgb(233,115,5)" fg:x="2972" fg:w="3"/><text x="32.7344%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (2 samples, 0.02%)</title><rect x="32.4954%" y="581" width="0.0219%" height="15" fill="rgb(207,226,44)" fg:x="2973" fg:w="2"/><text x="32.7454%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::dec&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(enum2$ (1 samples, 0.01%)</title><rect x="32.5172%" y="597" width="0.0109%" height="15" fill="rgb(208,126,0)" fg:x="2975" fg:w="1"/><text x="32.7672%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="32.5172%" y="581" width="0.0109%" height="15" fill="rgb(244,66,21)" fg:x="2975" fg:w="1"/><text x="32.7672%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="32.6047%" y="565" width="0.0109%" height="15" fill="rgb(222,97,12)" fg:x="2983" fg:w="1"/><text x="32.8547%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="32.6047%" y="549" width="0.0109%" height="15" fill="rgb(219,213,19)" fg:x="2983" fg:w="1"/><text x="32.8547%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (5 samples, 0.05%)</title><rect x="32.6156%" y="565" width="0.0547%" height="15" fill="rgb(252,169,30)" fg:x="2984" fg:w="5"/><text x="32.8656%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (13 samples, 0.14%)</title><rect x="32.5391%" y="581" width="0.1421%" height="15" fill="rgb(206,32,51)" fg:x="2977" fg:w="13"/><text x="32.7891%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="32.6702%" y="565" width="0.0109%" height="15" fill="rgb(250,172,42)" fg:x="2989" fg:w="1"/><text x="32.9202%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (1 samples, 0.01%)</title><rect x="32.6702%" y="549" width="0.0109%" height="15" fill="rgb(209,34,43)" fg:x="2989" fg:w="1"/><text x="32.9202%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::dec&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (15 samples, 0.16%)</title><rect x="32.5281%" y="597" width="0.1640%" height="15" fill="rgb(223,11,35)" fg:x="2976" fg:w="15"/><text x="32.7781%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="32.6812%" y="581" width="0.0109%" height="15" fill="rgb(251,219,26)" fg:x="2990" fg:w="1"/><text x="32.9312%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::halt&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (1 samples, 0.01%)</title><rect x="32.6921%" y="597" width="0.0109%" height="15" fill="rgb(231,119,3)" fg:x="2991" fg:w="1"/><text x="32.9421%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="32.6921%" y="581" width="0.0109%" height="15" fill="rgb(216,97,11)" fg:x="2991" fg:w="1"/><text x="32.9421%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::inc16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (2 samples, 0.02%)</title><rect x="32.7030%" y="597" width="0.0219%" height="15" fill="rgb(223,59,9)" fg:x="2992" fg:w="2"/><text x="32.9530%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="32.7140%" y="581" width="0.0109%" height="15" fill="rgb(233,93,31)" fg:x="2993" fg:w="1"/><text x="32.9640%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="32.7140%" y="565" width="0.0109%" height="15" fill="rgb(239,81,33)" fg:x="2993" fg:w="1"/><text x="32.9640%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_add (1 samples, 0.01%)</title><rect x="32.8451%" y="581" width="0.0109%" height="15" fill="rgb(213,120,34)" fg:x="3005" fg:w="1"/><text x="33.0951%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (8 samples, 0.09%)</title><rect x="32.8670%" y="565" width="0.0874%" height="15" fill="rgb(243,49,53)" fg:x="3007" fg:w="8"/><text x="33.1170%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.03%)</title><rect x="32.9216%" y="549" width="0.0328%" height="15" fill="rgb(247,216,33)" fg:x="3012" fg:w="3"/><text x="33.1716%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (5 samples, 0.05%)</title><rect x="32.9544%" y="565" width="0.0547%" height="15" fill="rgb(226,26,14)" fg:x="3015" fg:w="5"/><text x="33.2044%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (15 samples, 0.16%)</title><rect x="32.8560%" y="581" width="0.1640%" height="15" fill="rgb(215,49,53)" fg:x="3006" fg:w="15"/><text x="33.1060%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="33.0091%" y="565" width="0.0109%" height="15" fill="rgb(245,162,40)" fg:x="3020" fg:w="1"/><text x="33.2591%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (1 samples, 0.01%)</title><rect x="33.0091%" y="549" width="0.0109%" height="15" fill="rgb(229,68,17)" fg:x="3020" fg:w="1"/><text x="33.2591%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::inc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (32 samples, 0.35%)</title><rect x="32.7249%" y="597" width="0.3498%" height="15" fill="rgb(213,182,10)" fg:x="2994" fg:w="32"/><text x="32.9749%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (5 samples, 0.05%)</title><rect x="33.0200%" y="581" width="0.0547%" height="15" fill="rgb(245,125,30)" fg:x="3021" fg:w="5"/><text x="33.2700%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp (3 samples, 0.03%)</title><rect x="33.0747%" y="597" width="0.0328%" height="15" fill="rgb(232,202,2)" fg:x="3026" fg:w="3"/><text x="33.3247%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="33.1293%" y="565" width="0.0109%" height="15" fill="rgb(237,140,51)" fg:x="3031" fg:w="1"/><text x="33.3793%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="33.1293%" y="549" width="0.0109%" height="15" fill="rgb(236,157,25)" fg:x="3031" fg:w="1"/><text x="33.3793%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="33.1293%" y="533" width="0.0109%" height="15" fill="rgb(219,209,0)" fg:x="3031" fg:w="1"/><text x="33.3793%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="33.1402%" y="565" width="0.0219%" height="15" fill="rgb(240,116,54)" fg:x="3032" fg:w="2"/><text x="33.3902%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (2 samples, 0.02%)</title><rect x="33.1402%" y="549" width="0.0219%" height="15" fill="rgb(216,10,36)" fg:x="3032" fg:w="2"/><text x="33.3902%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jr&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (7 samples, 0.08%)</title><rect x="33.1074%" y="597" width="0.0765%" height="15" fill="rgb(222,72,44)" fg:x="3029" fg:w="7"/><text x="33.3574%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctrl_jr (5 samples, 0.05%)</title><rect x="33.1293%" y="581" width="0.0547%" height="15" fill="rgb(232,159,9)" fg:x="3031" fg:w="5"/><text x="33.3793%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="33.1621%" y="565" width="0.0219%" height="15" fill="rgb(210,39,32)" fg:x="3034" fg:w="2"/><text x="33.4121%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (5 samples, 0.05%)</title><rect x="33.2277%" y="581" width="0.0547%" height="15" fill="rgb(216,194,45)" fg:x="3040" fg:w="5"/><text x="33.4777%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (5 samples, 0.05%)</title><rect x="33.2277%" y="565" width="0.0547%" height="15" fill="rgb(218,18,35)" fg:x="3040" fg:w="5"/><text x="33.4777%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_bc (1 samples, 0.01%)</title><rect x="33.2933%" y="565" width="0.0109%" height="15" fill="rgb(207,83,51)" fg:x="3046" fg:w="1"/><text x="33.5433%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="33.3042%" y="565" width="0.0219%" height="15" fill="rgb(225,63,43)" fg:x="3047" fg:w="2"/><text x="33.5542%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (7 samples, 0.08%)</title><rect x="33.2823%" y="581" width="0.0765%" height="15" fill="rgb(207,57,36)" fg:x="3045" fg:w="7"/><text x="33.5323%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (3 samples, 0.03%)</title><rect x="33.3260%" y="565" width="0.0328%" height="15" fill="rgb(216,99,33)" fg:x="3049" fg:w="3"/><text x="33.5760%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="33.3698%" y="533" width="0.0219%" height="15" fill="rgb(225,42,16)" fg:x="3053" fg:w="2"/><text x="33.6198%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="33.3807%" y="517" width="0.0109%" height="15" fill="rgb(220,201,45)" fg:x="3054" fg:w="1"/><text x="33.6307%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate16,gb_core::cpu::registers::Reg16&gt; (20 samples, 0.22%)</title><rect x="33.1840%" y="597" width="0.2186%" height="15" fill="rgb(225,33,4)" fg:x="3036" fg:w="20"/><text x="33.4340%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$6::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="33.3588%" y="581" width="0.0437%" height="15" fill="rgb(224,33,50)" fg:x="3052" fg:w="4"/><text x="33.6088%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (4 samples, 0.04%)</title><rect x="33.3588%" y="565" width="0.0437%" height="15" fill="rgb(246,198,51)" fg:x="3052" fg:w="4"/><text x="33.6088%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (4 samples, 0.04%)</title><rect x="33.3588%" y="549" width="0.0437%" height="15" fill="rgb(205,22,4)" fg:x="3052" fg:w="4"/><text x="33.6088%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="33.3916%" y="533" width="0.0109%" height="15" fill="rgb(206,3,8)" fg:x="3055" fg:w="1"/><text x="33.6416%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_16_e&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16,gb_core::cpu::registers::Reg16&gt; (1 samples, 0.01%)</title><rect x="33.4026%" y="597" width="0.0109%" height="15" fill="rgb(251,23,15)" fg:x="3056" fg:w="1"/><text x="33.6526%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.03%)</title><rect x="33.9709%" y="549" width="0.0328%" height="15" fill="rgb(252,88,28)" fg:x="3108" fg:w="3"/><text x="34.2209%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (41 samples, 0.45%)</title><rect x="33.8070%" y="565" width="0.4481%" height="15" fill="rgb(212,127,14)" fg:x="3093" fg:w="41"/><text x="34.0570%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (23 samples, 0.25%)</title><rect x="34.0037%" y="549" width="0.2514%" height="15" fill="rgb(247,145,37)" fg:x="3111" fg:w="23"/><text x="34.2537%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (89 samples, 0.97%)</title><rect x="33.6977%" y="581" width="0.9728%" height="15" fill="rgb(209,117,53)" fg:x="3083" fg:w="89"/><text x="33.9477%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (38 samples, 0.42%)</title><rect x="34.2551%" y="565" width="0.4153%" height="15" fill="rgb(212,90,42)" fg:x="3134" fg:w="38"/><text x="34.5051%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (2 samples, 0.02%)</title><rect x="34.9109%" y="501" width="0.0219%" height="15" fill="rgb(218,164,37)" fg:x="3194" fg:w="2"/><text x="35.1609%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (10 samples, 0.11%)</title><rect x="34.8563%" y="517" width="0.1093%" height="15" fill="rgb(246,65,34)" fg:x="3189" fg:w="10"/><text x="35.1063%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.03%)</title><rect x="34.9328%" y="501" width="0.0328%" height="15" fill="rgb(231,100,33)" fg:x="3196" fg:w="3"/><text x="35.1828%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (14 samples, 0.15%)</title><rect x="34.8563%" y="549" width="0.1530%" height="15" fill="rgb(228,126,14)" fg:x="3189" fg:w="14"/><text x="35.1063%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (14 samples, 0.15%)</title><rect x="34.8563%" y="533" width="0.1530%" height="15" fill="rgb(215,173,21)" fg:x="3189" fg:w="14"/><text x="35.1063%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="34.9656%" y="517" width="0.0437%" height="15" fill="rgb(210,6,40)" fg:x="3199" fg:w="4"/><text x="35.2156%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (1 samples, 0.01%)</title><rect x="35.0093%" y="533" width="0.0109%" height="15" fill="rgb(212,48,18)" fg:x="3203" fg:w="1"/><text x="35.2593%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.01%)</title><rect x="35.0093%" y="517" width="0.0109%" height="15" fill="rgb(230,214,11)" fg:x="3203" fg:w="1"/><text x="35.2593%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.03%)</title><rect x="35.0967%" y="517" width="0.0328%" height="15" fill="rgb(254,105,39)" fg:x="3211" fg:w="3"/><text x="35.3467%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (12 samples, 0.13%)</title><rect x="35.0202%" y="533" width="0.1312%" height="15" fill="rgb(245,158,5)" fg:x="3204" fg:w="12"/><text x="35.2702%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.02%)</title><rect x="35.1295%" y="517" width="0.0219%" height="15" fill="rgb(249,208,11)" fg:x="3214" fg:w="2"/><text x="35.3795%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (29 samples, 0.32%)</title><rect x="34.8563%" y="565" width="0.3170%" height="15" fill="rgb(210,39,28)" fg:x="3189" fg:w="29"/><text x="35.1063%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (15 samples, 0.16%)</title><rect x="35.0093%" y="549" width="0.1640%" height="15" fill="rgb(211,56,53)" fg:x="3203" fg:w="15"/><text x="35.2593%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="35.1514%" y="533" width="0.0219%" height="15" fill="rgb(226,201,30)" fg:x="3216" fg:w="2"/><text x="35.4014%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (1 samples, 0.01%)</title><rect x="35.1732%" y="533" width="0.0109%" height="15" fill="rgb(239,101,34)" fg:x="3218" fg:w="1"/><text x="35.4232%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="35.1732%" y="565" width="0.0219%" height="15" fill="rgb(226,209,5)" fg:x="3218" fg:w="2"/><text x="35.4232%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (2 samples, 0.02%)</title><rect x="35.1732%" y="549" width="0.0219%" height="15" fill="rgb(250,105,47)" fg:x="3218" fg:w="2"/><text x="35.4232%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (1 samples, 0.01%)</title><rect x="35.1842%" y="533" width="0.0109%" height="15" fill="rgb(230,72,3)" fg:x="3219" fg:w="1"/><text x="35.4342%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.01%)</title><rect x="35.1842%" y="517" width="0.0109%" height="15" fill="rgb(232,218,39)" fg:x="3219" fg:w="1"/><text x="35.4342%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_hl (2 samples, 0.02%)</title><rect x="35.1951%" y="565" width="0.0219%" height="15" fill="rgb(248,166,6)" fg:x="3220" fg:w="2"/><text x="35.4451%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (5 samples, 0.05%)</title><rect x="35.4356%" y="549" width="0.0547%" height="15" fill="rgb(247,89,20)" fg:x="3242" fg:w="5"/><text x="35.6856%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (33 samples, 0.36%)</title><rect x="35.2170%" y="565" width="0.3607%" height="15" fill="rgb(248,130,54)" fg:x="3222" fg:w="33"/><text x="35.4670%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (8 samples, 0.09%)</title><rect x="35.4902%" y="549" width="0.0874%" height="15" fill="rgb(234,196,4)" fg:x="3247" fg:w="8"/><text x="35.7402%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$10::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (96 samples, 1.05%)</title><rect x="34.6705%" y="581" width="1.0493%" height="15" fill="rgb(250,143,31)" fg:x="3172" fg:w="96"/><text x="34.9205%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (13 samples, 0.14%)</title><rect x="35.5777%" y="565" width="0.1421%" height="15" fill="rgb(211,110,34)" fg:x="3255" fg:w="13"/><text x="35.8277%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_a (1 samples, 0.01%)</title><rect x="35.9056%" y="565" width="0.0109%" height="15" fill="rgb(215,124,48)" fg:x="3285" fg:w="1"/><text x="36.1556%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.04%)</title><rect x="35.9165%" y="565" width="0.0437%" height="15" fill="rgb(216,46,13)" fg:x="3286" fg:w="4"/><text x="36.1665%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::InputController::read_register (2 samples, 0.02%)</title><rect x="36.7581%" y="549" width="0.0219%" height="15" fill="rgb(205,184,25)" fg:x="3363" fg:w="2"/><text x="37.0081%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::P1::bits (1 samples, 0.01%)</title><rect x="36.7690%" y="533" width="0.0109%" height="15" fill="rgb(228,1,10)" fg:x="3364" fg:w="1"/><text x="37.0190%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::_::InternalBitFlags::bits (1 samples, 0.01%)</title><rect x="36.7690%" y="517" width="0.0109%" height="15" fill="rgb(213,116,27)" fg:x="3364" fg:w="1"/><text x="37.0190%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt;,gb_core::cpu::registers::Reg8&gt;(gb_core::cpu::registers::Reg8, enum2$ (309 samples, 3.38%)</title><rect x="33.4135%" y="597" width="3.3774%" height="15" fill="rgb(241,95,50)" fg:x="3057" fg:w="309"/><text x="33.6635%" y="607.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (98 samples, 1.07%)</title><rect x="35.7198%" y="581" width="1.0712%" height="15" fill="rgb(238,48,32)" fg:x="3268" fg:w="98"/><text x="35.9698%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (76 samples, 0.83%)</title><rect x="35.9602%" y="565" width="0.8307%" height="15" fill="rgb(235,113,49)" fg:x="3290" fg:w="76"/><text x="36.2102%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::get_current_line (1 samples, 0.01%)</title><rect x="36.7800%" y="549" width="0.0109%" height="15" fill="rgb(205,127,43)" fg:x="3365" fg:w="1"/><text x="37.0300%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.04%)</title><rect x="36.8893%" y="565" width="0.0437%" height="15" fill="rgb(250,162,2)" fg:x="3375" fg:w="4"/><text x="37.1393%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.02%)</title><rect x="36.9111%" y="549" width="0.0219%" height="15" fill="rgb(220,13,41)" fg:x="3377" fg:w="2"/><text x="37.1611%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (9 samples, 0.10%)</title><rect x="36.8783%" y="581" width="0.0984%" height="15" fill="rgb(249,221,25)" fg:x="3374" fg:w="9"/><text x="37.1283%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="36.9330%" y="565" width="0.0437%" height="15" fill="rgb(215,208,19)" fg:x="3379" fg:w="4"/><text x="37.1830%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="37.0095%" y="549" width="0.0109%" height="15" fill="rgb(236,175,2)" fg:x="3386" fg:w="1"/><text x="37.2595%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.05%)</title><rect x="36.9767%" y="565" width="0.0547%" height="15" fill="rgb(241,52,2)" fg:x="3383" fg:w="5"/><text x="37.2267%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="37.0204%" y="549" width="0.0109%" height="15" fill="rgb(248,140,14)" fg:x="3387" fg:w="1"/><text x="37.2704%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (10 samples, 0.11%)</title><rect x="36.9767%" y="581" width="0.1093%" height="15" fill="rgb(253,22,42)" fg:x="3383" fg:w="10"/><text x="37.2267%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (5 samples, 0.05%)</title><rect x="37.0314%" y="565" width="0.0547%" height="15" fill="rgb(234,61,47)" fg:x="3388" fg:w="5"/><text x="37.2814%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8,gb_core::cpu::registers::Reg8&gt; (28 samples, 0.31%)</title><rect x="36.7909%" y="597" width="0.3060%" height="15" fill="rgb(208,226,15)" fg:x="3366" fg:w="28"/><text x="37.0409%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="37.0860%" y="581" width="0.0109%" height="15" fill="rgb(217,221,4)" fg:x="3393" fg:w="1"/><text x="37.3360%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.01%)</title><rect x="37.0860%" y="565" width="0.0109%" height="15" fill="rgb(212,174,34)" fg:x="3393" fg:w="1"/><text x="37.3360%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="37.5123%" y="549" width="0.0109%" height="15" fill="rgb(253,83,4)" fg:x="3432" fg:w="1"/><text x="37.7623%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (14 samples, 0.15%)</title><rect x="37.4249%" y="565" width="0.1530%" height="15" fill="rgb(250,195,49)" fg:x="3424" fg:w="14"/><text x="37.6749%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (5 samples, 0.05%)</title><rect x="37.5232%" y="549" width="0.0547%" height="15" fill="rgb(241,192,25)" fg:x="3433" fg:w="5"/><text x="37.7732%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (12 samples, 0.13%)</title><rect x="37.5779%" y="565" width="0.1312%" height="15" fill="rgb(208,124,10)" fg:x="3438" fg:w="12"/><text x="37.8279%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (34 samples, 0.37%)</title><rect x="37.3483%" y="581" width="0.3716%" height="15" fill="rgb(222,33,0)" fg:x="3417" fg:w="34"/><text x="37.5983%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="37.7090%" y="565" width="0.0109%" height="15" fill="rgb(234,209,28)" fg:x="3450" fg:w="1"/><text x="37.9590%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (1 samples, 0.01%)</title><rect x="37.7090%" y="549" width="0.0109%" height="15" fill="rgb(224,11,23)" fg:x="3450" fg:w="1"/><text x="37.9590%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.03%)</title><rect x="37.9167%" y="517" width="0.0328%" height="15" fill="rgb(232,99,1)" fg:x="3469" fg:w="3"/><text x="38.1667%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (13 samples, 0.14%)</title><rect x="37.8402%" y="533" width="0.1421%" height="15" fill="rgb(237,95,45)" fg:x="3462" fg:w="13"/><text x="38.0902%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.03%)</title><rect x="37.9495%" y="517" width="0.0328%" height="15" fill="rgb(208,109,11)" fg:x="3472" fg:w="3"/><text x="38.1995%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (20 samples, 0.22%)</title><rect x="37.8293%" y="565" width="0.2186%" height="15" fill="rgb(216,190,48)" fg:x="3461" fg:w="20"/><text x="38.0793%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (20 samples, 0.22%)</title><rect x="37.8293%" y="549" width="0.2186%" height="15" fill="rgb(251,171,36)" fg:x="3461" fg:w="20"/><text x="38.0793%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (6 samples, 0.07%)</title><rect x="37.9823%" y="533" width="0.0656%" height="15" fill="rgb(230,62,22)" fg:x="3475" fg:w="6"/><text x="38.2323%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="38.0588%" y="533" width="0.0219%" height="15" fill="rgb(225,114,35)" fg:x="3482" fg:w="2"/><text x="38.3088%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="38.0697%" y="517" width="0.0109%" height="15" fill="rgb(215,118,42)" fg:x="3483" fg:w="1"/><text x="38.3197%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (5 samples, 0.05%)</title><rect x="38.0479%" y="565" width="0.0547%" height="15" fill="rgb(243,119,21)" fg:x="3481" fg:w="5"/><text x="38.2979%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (5 samples, 0.05%)</title><rect x="38.0479%" y="549" width="0.0547%" height="15" fill="rgb(252,177,53)" fg:x="3481" fg:w="5"/><text x="38.2979%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="38.0807%" y="533" width="0.0219%" height="15" fill="rgb(237,209,29)" fg:x="3484" fg:w="2"/><text x="38.3307%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$9::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (36 samples, 0.39%)</title><rect x="37.7200%" y="581" width="0.3935%" height="15" fill="rgb(212,65,23)" fg:x="3451" fg:w="36"/><text x="37.9700%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_hl (1 samples, 0.01%)</title><rect x="38.1025%" y="565" width="0.0109%" height="15" fill="rgb(230,222,46)" fg:x="3486" fg:w="1"/><text x="38.3525%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (2 samples, 0.02%)</title><rect x="38.1135%" y="565" width="0.0219%" height="15" fill="rgb(215,135,32)" fg:x="3487" fg:w="2"/><text x="38.3635%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (2 samples, 0.02%)</title><rect x="38.1135%" y="549" width="0.0219%" height="15" fill="rgb(246,101,22)" fg:x="3487" fg:w="2"/><text x="38.3635%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$62::lt (2 samples, 0.02%)</title><rect x="38.1135%" y="533" width="0.0219%" height="15" fill="rgb(206,107,13)" fg:x="3487" fg:w="2"/><text x="38.3635%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_sub (2 samples, 0.02%)</title><rect x="38.1681%" y="549" width="0.0219%" height="15" fill="rgb(250,100,44)" fg:x="3492" fg:w="2"/><text x="38.4181%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;::transfer_dma&lt;my_benchmark::DummyScreen&gt; (18 samples, 0.20%)</title><rect x="38.1135%" y="581" width="0.1967%" height="15" fill="rgb(231,147,38)" fg:x="3487" fg:w="18"/><text x="38.3635%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::write_oam (16 samples, 0.17%)</title><rect x="38.1353%" y="565" width="0.1749%" height="15" fill="rgb(229,8,40)" fg:x="3489" fg:w="16"/><text x="38.3853%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (11 samples, 0.12%)</title><rect x="38.1900%" y="549" width="0.1202%" height="15" fill="rgb(221,135,30)" fg:x="3494" fg:w="11"/><text x="38.4400%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::write_ram&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="38.3102%" y="581" width="0.0219%" height="15" fill="rgb(249,193,18)" fg:x="3505" fg:w="2"/><text x="38.5602%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::set_byte(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="38.3211%" y="565" width="0.0109%" height="15" fill="rgb(209,133,39)" fg:x="3506" fg:w="1"/><text x="38.5711%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (24 samples, 0.26%)</title><rect x="38.3321%" y="581" width="0.2623%" height="15" fill="rgb(232,100,14)" fg:x="3507" fg:w="24"/><text x="38.5821%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::InputController::write_register (1 samples, 0.01%)</title><rect x="38.5835%" y="565" width="0.0109%" height="15" fill="rgb(224,185,1)" fg:x="3530" fg:w="1"/><text x="38.8335%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::_::impl$46::bitand_assign (1 samples, 0.01%)</title><rect x="38.5835%" y="549" width="0.0109%" height="15" fill="rgb(223,139,8)" fg:x="3530" fg:w="1"/><text x="38.8335%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::P1::intersection (1 samples, 0.01%)</title><rect x="38.5835%" y="533" width="0.0109%" height="15" fill="rgb(232,213,38)" fg:x="3530" fg:w="1"/><text x="38.8335%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::_::InternalBitFlags::intersection (1 samples, 0.01%)</title><rect x="38.5835%" y="517" width="0.0109%" height="15" fill="rgb(207,94,22)" fg:x="3530" fg:w="1"/><text x="38.8335%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(enum2$ (138 samples, 1.51%)</title><rect x="37.0970%" y="597" width="1.5084%" height="15" fill="rgb(219,183,54)" fg:x="3394" fg:w="138"/><text x="37.3470%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::wb (1 samples, 0.01%)</title><rect x="38.5944%" y="581" width="0.0109%" height="15" fill="rgb(216,185,54)" fg:x="3531" fg:w="1"/><text x="38.8444%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::NoiseChannel::wb (1 samples, 0.01%)</title><rect x="38.5944%" y="565" width="0.0109%" height="15" fill="rgb(254,217,39)" fg:x="3531" fg:w="1"/><text x="38.8444%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::LengthCounter::set (1 samples, 0.01%)</title><rect x="38.5944%" y="549" width="0.0109%" height="15" fill="rgb(240,178,23)" fg:x="3531" fg:w="1"/><text x="38.8444%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (9 samples, 0.10%)</title><rect x="38.9223%" y="565" width="0.0984%" height="15" fill="rgb(218,11,47)" fg:x="3561" fg:w="9"/><text x="39.1723%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.03%)</title><rect x="38.9879%" y="549" width="0.0328%" height="15" fill="rgb(218,51,51)" fg:x="3567" fg:w="3"/><text x="39.2379%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (30 samples, 0.33%)</title><rect x="38.8567%" y="581" width="0.3279%" height="15" fill="rgb(238,126,27)" fg:x="3555" fg:w="30"/><text x="39.1067%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (15 samples, 0.16%)</title><rect x="39.0207%" y="565" width="0.1640%" height="15" fill="rgb(249,202,22)" fg:x="3570" fg:w="15"/><text x="39.2707%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_b (1 samples, 0.01%)</title><rect x="39.3048%" y="565" width="0.0109%" height="15" fill="rgb(254,195,49)" fg:x="3596" fg:w="1"/><text x="39.5548%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8,gb_core::cpu::registers::Reg8&gt; (66 samples, 0.72%)</title><rect x="38.6053%" y="597" width="0.7214%" height="15" fill="rgb(208,123,14)" fg:x="3532" fg:w="66"/><text x="38.8553%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (13 samples, 0.14%)</title><rect x="39.1846%" y="581" width="0.1421%" height="15" fill="rgb(224,200,8)" fg:x="3585" fg:w="13"/><text x="39.4346%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_l (1 samples, 0.01%)</title><rect x="39.3158%" y="565" width="0.0109%" height="15" fill="rgb(217,61,36)" fg:x="3597" fg:w="1"/><text x="39.5658%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::or&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (5 samples, 0.05%)</title><rect x="39.3267%" y="597" width="0.0547%" height="15" fill="rgb(206,35,45)" fg:x="3598" fg:w="5"/><text x="39.5767%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (2 samples, 0.02%)</title><rect x="39.3595%" y="581" width="0.0219%" height="15" fill="rgb(217,65,33)" fg:x="3601" fg:w="2"/><text x="39.6095%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="39.3704%" y="565" width="0.0109%" height="15" fill="rgb(222,158,48)" fg:x="3602" fg:w="1"/><text x="39.6204%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.05%)</title><rect x="39.4579%" y="565" width="0.0547%" height="15" fill="rgb(254,2,54)" fg:x="3610" fg:w="5"/><text x="39.7079%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="39.5016%" y="549" width="0.0109%" height="15" fill="rgb(250,143,38)" fg:x="3614" fg:w="1"/><text x="39.7516%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (12 samples, 0.13%)</title><rect x="39.4469%" y="581" width="0.1312%" height="15" fill="rgb(248,25,0)" fg:x="3609" fg:w="12"/><text x="39.6969%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (6 samples, 0.07%)</title><rect x="39.5125%" y="565" width="0.0656%" height="15" fill="rgb(206,152,27)" fg:x="3615" fg:w="6"/><text x="39.7625%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (3 samples, 0.03%)</title><rect x="39.6000%" y="565" width="0.0328%" height="15" fill="rgb(240,77,30)" fg:x="3623" fg:w="3"/><text x="39.8500%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="39.6327%" y="565" width="0.0109%" height="15" fill="rgb(231,5,3)" fg:x="3626" fg:w="1"/><text x="39.8827%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16 (28 samples, 0.31%)</title><rect x="39.5781%" y="581" width="0.3060%" height="15" fill="rgb(207,226,32)" fg:x="3621" fg:w="28"/><text x="39.8281%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (22 samples, 0.24%)</title><rect x="39.6437%" y="565" width="0.2405%" height="15" fill="rgb(222,207,47)" fg:x="3627" fg:w="22"/><text x="39.8937%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (48 samples, 0.52%)</title><rect x="39.3814%" y="597" width="0.5246%" height="15" fill="rgb(229,115,45)" fg:x="3603" fg:w="48"/><text x="39.6314%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="39.8841%" y="581" width="0.0219%" height="15" fill="rgb(224,191,6)" fg:x="3649" fg:w="2"/><text x="40.1341%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="39.9497%" y="565" width="0.0109%" height="15" fill="rgb(230,227,24)" fg:x="3655" fg:w="1"/><text x="40.1997%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (4 samples, 0.04%)</title><rect x="39.9279%" y="581" width="0.0437%" height="15" fill="rgb(228,80,19)" fg:x="3653" fg:w="4"/><text x="40.1779%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="39.9607%" y="565" width="0.0109%" height="15" fill="rgb(247,229,0)" fg:x="3656" fg:w="1"/><text x="40.2107%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16 (2 samples, 0.02%)</title><rect x="39.9716%" y="581" width="0.0219%" height="15" fill="rgb(237,194,15)" fg:x="3657" fg:w="2"/><text x="40.2216%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="39.9716%" y="565" width="0.0219%" height="15" fill="rgb(219,203,20)" fg:x="3657" fg:w="2"/><text x="40.2216%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$3::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.02%)</title><rect x="39.9934%" y="581" width="0.0219%" height="15" fill="rgb(234,128,8)" fg:x="3659" fg:w="2"/><text x="40.2434%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_hl (2 samples, 0.02%)</title><rect x="39.9934%" y="565" width="0.0219%" height="15" fill="rgb(248,202,8)" fg:x="3659" fg:w="2"/><text x="40.2434%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (11 samples, 0.12%)</title><rect x="39.9060%" y="597" width="0.1202%" height="15" fill="rgb(206,104,37)" fg:x="3651" fg:w="11"/><text x="40.1560%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.0153%" y="581" width="0.0109%" height="15" fill="rgb(223,8,27)" fg:x="3661" fg:w="1"/><text x="40.2653%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (2 samples, 0.02%)</title><rect x="40.0700%" y="549" width="0.0219%" height="15" fill="rgb(216,217,28)" fg:x="3666" fg:w="2"/><text x="40.3200%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (2 samples, 0.02%)</title><rect x="40.0700%" y="533" width="0.0219%" height="15" fill="rgb(249,199,1)" fg:x="3666" fg:w="2"/><text x="40.3200%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.01%)</title><rect x="40.0918%" y="549" width="0.0109%" height="15" fill="rgb(240,85,17)" fg:x="3668" fg:w="1"/><text x="40.3418%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret (11 samples, 0.12%)</title><rect x="40.0262%" y="597" width="0.1202%" height="15" fill="rgb(206,108,45)" fg:x="3662" fg:w="11"/><text x="40.2762%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (11 samples, 0.12%)</title><rect x="40.0262%" y="581" width="0.1202%" height="15" fill="rgb(245,210,41)" fg:x="3662" fg:w="11"/><text x="40.2762%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (7 samples, 0.08%)</title><rect x="40.0700%" y="565" width="0.0765%" height="15" fill="rgb(206,13,37)" fg:x="3666" fg:w="7"/><text x="40.3200%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="40.1027%" y="549" width="0.0437%" height="15" fill="rgb(250,61,18)" fg:x="3669" fg:w="4"/><text x="40.3527%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.01%)</title><rect x="40.2011%" y="549" width="0.0109%" height="15" fill="rgb(235,172,48)" fg:x="3678" fg:w="1"/><text x="40.4511%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (4 samples, 0.04%)</title><rect x="40.1793%" y="581" width="0.0437%" height="15" fill="rgb(249,201,17)" fg:x="3676" fg:w="4"/><text x="40.4293%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16 (4 samples, 0.04%)</title><rect x="40.1793%" y="565" width="0.0437%" height="15" fill="rgb(219,208,6)" fg:x="3676" fg:w="4"/><text x="40.4293%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.2120%" y="549" width="0.0109%" height="15" fill="rgb(248,31,23)" fg:x="3679" fg:w="1"/><text x="40.4620%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (8 samples, 0.09%)</title><rect x="40.1465%" y="597" width="0.0874%" height="15" fill="rgb(245,15,42)" fg:x="3673" fg:w="8"/><text x="40.3965%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="40.2230%" y="581" width="0.0109%" height="15" fill="rgb(222,217,39)" fg:x="3680" fg:w="1"/><text x="40.4730%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="40.2230%" y="565" width="0.0109%" height="15" fill="rgb(210,219,27)" fg:x="3680" fg:w="1"/><text x="40.4730%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::reti&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (3 samples, 0.03%)</title><rect x="40.2339%" y="597" width="0.0328%" height="15" fill="rgb(252,166,36)" fg:x="3681" fg:w="3"/><text x="40.4839%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (1 samples, 0.01%)</title><rect x="40.2558%" y="581" width="0.0109%" height="15" fill="rgb(245,132,34)" fg:x="3683" fg:w="1"/><text x="40.5058%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16 (1 samples, 0.01%)</title><rect x="40.2558%" y="565" width="0.0109%" height="15" fill="rgb(236,54,3)" fg:x="3683" fg:w="1"/><text x="40.5058%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.2558%" y="549" width="0.0109%" height="15" fill="rgb(241,173,43)" fg:x="3683" fg:w="1"/><text x="40.5058%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::alu_rl(unsigned char, bool, gb_core::cpu::opcodes::impl$0::rlca::closure_env$0&lt;gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.2995%" y="581" width="0.0109%" height="15" fill="rgb(215,190,9)" fg:x="3687" fg:w="1"/><text x="40.5495%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::opcodes::impl$0::rlca::closure$0(gb_core::cpu::opcodes::impl$0::rlca::closure_env$0&lt;gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.2995%" y="565" width="0.0109%" height="15" fill="rgb(242,101,16)" fg:x="3687" fg:w="1"/><text x="40.5495%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rlca&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (5 samples, 0.05%)</title><rect x="40.2667%" y="597" width="0.0547%" height="15" fill="rgb(223,190,21)" fg:x="3684" fg:w="5"/><text x="40.5167%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="40.3104%" y="581" width="0.0109%" height="15" fill="rgb(215,228,25)" fg:x="3688" fg:w="1"/><text x="40.5604%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="40.3104%" y="565" width="0.0109%" height="15" fill="rgb(225,36,22)" fg:x="3688" fg:w="1"/><text x="40.5604%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.01%)</title><rect x="40.3760%" y="549" width="0.0109%" height="15" fill="rgb(251,106,46)" fg:x="3694" fg:w="1"/><text x="40.6260%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.05%)</title><rect x="40.3541%" y="565" width="0.0547%" height="15" fill="rgb(208,90,1)" fg:x="3692" fg:w="5"/><text x="40.6041%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.02%)</title><rect x="40.3869%" y="549" width="0.0219%" height="15" fill="rgb(243,10,4)" fg:x="3695" fg:w="2"/><text x="40.6369%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rst (12 samples, 0.13%)</title><rect x="40.3213%" y="597" width="0.1312%" height="15" fill="rgb(212,137,27)" fg:x="3689" fg:w="12"/><text x="40.5713%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (12 samples, 0.13%)</title><rect x="40.3213%" y="581" width="0.1312%" height="15" fill="rgb(231,220,49)" fg:x="3689" fg:w="12"/><text x="40.5713%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.04%)</title><rect x="40.4088%" y="565" width="0.0437%" height="15" fill="rgb(237,96,20)" fg:x="3697" fg:w="4"/><text x="40.6588%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::sub&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (2 samples, 0.02%)</title><rect x="40.4525%" y="597" width="0.0219%" height="15" fill="rgb(239,229,30)" fg:x="3701" fg:w="2"/><text x="40.7025%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (1 samples, 0.01%)</title><rect x="40.4634%" y="581" width="0.0109%" height="15" fill="rgb(219,65,33)" fg:x="3702" fg:w="1"/><text x="40.7134%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.4634%" y="565" width="0.0109%" height="15" fill="rgb(243,134,7)" fg:x="3702" fg:w="1"/><text x="40.7134%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.02%)</title><rect x="40.4962%" y="565" width="0.0219%" height="15" fill="rgb(216,177,54)" fg:x="3705" fg:w="2"/><text x="40.7462%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.01%)</title><rect x="40.5072%" y="549" width="0.0109%" height="15" fill="rgb(211,160,20)" fg:x="3706" fg:w="1"/><text x="40.7572%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::decode&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (1,424 samples, 15.56%)</title><rect x="24.9645%" y="613" width="15.5645%" height="15" fill="rgb(239,85,39)" fg:x="2284" fg:w="1424"/><text x="25.2145%" y="623.50">my_benchmark-c9a97925f9d..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::xor&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (5 samples, 0.05%)</title><rect x="40.4744%" y="597" width="0.0547%" height="15" fill="rgb(232,125,22)" fg:x="3703" fg:w="5"/><text x="40.7244%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (3 samples, 0.03%)</title><rect x="40.4962%" y="581" width="0.0328%" height="15" fill="rgb(244,57,34)" fg:x="3705" fg:w="3"/><text x="40.7462%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.5181%" y="565" width="0.0109%" height="15" fill="rgb(214,203,32)" fg:x="3707" fg:w="1"/><text x="40.7681%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.01%)</title><rect x="40.5290%" y="613" width="0.0109%" height="15" fill="rgb(207,58,43)" fg:x="3708" fg:w="1"/><text x="40.7790%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::step (1,686 samples, 18.43%)</title><rect x="22.1226%" y="629" width="18.4282%" height="15" fill="rgb(215,193,15)" fg:x="2024" fg:w="1686"/><text x="22.3726%" y="639.50">my_benchmark-c9a97925f9d084bf..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::any_enabled(gb_core::hardware::Hardware (1 samples, 0.01%)</title><rect x="40.5399%" y="613" width="0.0109%" height="15" fill="rgb(232,15,44)" fg:x="3709" fg:w="1"/><text x="40.7899%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::any_enabled (1 samples, 0.01%)</title><rect x="40.5399%" y="597" width="0.0109%" height="15" fill="rgb(212,3,48)" fg:x="3709" fg:w="1"/><text x="40.7899%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptLine::is_empty (1 samples, 0.01%)</title><rect x="40.5399%" y="581" width="0.0109%" height="15" fill="rgb(218,128,7)" fg:x="3709" fg:w="1"/><text x="40.7899%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::_::InternalBitFlags::is_empty (1 samples, 0.01%)</title><rect x="40.5399%" y="565" width="0.0109%" height="15" fill="rgb(226,216,39)" fg:x="3709" fg:w="1"/><text x="40.7899%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::InputController::update_state (135 samples, 1.48%)</title><rect x="40.5509%" y="629" width="1.4756%" height="15" fill="rgb(243,47,51)" fg:x="3710" fg:w="135"/><text x="40.8009%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::impl$9::clone (35 samples, 0.38%)</title><rect x="41.6439%" y="613" width="0.3826%" height="15" fill="rgb(241,183,40)" fg:x="3810" fg:w="35"/><text x="41.8939%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_pixel (4 samples, 0.04%)</title><rect x="46.9232%" y="533" width="0.0437%" height="15" fill="rgb(231,217,32)" fg:x="4293" fg:w="4"/><text x="47.1732%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$1::set_pixel (4 samples, 0.04%)</title><rect x="46.9232%" y="517" width="0.0437%" height="15" fill="rgb(229,61,38)" fg:x="4293" fg:w="4"/><text x="47.1732%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (5 samples, 0.05%)</title><rect x="46.9669%" y="533" width="0.0547%" height="15" fill="rgb(225,210,5)" fg:x="4297" fg:w="5"/><text x="47.2169%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Palette::shade (14 samples, 0.15%)</title><rect x="47.0325%" y="517" width="0.1530%" height="15" fill="rgb(231,79,45)" fg:x="4303" fg:w="14"/><text x="47.2825%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$29::bitand (1 samples, 0.01%)</title><rect x="47.1855%" y="501" width="0.0109%" height="15" fill="rgb(224,100,7)" fg:x="4317" fg:w="1"/><text x="47.4355%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_pixel (28 samples, 0.31%)</title><rect x="46.9013%" y="549" width="0.3060%" height="15" fill="rgb(241,198,18)" fg:x="4291" fg:w="28"/><text x="47.1513%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (17 samples, 0.19%)</title><rect x="47.0215%" y="533" width="0.1858%" height="15" fill="rgb(252,97,53)" fg:x="4302" fg:w="17"/><text x="47.2715%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::bit (2 samples, 0.02%)</title><rect x="47.1855%" y="517" width="0.0219%" height="15" fill="rgb(220,88,7)" fg:x="4317" fg:w="2"/><text x="47.4355%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$779::shr (1 samples, 0.01%)</title><rect x="47.1964%" y="501" width="0.0109%" height="15" fill="rgb(213,176,14)" fg:x="4318" fg:w="1"/><text x="47.4464%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::request (30 samples, 0.33%)</title><rect x="46.9013%" y="613" width="0.3279%" height="15" fill="rgb(246,73,7)" fg:x="4291" fg:w="30"/><text x="47.1513%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptLine::insert (30 samples, 0.33%)</title><rect x="46.9013%" y="597" width="0.3279%" height="15" fill="rgb(245,64,36)" fg:x="4291" fg:w="30"/><text x="47.1513%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::_::InternalBitFlags::insert (30 samples, 0.33%)</title><rect x="46.9013%" y="581" width="0.3279%" height="15" fill="rgb(245,80,10)" fg:x="4291" fg:w="30"/><text x="47.1513%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (30 samples, 0.33%)</title><rect x="46.9013%" y="565" width="0.3279%" height="15" fill="rgb(232,107,50)" fg:x="4291" fg:w="30"/><text x="47.1513%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_sprites (2 samples, 0.02%)</title><rect x="47.2073%" y="549" width="0.0219%" height="15" fill="rgb(253,3,0)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="533" width="0.0219%" height="15" fill="rgb(212,99,53)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$26::from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="517" width="0.0219%" height="15" fill="rgb(249,111,54)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$24::extend(arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;*, core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="501" width="0.0219%" height="15" fill="rgb(249,55,30)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;::extend_from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="485" width="0.0219%" height="15" fill="rgb(237,47,42)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="469" width="0.0219%" height="15" fill="rgb(211,20,18)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="453" width="0.0219%" height="15" fill="rgb(231,203,46)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="437" width="0.0219%" height="15" fill="rgb(237,142,3)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::find(core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;*, gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (2 samples, 0.02%)</title><rect x="47.2073%" y="421" width="0.0219%" height="15" fill="rgb(241,107,1)" fg:x="4319" fg:w="2"/><text x="47.4573%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::impls::impl$3::call_mut(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (1 samples, 0.01%)</title><rect x="47.2183%" y="405" width="0.0109%" height="15" fill="rgb(229,83,13)" fg:x="4320" fg:w="1"/><text x="47.4683%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::impl$1::draw_sprites::closure$0(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (1 samples, 0.01%)</title><rect x="47.2183%" y="389" width="0.0109%" height="15" fill="rgb(241,91,40)" fg:x="4320" fg:w="1"/><text x="47.4683%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_sub (1 samples, 0.01%)</title><rect x="47.2183%" y="373" width="0.0109%" height="15" fill="rgb(225,3,45)" fg:x="4320" fg:w="1"/><text x="47.4683%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (14 samples, 0.15%)</title><rect x="47.4150%" y="597" width="0.1530%" height="15" fill="rgb(244,223,14)" fg:x="4338" fg:w="14"/><text x="47.6650%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (14 samples, 0.15%)</title><rect x="47.4150%" y="581" width="0.1530%" height="15" fill="rgb(224,124,37)" fg:x="4338" fg:w="14"/><text x="47.6650%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$58::lt (7 samples, 0.08%)</title><rect x="47.4915%" y="565" width="0.0765%" height="15" fill="rgb(251,171,30)" fg:x="4345" fg:w="7"/><text x="47.7415%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_add (11 samples, 0.12%)</title><rect x="47.5680%" y="597" width="0.1202%" height="15" fill="rgb(236,46,54)" fg:x="4352" fg:w="11"/><text x="47.8180%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_mul (33 samples, 0.36%)</title><rect x="49.6666%" y="581" width="0.3607%" height="15" fill="rgb(245,213,5)" fg:x="4544" fg:w="33"/><text x="49.9166%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (28 samples, 0.31%)</title><rect x="50.0273%" y="581" width="0.3060%" height="15" fill="rgb(230,144,27)" fg:x="4577" fg:w="28"/><text x="50.2773%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (28 samples, 0.31%)</title><rect x="50.0273%" y="565" width="0.3060%" height="15" fill="rgb(220,86,6)" fg:x="4577" fg:w="28"/><text x="50.2773%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::bits (10 samples, 0.11%)</title><rect x="50.2241%" y="549" width="0.1093%" height="15" fill="rgb(240,20,13)" fg:x="4595" fg:w="10"/><text x="50.4741%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_pixel (761 samples, 8.32%)</title><rect x="50.3334%" y="581" width="8.3178%" height="15" fill="rgb(217,89,34)" fg:x="4605" fg:w="761"/><text x="50.5834%" y="591.50">my_benchmark..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$1::set_pixel (388 samples, 4.24%)</title><rect x="54.4103%" y="565" width="4.2409%" height="15" fill="rgb(229,13,5)" fg:x="4978" fg:w="388"/><text x="54.6603%" y="575.50">my_be..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (410 samples, 4.48%)</title><rect x="58.6512%" y="581" width="4.4814%" height="15" fill="rgb(244,67,35)" fg:x="5366" fg:w="410"/><text x="58.9012%" y="591.50">my_be..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (23 samples, 0.25%)</title><rect x="62.8812%" y="565" width="0.2514%" height="15" fill="rgb(221,40,2)" fg:x="5753" fg:w="23"/><text x="63.1312%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (23 samples, 0.25%)</title><rect x="62.8812%" y="549" width="0.2514%" height="15" fill="rgb(237,157,21)" fg:x="5753" fg:w="23"/><text x="63.1312%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Palette::shade (1,874 samples, 20.48%)</title><rect x="66.7614%" y="565" width="20.4831%" height="15" fill="rgb(222,94,11)" fg:x="6108" fg:w="1874"/><text x="67.0114%" y="575.50">my_benchmark-c9a97925f9d084bf.ex..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$29::bitand (67 samples, 0.73%)</title><rect x="87.2445%" y="549" width="0.7323%" height="15" fill="rgb(249,113,6)" fg:x="7982" fg:w="67"/><text x="87.4945%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_pixel (3,876 samples, 42.37%)</title><rect x="47.6883%" y="597" width="42.3653%" height="15" fill="rgb(238,137,36)" fg:x="4363" fg:w="3876"/><text x="47.9383%" y="607.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benc..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (2,463 samples, 26.92%)</title><rect x="63.1326%" y="581" width="26.9210%" height="15" fill="rgb(210,102,26)" fg:x="5776" fg:w="2463"/><text x="63.3826%" y="591.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::bit (257 samples, 2.81%)</title><rect x="87.2445%" y="565" width="2.8091%" height="15" fill="rgb(218,30,30)" fg:x="7982" fg:w="257"/><text x="87.4945%" y="575.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$779::shr (190 samples, 2.08%)</title><rect x="87.9768%" y="549" width="2.0767%" height="15" fill="rgb(214,67,26)" fg:x="8049" fg:w="190"/><text x="88.2268%" y="559.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$11::next(arrayvec::arrayvec::IntoIter&lt;tuple$&lt;usize,ref$ (8 samples, 0.09%)</title><rect x="91.4526%" y="581" width="0.0874%" height="15" fill="rgb(251,9,53)" fg:x="8367" fg:w="8"/><text x="91.7026%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="581" width="0.9072%" height="15" fill="rgb(228,204,25)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$26::from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="565" width="0.9072%" height="15" fill="rgb(207,153,8)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$24::extend(arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;*, core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="549" width="0.9072%" height="15" fill="rgb(242,9,16)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;::extend_from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="533" width="0.9072%" height="15" fill="rgb(217,211,10)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="517" width="0.9072%" height="15" fill="rgb(219,228,52)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="501" width="0.9072%" height="15" fill="rgb(231,92,29)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="485" width="0.9072%" height="15" fill="rgb(232,8,23)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::find(core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;*, gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (83 samples, 0.91%)</title><rect x="91.5401%" y="469" width="0.9072%" height="15" fill="rgb(216,211,34)" fg:x="8375" fg:w="83"/><text x="91.7901%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::impls::impl$3::call_mut(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (38 samples, 0.42%)</title><rect x="92.0319%" y="453" width="0.4153%" height="15" fill="rgb(236,151,0)" fg:x="8420" fg:w="38"/><text x="92.2819%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::impl$1::draw_sprites::closure$0(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (38 samples, 0.42%)</title><rect x="92.0319%" y="437" width="0.4153%" height="15" fill="rgb(209,168,3)" fg:x="8420" fg:w="38"/><text x="92.2819%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_sub (24 samples, 0.26%)</title><rect x="92.1849%" y="421" width="0.2623%" height="15" fill="rgb(208,129,28)" fg:x="8434" fg:w="24"/><text x="92.4349%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::SpriteFlags::contains (11 samples, 0.12%)</title><rect x="92.4473%" y="581" width="0.1202%" height="15" fill="rgb(229,78,22)" fg:x="8458" fg:w="11"/><text x="92.6973%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (11 samples, 0.12%)</title><rect x="92.4473%" y="565" width="0.1202%" height="15" fill="rgb(228,187,13)" fg:x="8458" fg:w="11"/><text x="92.6973%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::bits (7 samples, 0.08%)</title><rect x="92.4910%" y="549" width="0.0765%" height="15" fill="rgb(240,119,24)" fg:x="8462" fg:w="7"/><text x="92.7410%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Palette::shade (141 samples, 1.54%)</title><rect x="92.9391%" y="565" width="1.5412%" height="15" fill="rgb(209,194,42)" fg:x="8503" fg:w="141"/><text x="93.1891%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$29::bitand (11 samples, 0.12%)</title><rect x="94.4803%" y="549" width="0.1202%" height="15" fill="rgb(247,200,46)" fg:x="8644" fg:w="11"/><text x="94.7303%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (255 samples, 2.79%)</title><rect x="92.5675%" y="581" width="2.7872%" height="15" fill="rgb(218,76,16)" fg:x="8469" fg:w="255"/><text x="92.8175%" y="591.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::bit (80 samples, 0.87%)</title><rect x="94.4803%" y="565" width="0.8744%" height="15" fill="rgb(225,21,48)" fg:x="8644" fg:w="80"/><text x="94.7303%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$779::shr (69 samples, 0.75%)</title><rect x="94.6005%" y="549" width="0.7542%" height="15" fill="rgb(239,223,50)" fg:x="8655" fg:w="69"/><text x="94.8505%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (4,432 samples, 48.44%)</title><rect x="47.2292%" y="613" width="48.4425%" height="15" fill="rgb(244,45,21)" fg:x="4321" fg:w="4432"/><text x="47.4792%" y="623.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::Dumm..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_sprites (514 samples, 5.62%)</title><rect x="90.0536%" y="597" width="5.6181%" height="15" fill="rgb(232,33,43)" fg:x="8239" fg:w="514"/><text x="90.3036%" y="607.50">my_benc..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$1::set_pixel (29 samples, 0.32%)</title><rect x="95.3547%" y="581" width="0.3170%" height="15" fill="rgb(209,8,3)" fg:x="8724" fg:w="29"/><text x="95.6047%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_current_mode_sec (10 samples, 0.11%)</title><rect x="97.3658%" y="597" width="0.1093%" height="15" fill="rgb(214,25,53)" fg:x="8908" fg:w="10"/><text x="97.6158%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::step (5,099 samples, 55.73%)</title><rect x="42.0265%" y="629" width="55.7329%" height="15" fill="rgb(254,186,54)" fg:x="3845" fg:w="5099"/><text x="42.2765%" y="639.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::st..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_lcd_stat_interrupts (191 samples, 2.09%)</title><rect x="95.6717%" y="613" width="2.0877%" height="15" fill="rgb(208,174,49)" fg:x="8753" fg:w="191"/><text x="95.9217%" y="623.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Stat::contains (26 samples, 0.28%)</title><rect x="97.4751%" y="597" width="0.2842%" height="15" fill="rgb(233,191,51)" fg:x="8918" fg:w="26"/><text x="97.7251%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (26 samples, 0.28%)</title><rect x="97.4751%" y="581" width="0.2842%" height="15" fill="rgb(222,134,10)" fg:x="8918" fg:w="26"/><text x="97.7251%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::do_cycle (75 samples, 0.82%)</title><rect x="97.7593%" y="629" width="0.8198%" height="15" fill="rgb(230,226,20)" fg:x="8944" fg:w="75"/><text x="98.0093%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick (7,181 samples, 78.49%)</title><rect x="21.1280%" y="645" width="78.4895%" height="15" fill="rgb(251,111,25)" fg:x="1933" fg:w="7181"/><text x="21.3780%" y="655.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::timer::Timer::do_cycle (95 samples, 1.04%)</title><rect x="98.5791%" y="629" width="1.0384%" height="15" fill="rgb(224,40,46)" fg:x="9019" fg:w="95"/><text x="98.8291%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::cpu::CpuState,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::cpu::CpuState&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6174%" y="549" width="0.0109%" height="15" fill="rgb(236,108,47)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6174%" y="533" width="0.0109%" height="15" fill="rgb(234,93,0)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.01%)</title><rect x="99.6174%" y="517" width="0.0109%" height="15" fill="rgb(224,213,32)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::_::impl$0::deserialize::impl$2::visit_map(gb_core::cpu::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.01%)</title><rect x="99.6174%" y="501" width="0.0109%" height="15" fill="rgb(251,11,48)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::cpu::registers::Registers&gt; &gt;::is_some (1 samples, 0.01%)</title><rect x="99.6174%" y="485" width="0.0109%" height="15" fill="rgb(236,173,5)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::cpu::registers::Registers,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::cpu::registers::Registers&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6174%" y="469" width="0.0109%" height="15" fill="rgb(230,95,12)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6174%" y="453" width="0.0109%" height="15" fill="rgb(232,209,1)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.01%)</title><rect x="99.6174%" y="437" width="0.0109%" height="15" fill="rgb(232,6,1)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::_::impl$0::deserialize::impl$2::visit_map(gb_core::cpu::registers::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.01%)</title><rect x="99.6174%" y="421" width="0.0109%" height="15" fill="rgb(210,224,50)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::cpu::flags::Flags,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::cpu::flags::Flags&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6174%" y="405" width="0.0109%" height="15" fill="rgb(228,127,35)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::flags::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6174%" y="389" width="0.0109%" height="15" fill="rgb(245,102,45)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.01%)</title><rect x="99.6174%" y="373" width="0.0109%" height="15" fill="rgb(214,1,49)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::end_map&lt;serde_json::read::StrRead&gt; (1 samples, 0.01%)</title><rect x="99.6174%" y="357" width="0.0109%" height="15" fill="rgb(226,163,40)" fg:x="9114" fg:w="1"/><text x="99.8674%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::HardwareState,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::HardwareState&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6284%" y="549" width="0.0109%" height="15" fill="rgb(239,212,28)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6284%" y="533" width="0.0109%" height="15" fill="rgb(220,20,13)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.01%)</title><rect x="99.6284%" y="517" width="0.0109%" height="15" fill="rgb(210,164,35)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.01%)</title><rect x="99.6284%" y="501" width="0.0109%" height="15" fill="rgb(248,109,41)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::Dma&gt; &gt;::is_some (1 samples, 0.01%)</title><rect x="99.6284%" y="485" width="0.0109%" height="15" fill="rgb(238,23,50)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::work_ram::WorkRam,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::work_ram::WorkRam&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6284%" y="469" width="0.0109%" height="15" fill="rgb(211,48,49)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6284%" y="453" width="0.0109%" height="15" fill="rgb(223,36,21)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_newtype_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$ (1 samples, 0.01%)</title><rect x="99.6284%" y="437" width="0.0109%" height="15" fill="rgb(207,123,46)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::_::impl$0::deserialize::impl$0::visit_newtype_struct(gb_core::hardware::work_ram::_::impl$0::deserialize::__Visitor, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6284%" y="421" width="0.0109%" height="15" fill="rgb(240,218,32)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6284%" y="405" width="0.0109%" height="15" fill="rgb(252,5,43)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_tuple(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, unsigned long long, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.01%)</title><rect x="99.6284%" y="389" width="0.0109%" height="15" fill="rgb(252,84,19)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_seq(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.01%)</title><rect x="99.6284%" y="373" width="0.0109%" height="15" fill="rgb(243,152,39)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize::impl$0::visit_seq(serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$&lt;u8,8192&gt; &gt;, serde_json::de::SeqAccess (1 samples, 0.01%)</title><rect x="99.6284%" y="357" width="0.0109%" height="15" fill="rgb(234,160,15)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (1 samples, 0.01%)</title><rect x="99.6284%" y="341" width="0.0109%" height="15" fill="rgb(237,34,20)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::SeqAccess::next_element&lt;serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;,u8&gt;(serde_json::de::SeqAccess (1 samples, 0.01%)</title><rect x="99.6284%" y="325" width="0.0109%" height="15" fill="rgb(229,97,13)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$9::next_element_seed(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.01%)</title><rect x="99.6284%" y="309" width="0.0109%" height="15" fill="rgb(234,71,50)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (1 samples, 0.01%)</title><rect x="99.6284%" y="293" width="0.0109%" height="15" fill="rgb(253,155,4)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (1 samples, 0.01%)</title><rect x="99.6284%" y="277" width="0.0109%" height="15" fill="rgb(222,185,37)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$10::peek (1 samples, 0.01%)</title><rect x="99.6284%" y="261" width="0.0109%" height="15" fill="rgb(251,177,13)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::peek (1 samples, 0.01%)</title><rect x="99.6284%" y="245" width="0.0109%" height="15" fill="rgb(250,179,40)" fg:x="9115" fg:w="1"/><text x="99.8784%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_str(ref$ (3 samples, 0.03%)</title><rect x="99.6174%" y="645" width="0.0328%" height="15" fill="rgb(242,44,2)" fg:x="9114" fg:w="3"/><text x="99.8674%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (3 samples, 0.03%)</title><rect x="99.6174%" y="629" width="0.0328%" height="15" fill="rgb(216,177,13)" fg:x="9114" fg:w="3"/><text x="99.8674%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize(serde_json::de::Deserializer (3 samples, 0.03%)</title><rect x="99.6174%" y="613" width="0.0328%" height="15" fill="rgb(216,106,43)" fg:x="9114" fg:w="3"/><text x="99.8674%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (3 samples, 0.03%)</title><rect x="99.6174%" y="597" width="0.0328%" height="15" fill="rgb(216,183,2)" fg:x="9114" fg:w="3"/><text x="99.8674%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize::impl$2::visit_map(gb_core::gameboy::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (3 samples, 0.03%)</title><rect x="99.6174%" y="581" width="0.0328%" height="15" fill="rgb(249,75,3)" fg:x="9114" fg:w="3"/><text x="99.8674%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::ppu::PPuState&gt; &gt;::is_some (3 samples, 0.03%)</title><rect x="99.6174%" y="565" width="0.0328%" height="15" fill="rgb(219,67,39)" fg:x="9114" fg:w="3"/><text x="99.8674%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::ppu::PPuState,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::ppu::PPuState&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="549" width="0.0109%" height="15" fill="rgb(253,228,2)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="533" width="0.0109%" height="15" fill="rgb(235,138,27)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.01%)</title><rect x="99.6393%" y="517" width="0.0109%" height="15" fill="rgb(236,97,51)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.01%)</title><rect x="99.6393%" y="501" width="0.0109%" height="15" fill="rgb(240,80,30)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::ppu::Mode&gt; &gt;::is_some (1 samples, 0.01%)</title><rect x="99.6393%" y="485" width="0.0109%" height="15" fill="rgb(230,178,19)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::ppu::VideoRam,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::ppu::VideoRam&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="469" width="0.0109%" height="15" fill="rgb(210,190,27)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="453" width="0.0109%" height="15" fill="rgb(222,107,31)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.01%)</title><rect x="99.6393%" y="437" width="0.0109%" height="15" fill="rgb(216,127,34)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.01%)</title><rect x="99.6393%" y="421" width="0.0109%" height="15" fill="rgb(234,116,52)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_value(serde_json::de::MapAccess (1 samples, 0.01%)</title><rect x="99.6393%" y="405" width="0.0109%" height="15" fill="rgb(222,124,15)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.01%)</title><rect x="99.6393%" y="389" width="0.0109%" height="15" fill="rgb(231,179,28)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map::__DeserializeWith&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="373" width="0.0109%" height="15" fill="rgb(226,93,45)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map::impl$2::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="357" width="0.0109%" height="15" fill="rgb(215,8,51)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="341" width="0.0109%" height="15" fill="rgb(223,106,5)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_tuple&lt;serde_json::read::StrRead,serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$&lt;gb_core::hardware::ppu::Tile,384&gt; &gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, unsigned long long, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.01%)</title><rect x="99.6393%" y="325" width="0.0109%" height="15" fill="rgb(250,191,5)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_seq(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.01%)</title><rect x="99.6393%" y="309" width="0.0109%" height="15" fill="rgb(242,132,44)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize::impl$0::visit_seq(serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$&lt;gb_core::hardware::ppu::Tile,384&gt; &gt;, serde_json::de::SeqAccess (1 samples, 0.01%)</title><rect x="99.6393%" y="293" width="0.0109%" height="15" fill="rgb(251,152,29)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::SeqAccess::next_element(serde_json::de::SeqAccess (1 samples, 0.01%)</title><rect x="99.6393%" y="277" width="0.0109%" height="15" fill="rgb(218,179,5)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$9::next_element_seed(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.01%)</title><rect x="99.6393%" y="261" width="0.0109%" height="15" fill="rgb(227,67,19)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;gb_core::hardware::ppu::Tile&gt;, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="245" width="0.0109%" height="15" fill="rgb(233,119,31)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="229" width="0.0109%" height="15" fill="rgb(241,120,22)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_newtype_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$ (1 samples, 0.01%)</title><rect x="99.6393%" y="213" width="0.0109%" height="15" fill="rgb(224,102,30)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$0::visit_newtype_struct(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="197" width="0.0109%" height="15" fill="rgb(210,164,37)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impls::impl$124::deserialize(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="181" width="0.0109%" height="15" fill="rgb(226,191,16)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_tuple(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, unsigned long long, serde::de::impls::ArrayVisitor&lt;array$ (1 samples, 0.01%)</title><rect x="99.6393%" y="165" width="0.0109%" height="15" fill="rgb(214,40,45)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_seq(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::ArrayVisitor&lt;array$ (1 samples, 0.01%)</title><rect x="99.6393%" y="149" width="0.0109%" height="15" fill="rgb(244,29,26)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impls::impl$122::visit_seq(serde::de::impls::ArrayVisitor&lt;array$&lt;u8,16&gt; &gt;, serde_json::de::SeqAccess (1 samples, 0.01%)</title><rect x="99.6393%" y="133" width="0.0109%" height="15" fill="rgb(216,16,5)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::SeqAccess::next_element&lt;serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;,u8&gt;(serde_json::de::SeqAccess (1 samples, 0.01%)</title><rect x="99.6393%" y="117" width="0.0109%" height="15" fill="rgb(249,76,35)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="127.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$9::next_element_seed(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.01%)</title><rect x="99.6393%" y="101" width="0.0109%" height="15" fill="rgb(207,11,44)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="111.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_u8&lt;serde_json::read::StrRead,serde::de::impls::impl$55::deserialize::PrimitiveVisitor&gt;(serde_json::de::Deserializer (1 samples, 0.01%)</title><rect x="99.6393%" y="85" width="0.0109%" height="15" fill="rgb(228,190,49)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="95.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::deserialize_number (1 samples, 0.01%)</title><rect x="99.6393%" y="69" width="0.0109%" height="15" fill="rgb(214,173,12)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="79.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_integer&lt;serde_json::read::StrRead&gt; (1 samples, 0.01%)</title><rect x="99.6393%" y="53" width="0.0109%" height="15" fill="rgb(218,26,35)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="63.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_number (1 samples, 0.01%)</title><rect x="99.6393%" y="37" width="0.0109%" height="15" fill="rgb(220,200,19)" fg:x="9116" fg:w="1"/><text x="99.8893%" y="47.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (9,094 samples, 99.40%)</title><rect x="0.2623%" y="1109" width="99.3988%" height="15" fill="rgb(239,95,49)" fg:x="24" fg:w="9094"/><text x="0.5123%" y="1119.50">my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main (9,094 samples, 99.40%)</title><rect x="0.2623%" y="1093" width="99.3988%" height="15" fill="rgb(235,85,53)" fg:x="24" fg:w="9094"/><text x="0.5123%" y="1103.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches (9,091 samples, 99.37%)</title><rect x="0.2951%" y="1077" width="99.3661%" height="15" fill="rgb(233,133,31)" fg:x="27" fg:w="9091"/><text x="0.5451%" y="1087.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion (9,045 samples, 98.86%)</title><rect x="0.7979%" y="1061" width="98.8633%" height="15" fill="rgb(218,25,20)" fg:x="73" fg:w="9045"/><text x="1.0479%" y="1071.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (9,045 samples, 98.86%)</title><rect x="0.7979%" y="1045" width="98.8633%" height="15" fill="rgb(252,210,38)" fg:x="73" fg:w="9045"/><text x="1.0479%" y="1055.50">my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function (9,042 samples, 98.83%)</title><rect x="0.8307%" y="1029" width="98.8305%" height="15" fill="rgb(242,134,21)" fg:x="76" fg:w="9042"/><text x="1.0807%" y="1039.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (9,042 samples, 98.83%)</title><rect x="0.8307%" y="1013" width="98.8305%" height="15" fill="rgb(213,28,48)" fg:x="76" fg:w="9042"/><text x="1.0807%" y="1023.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tu..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="997" width="98.8086%" height="15" fill="rgb(250,196,2)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="1007.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0:..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (9,040 samples, 98.81%)</title><rect x="0.8526%" y="981" width="98.8086%" height="15" fill="rgb(227,5,17)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="991.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (9,040 samples, 98.81%)</title><rect x="0.8526%" y="965" width="98.8086%" height="15" fill="rgb(221,226,24)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="975.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (9,040 samples, 98.81%)</title><rect x="0.8526%" y="949" width="98.8086%" height="15" fill="rgb(211,5,48)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="959.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (9,040 samples, 98.81%)</title><rect x="0.8526%" y="933" width="98.8086%" height="15" fill="rgb(219,150,6)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="943.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (9,040 samples, 98.81%)</title><rect x="0.8526%" y="917" width="98.8086%" height="15" fill="rgb(251,46,16)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="927.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, ref$&lt;slice2$&lt;u64&gt; &gt;, tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="901" width="98.8086%" height="15" fill="rgb(220,204,40)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="911.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="885" width="98.8086%" height="15" fill="rgb(211,85,2)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="895.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::imp..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="869" width="98.8086%" height="15" fill="rgb(229,17,7)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="879.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closu..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="853" width="98.8086%" height="15" fill="rgb(239,72,28)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="863.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="837" width="98.8086%" height="15" fill="rgb(230,47,54)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="847.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="821" width="98.8086%" height="15" fill="rgb(214,50,8)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="831.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="805" width="98.8086%" height="15" fill="rgb(216,198,43)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="815.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::ro..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="789" width="98.8086%" height="15" fill="rgb(234,20,35)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="799.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::im..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="773" width="98.8086%" height="15" fill="rgb(254,45,19)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="783.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::ben..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="757" width="98.8086%" height="15" fill="rgb(219,14,44)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="767.50">my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="741" width="98.8086%" height="15" fill="rgb(217,220,26)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="751.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion:..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (9,040 samples, 98.81%)</title><rect x="0.8526%" y="725" width="98.8086%" height="15" fill="rgb(213,158,28)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="735.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,crit..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (9,040 samples, 98.81%)</title><rect x="0.8526%" y="709" width="98.8086%" height="15" fill="rgb(252,51,52)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="719.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::criterion_benchmark::closure$0::closure_env$0&gt; (9,040 samples, 98.81%)</title><rect x="0.8526%" y="693" width="98.8086%" height="15" fill="rgb(246,89,16)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="703.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::criteri..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0 (9,040 samples, 98.81%)</title><rect x="0.8526%" y="677" width="98.8086%" height="15" fill="rgb(216,158,49)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="687.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci (9,040 samples, 98.81%)</title><rect x="0.8526%" y="661" width="98.8086%" height="15" fill="rgb(236,107,19)" fg:x="78" fg:w="9040"/><text x="1.1026%" y="671.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::File::open(ref$ (1 samples, 0.01%)</title><rect x="99.6502%" y="645" width="0.0109%" height="15" fill="rgb(228,185,30)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::open(ref$ (1 samples, 0.01%)</title><rect x="99.6502%" y="629" width="0.0109%" height="15" fill="rgb(246,134,8)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::_open (1 samples, 0.01%)</title><rect x="99.6502%" y="613" width="0.0109%" height="15" fill="rgb(214,143,50)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::map (1 samples, 0.01%)</title><rect x="99.6502%" y="597" width="0.0109%" height="15" fill="rgb(228,75,8)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.01%)</title><rect x="99.6502%" y="581" width="0.0109%" height="15" fill="rgb(207,175,4)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.01%)</title><rect x="99.6502%" y="565" width="0.0109%" height="15" fill="rgb(205,108,24)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.01%)</title><rect x="99.6502%" y="549" width="0.0109%" height="15" fill="rgb(244,120,49)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="559.50"></text></g><g><title>`0x7FFE41229EEC (1 samples, 0.01%)</title><rect x="99.6502%" y="533" width="0.0109%" height="15" fill="rgb(223,47,38)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="543.50"></text></g><g><title>`0x7FFE4122A580 (1 samples, 0.01%)</title><rect x="99.6502%" y="517" width="0.0109%" height="15" fill="rgb(229,179,11)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="527.50"></text></g><g><title>`0x7FFE439B0B74 (1 samples, 0.01%)</title><rect x="99.6502%" y="501" width="0.0109%" height="15" fill="rgb(231,122,1)" fg:x="9117" fg:w="1"/><text x="99.9002%" y="511.50"></text></g><g><title>`0x7FFE4396AF08 (9,116 samples, 99.64%)</title><rect x="0.0328%" y="1189" width="99.6393%" height="15" fill="rgb(245,119,9)" fg:x="3" fg:w="9116"/><text x="0.2828%" y="1199.50">`0x7FFE4396AF08</text></g><g><title>`0x7FFE42BA257D (9,116 samples, 99.64%)</title><rect x="0.0328%" y="1173" width="99.6393%" height="15" fill="rgb(241,163,25)" fg:x="3" fg:w="9116"/><text x="0.2828%" y="1183.50">`0x7FFE42BA257D</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh() (9,105 samples, 99.52%)</title><rect x="0.1530%" y="1157" width="99.5191%" height="15" fill="rgb(217,214,3)" fg:x="14" fg:w="9105"/><text x="0.4030%" y="1167.50">my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`invoke_main() (9,095 samples, 99.41%)</title><rect x="0.2623%" y="1141" width="99.4098%" height="15" fill="rgb(240,86,28)" fg:x="24" fg:w="9095"/><text x="0.5123%" y="1151.50">my_benchmark-c9a97925f9d084bf.exe`invoke_main()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`main (9,095 samples, 99.41%)</title><rect x="0.2623%" y="1125" width="99.4098%" height="15" fill="rgb(215,47,9)" fg:x="24" fg:w="9095"/><text x="0.5123%" y="1135.50">my_benchmark-c9a97925f9d084bf.exe`main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::thread::Thread::new_inner (1 samples, 0.01%)</title><rect x="99.6612%" y="1109" width="0.0109%" height="15" fill="rgb(252,25,45)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1119.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::sync::Arc::new_uninit (1 samples, 0.01%)</title><rect x="99.6612%" y="1093" width="0.0109%" height="15" fill="rgb(251,164,9)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1103.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::sync::Arc::allocate_for_layout (1 samples, 0.01%)</title><rect x="99.6612%" y="1077" width="0.0109%" height="15" fill="rgb(233,194,0)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1087.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::sync::impl$14::new_uninit::closure$0 (1 samples, 0.01%)</title><rect x="99.6612%" y="1061" width="0.0109%" height="15" fill="rgb(249,111,24)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1071.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::allocate (1 samples, 0.01%)</title><rect x="99.6612%" y="1045" width="0.0109%" height="15" fill="rgb(250,223,3)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1055.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="99.6612%" y="1029" width="0.0109%" height="15" fill="rgb(236,178,37)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1039.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="99.6612%" y="1013" width="0.0109%" height="15" fill="rgb(241,158,50)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.01%)</title><rect x="99.6612%" y="997" width="0.0109%" height="15" fill="rgb(213,121,41)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.01%)</title><rect x="99.6612%" y="981" width="0.0109%" height="15" fill="rgb(240,92,3)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::allocate (1 samples, 0.01%)</title><rect x="99.6612%" y="965" width="0.0109%" height="15" fill="rgb(205,123,3)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::process_heap_alloc (1 samples, 0.01%)</title><rect x="99.6612%" y="949" width="0.0109%" height="15" fill="rgb(205,97,47)" fg:x="9118" fg:w="1"/><text x="99.9112%" y="959.50"></text></g><g><title>`0x7FFE439ED091 (1 samples, 0.01%)</title><rect x="99.6721%" y="1141" width="0.0109%" height="15" fill="rgb(247,152,14)" fg:x="9119" fg:w="1"/><text x="99.9221%" y="1151.50"></text></g><g><title>`0x7FFE439ECF1E (1 samples, 0.01%)</title><rect x="99.6721%" y="1125" width="0.0109%" height="15" fill="rgb(248,195,53)" fg:x="9119" fg:w="1"/><text x="99.9221%" y="1135.50"></text></g><g><title>`0x7FFE439BF373 (1 samples, 0.01%)</title><rect x="99.6721%" y="1109" width="0.0109%" height="15" fill="rgb(226,201,16)" fg:x="9119" fg:w="1"/><text x="99.9221%" y="1119.50"></text></g><g><title>`0x7FFE439B03B4 (1 samples, 0.01%)</title><rect x="99.6721%" y="1093" width="0.0109%" height="15" fill="rgb(205,98,0)" fg:x="9119" fg:w="1"/><text x="99.9221%" y="1103.50"></text></g><g><title>`0x7FFE439ED2EB (1 samples, 0.01%)</title><rect x="99.6830%" y="1141" width="0.0109%" height="15" fill="rgb(214,191,48)" fg:x="9120" fg:w="1"/><text x="99.9330%" y="1151.50"></text></g><g><title>`0x7FFE439ECCF3 (1 samples, 0.01%)</title><rect x="99.6830%" y="1125" width="0.0109%" height="15" fill="rgb(237,112,39)" fg:x="9120" fg:w="1"/><text x="99.9330%" y="1135.50"></text></g><g><title>`0x7FFE439BF977 (1 samples, 0.01%)</title><rect x="99.6830%" y="1109" width="0.0109%" height="15" fill="rgb(247,203,27)" fg:x="9120" fg:w="1"/><text x="99.9330%" y="1119.50"></text></g><g><title>`0x7FFE439BFAFF (1 samples, 0.01%)</title><rect x="99.6830%" y="1093" width="0.0109%" height="15" fill="rgb(235,124,28)" fg:x="9120" fg:w="1"/><text x="99.9330%" y="1103.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.01%)</title><rect x="99.6830%" y="1077" width="0.0109%" height="15" fill="rgb(208,207,46)" fg:x="9120" fg:w="1"/><text x="99.9330%" y="1087.50"></text></g><g><title>`0x7FFE439ED99D (1 samples, 0.01%)</title><rect x="99.6940%" y="1141" width="0.0109%" height="15" fill="rgb(234,176,4)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1151.50"></text></g><g><title>`0x7FFE4398FAEA (1 samples, 0.01%)</title><rect x="99.6940%" y="1125" width="0.0109%" height="15" fill="rgb(230,133,28)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1135.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.01%)</title><rect x="99.6940%" y="1109" width="0.0109%" height="15" fill="rgb(211,137,40)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1119.50"></text></g><g><title>`0x7FFE4394268A (1 samples, 0.01%)</title><rect x="99.6940%" y="1093" width="0.0109%" height="15" fill="rgb(254,35,13)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1103.50"></text></g><g><title>`0x7FFE439424D4 (1 samples, 0.01%)</title><rect x="99.6940%" y="1077" width="0.0109%" height="15" fill="rgb(225,49,51)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1087.50"></text></g><g><title>`0x7FFE439428BA (1 samples, 0.01%)</title><rect x="99.6940%" y="1061" width="0.0109%" height="15" fill="rgb(251,10,15)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1071.50"></text></g><g><title>`0x7FFE4395B73E (1 samples, 0.01%)</title><rect x="99.6940%" y="1045" width="0.0109%" height="15" fill="rgb(228,207,15)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1055.50"></text></g><g><title>`0x7FFE4395D9BC (1 samples, 0.01%)</title><rect x="99.6940%" y="1029" width="0.0109%" height="15" fill="rgb(241,99,19)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1039.50"></text></g><g><title>`0x7FFE4393FDD7 (1 samples, 0.01%)</title><rect x="99.6940%" y="1013" width="0.0109%" height="15" fill="rgb(207,104,49)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1023.50"></text></g><g><title>`0x7FFE43943165 (1 samples, 0.01%)</title><rect x="99.6940%" y="997" width="0.0109%" height="15" fill="rgb(234,99,18)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="1007.50"></text></g><g><title>`0x7FFE439432A1 (1 samples, 0.01%)</title><rect x="99.6940%" y="981" width="0.0109%" height="15" fill="rgb(213,191,49)" fg:x="9121" fg:w="1"/><text x="99.9440%" y="991.50"></text></g><g><title>`0x7FFE439ED9FB (1 samples, 0.01%)</title><rect x="99.7049%" y="1141" width="0.0109%" height="15" fill="rgb(210,226,19)" fg:x="9122" fg:w="1"/><text x="99.9549%" y="1151.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.01%)</title><rect x="99.7049%" y="1125" width="0.0109%" height="15" fill="rgb(229,97,18)" fg:x="9122" fg:w="1"/><text x="99.9549%" y="1135.50"></text></g><g><title>`0x7FFE4394268A (1 samples, 0.01%)</title><rect x="99.7049%" y="1109" width="0.0109%" height="15" fill="rgb(211,167,15)" fg:x="9122" fg:w="1"/><text x="99.9549%" y="1119.50"></text></g><g><title>`0x7FFE43942517 (1 samples, 0.01%)</title><rect x="99.7049%" y="1093" width="0.0109%" height="15" fill="rgb(210,169,34)" fg:x="9122" fg:w="1"/><text x="99.9549%" y="1103.50"></text></g><g><title>`0x7FFE439B3B24 (1 samples, 0.01%)</title><rect x="99.7049%" y="1077" width="0.0109%" height="15" fill="rgb(241,121,31)" fg:x="9122" fg:w="1"/><text x="99.9549%" y="1087.50"></text></g><g><title>`0x7FFE439EDA2B (1 samples, 0.01%)</title><rect x="99.7158%" y="1141" width="0.0109%" height="15" fill="rgb(232,40,11)" fg:x="9123" fg:w="1"/><text x="99.9658%" y="1151.50"></text></g><g><title>`0x7FFE439904DD (1 samples, 0.01%)</title><rect x="99.7158%" y="1125" width="0.0109%" height="15" fill="rgb(205,86,26)" fg:x="9123" fg:w="1"/><text x="99.9658%" y="1135.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.01%)</title><rect x="99.7158%" y="1109" width="0.0109%" height="15" fill="rgb(231,126,28)" fg:x="9123" fg:w="1"/><text x="99.9658%" y="1119.50"></text></g><g><title>`0x7FFE439EE3CE (1 samples, 0.01%)</title><rect x="99.7267%" y="1141" width="0.0109%" height="15" fill="rgb(219,221,18)" fg:x="9124" fg:w="1"/><text x="99.9767%" y="1151.50"></text></g><g><title>`0x7FFE4398BD58 (1 samples, 0.01%)</title><rect x="99.7267%" y="1125" width="0.0109%" height="15" fill="rgb(211,40,0)" fg:x="9124" fg:w="1"/><text x="99.9767%" y="1135.50"></text></g><g><title>`0x7FFE4398BE2C (1 samples, 0.01%)</title><rect x="99.7267%" y="1109" width="0.0109%" height="15" fill="rgb(239,85,43)" fg:x="9124" fg:w="1"/><text x="99.9767%" y="1119.50"></text></g><g><title>`0x7FFE439B0734 (1 samples, 0.01%)</title><rect x="99.7267%" y="1093" width="0.0109%" height="15" fill="rgb(231,55,21)" fg:x="9124" fg:w="1"/><text x="99.9767%" y="1103.50"></text></g><g><title>`0x7FFE43934A01 (1 samples, 0.01%)</title><rect x="99.7377%" y="1029" width="0.0109%" height="15" fill="rgb(225,184,43)" fg:x="9125" fg:w="1"/><text x="99.9877%" y="1039.50"></text></g><g><title>`0x7FFE4393B2CB (1 samples, 0.01%)</title><rect x="99.7377%" y="1013" width="0.0109%" height="15" fill="rgb(251,158,41)" fg:x="9125" fg:w="1"/><text x="99.9877%" y="1023.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.01%)</title><rect x="99.7486%" y="1029" width="0.0109%" height="15" fill="rgb(234,159,37)" fg:x="9126" fg:w="1"/><text x="99.9986%" y="1039.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.01%)</title><rect x="99.7486%" y="1013" width="0.0109%" height="15" fill="rgb(216,204,22)" fg:x="9126" fg:w="1"/><text x="99.9986%" y="1023.50"></text></g><g><title>`0x7FFE43935331 (1 samples, 0.01%)</title><rect x="99.7486%" y="997" width="0.0109%" height="15" fill="rgb(214,17,3)" fg:x="9126" fg:w="1"/><text x="99.9986%" y="1007.50"></text></g><g><title>`0x7FFE43929BDA (1 samples, 0.01%)</title><rect x="99.7486%" y="981" width="0.0109%" height="15" fill="rgb(212,111,17)" fg:x="9126" fg:w="1"/><text x="99.9986%" y="991.50"></text></g><g><title>`0x7FFE43929CED (1 samples, 0.01%)</title><rect x="99.7486%" y="965" width="0.0109%" height="15" fill="rgb(221,157,24)" fg:x="9126" fg:w="1"/><text x="99.9986%" y="975.50"></text></g><g><title>`0x7FFE43934117 (2 samples, 0.02%)</title><rect x="99.7595%" y="1013" width="0.0219%" height="15" fill="rgb(252,16,13)" fg:x="9127" fg:w="2"/><text x="100.0095%" y="1023.50"></text></g><g><title>`0x7FFE43934126 (1 samples, 0.01%)</title><rect x="99.7814%" y="1013" width="0.0109%" height="15" fill="rgb(221,62,2)" fg:x="9129" fg:w="1"/><text x="100.0314%" y="1023.50"></text></g><g><title>`0x7FFE43938D76 (6 samples, 0.07%)</title><rect x="99.7377%" y="1093" width="0.0656%" height="15" fill="rgb(247,87,22)" fg:x="9125" fg:w="6"/><text x="99.9877%" y="1103.50"></text></g><g><title>`0x7FFE4393E269 (6 samples, 0.07%)</title><rect x="99.7377%" y="1077" width="0.0656%" height="15" fill="rgb(215,73,9)" fg:x="9125" fg:w="6"/><text x="99.9877%" y="1087.50"></text></g><g><title>`0x7FFE4393D2E9 (6 samples, 0.07%)</title><rect x="99.7377%" y="1061" width="0.0656%" height="15" fill="rgb(207,175,33)" fg:x="9125" fg:w="6"/><text x="99.9877%" y="1071.50"></text></g><g><title>`0x7FFE4393C8B8 (6 samples, 0.07%)</title><rect x="99.7377%" y="1045" width="0.0656%" height="15" fill="rgb(243,129,54)" fg:x="9125" fg:w="6"/><text x="99.9877%" y="1055.50"></text></g><g><title>`0x7FFE43934C34 (4 samples, 0.04%)</title><rect x="99.7595%" y="1029" width="0.0437%" height="15" fill="rgb(227,119,45)" fg:x="9127" fg:w="4"/><text x="100.0095%" y="1039.50"></text></g><g><title>`0x7FFE43934178 (1 samples, 0.01%)</title><rect x="99.7923%" y="1013" width="0.0109%" height="15" fill="rgb(205,109,36)" fg:x="9130" fg:w="1"/><text x="100.0423%" y="1023.50"></text></g><g><title>`0x7FFE412421BC (1 samples, 0.01%)</title><rect x="99.8033%" y="981" width="0.0109%" height="15" fill="rgb(205,6,39)" fg:x="9131" fg:w="1"/><text x="100.0533%" y="991.50"></text></g><g><title>`0x7FFE4396C7DC (1 samples, 0.01%)</title><rect x="99.8033%" y="965" width="0.0109%" height="15" fill="rgb(221,32,16)" fg:x="9131" fg:w="1"/><text x="100.0533%" y="975.50"></text></g><g><title>`0x7FFE4124201D (2 samples, 0.02%)</title><rect x="99.8033%" y="997" width="0.0219%" height="15" fill="rgb(228,144,50)" fg:x="9131" fg:w="2"/><text x="100.0533%" y="1007.50"></text></g><g><title>`0x7FFE412425C7 (1 samples, 0.01%)</title><rect x="99.8142%" y="981" width="0.0109%" height="15" fill="rgb(229,201,53)" fg:x="9132" fg:w="1"/><text x="100.0642%" y="991.50"></text></g><g><title>`0x7FFE4124173C (1 samples, 0.01%)</title><rect x="99.8142%" y="965" width="0.0109%" height="15" fill="rgb(249,153,27)" fg:x="9132" fg:w="1"/><text x="100.0642%" y="975.50"></text></g><g><title>`0x7FFE412411DD (1 samples, 0.01%)</title><rect x="99.8142%" y="949" width="0.0109%" height="15" fill="rgb(227,106,25)" fg:x="9132" fg:w="1"/><text x="100.0642%" y="959.50"></text></g><g><title>`0x7FFE412417DA (1 samples, 0.01%)</title><rect x="99.8142%" y="933" width="0.0109%" height="15" fill="rgb(230,65,29)" fg:x="9132" fg:w="1"/><text x="100.0642%" y="943.50"></text></g><g><title>`0x7FFE439B20C4 (1 samples, 0.01%)</title><rect x="99.8142%" y="917" width="0.0109%" height="15" fill="rgb(221,57,46)" fg:x="9132" fg:w="1"/><text x="100.0642%" y="927.50"></text></g><g><title>`0x7FFE41241E84 (1 samples, 0.01%)</title><rect x="99.8251%" y="933" width="0.0109%" height="15" fill="rgb(229,161,17)" fg:x="9133" fg:w="1"/><text x="100.0751%" y="943.50"></text></g><g><title>`0x7FFE412438CE (1 samples, 0.01%)</title><rect x="99.8251%" y="917" width="0.0109%" height="15" fill="rgb(222,213,11)" fg:x="9133" fg:w="1"/><text x="100.0751%" y="927.50"></text></g><g><title>`0x7FFE41244D30 (1 samples, 0.01%)</title><rect x="99.8251%" y="901" width="0.0109%" height="15" fill="rgb(235,35,13)" fg:x="9133" fg:w="1"/><text x="100.0751%" y="911.50"></text></g><g><title>`0x7FFE439B17C4 (1 samples, 0.01%)</title><rect x="99.8251%" y="885" width="0.0109%" height="15" fill="rgb(233,158,34)" fg:x="9133" fg:w="1"/><text x="100.0751%" y="895.50"></text></g><g><title>`0x7FFE4124208D (2 samples, 0.02%)</title><rect x="99.8251%" y="997" width="0.0219%" height="15" fill="rgb(215,151,48)" fg:x="9133" fg:w="2"/><text x="100.0751%" y="1007.50"></text></g><g><title>`0x7FFE41242C1D (2 samples, 0.02%)</title><rect x="99.8251%" y="981" width="0.0219%" height="15" fill="rgb(229,84,14)" fg:x="9133" fg:w="2"/><text x="100.0751%" y="991.50"></text></g><g><title>`0x7FFE412B4D64 (2 samples, 0.02%)</title><rect x="99.8251%" y="965" width="0.0219%" height="15" fill="rgb(229,68,14)" fg:x="9133" fg:w="2"/><text x="100.0751%" y="975.50"></text></g><g><title>`0x7FFE41241B31 (2 samples, 0.02%)</title><rect x="99.8251%" y="949" width="0.0219%" height="15" fill="rgb(243,106,26)" fg:x="9133" fg:w="2"/><text x="100.0751%" y="959.50"></text></g><g><title>`0x7FFE41241EE2 (1 samples, 0.01%)</title><rect x="99.8360%" y="933" width="0.0109%" height="15" fill="rgb(206,45,38)" fg:x="9134" fg:w="1"/><text x="100.0860%" y="943.50"></text></g><g><title>`0x7FFE41267C3C (1 samples, 0.01%)</title><rect x="99.8360%" y="917" width="0.0109%" height="15" fill="rgb(226,6,15)" fg:x="9134" fg:w="1"/><text x="100.0860%" y="927.50"></text></g><g><title>`0x7FFE439EE843 (11 samples, 0.12%)</title><rect x="99.7377%" y="1141" width="0.1202%" height="15" fill="rgb(232,22,54)" fg:x="9125" fg:w="11"/><text x="99.9877%" y="1151.50"></text></g><g><title>`0x7FFE4393A71A (11 samples, 0.12%)</title><rect x="99.7377%" y="1125" width="0.1202%" height="15" fill="rgb(229,222,32)" fg:x="9125" fg:w="11"/><text x="99.9877%" y="1135.50"></text></g><g><title>`0x7FFE4392909C (11 samples, 0.12%)</title><rect x="99.7377%" y="1109" width="0.1202%" height="15" fill="rgb(228,62,29)" fg:x="9125" fg:w="11"/><text x="99.9877%" y="1119.50"></text></g><g><title>`0x7FFE43938E00 (5 samples, 0.05%)</title><rect x="99.8033%" y="1093" width="0.0547%" height="15" fill="rgb(251,103,34)" fg:x="9131" fg:w="5"/><text x="100.0533%" y="1103.50"></text></g><g><title>`0x7FFE4393DAED (5 samples, 0.05%)</title><rect x="99.8033%" y="1077" width="0.0547%" height="15" fill="rgb(233,12,30)" fg:x="9131" fg:w="5"/><text x="100.0533%" y="1087.50"></text></g><g><title>`0x7FFE4397D320 (5 samples, 0.05%)</title><rect x="99.8033%" y="1061" width="0.0547%" height="15" fill="rgb(238,52,0)" fg:x="9131" fg:w="5"/><text x="100.0533%" y="1071.50"></text></g><g><title>`0x7FFE4397D2AE (5 samples, 0.05%)</title><rect x="99.8033%" y="1045" width="0.0547%" height="15" fill="rgb(223,98,5)" fg:x="9131" fg:w="5"/><text x="100.0533%" y="1055.50"></text></g><g><title>`0x7FFE4397D4FD (5 samples, 0.05%)</title><rect x="99.8033%" y="1029" width="0.0547%" height="15" fill="rgb(228,75,37)" fg:x="9131" fg:w="5"/><text x="100.0533%" y="1039.50"></text></g><g><title>`0x7FFE43938B5F (5 samples, 0.05%)</title><rect x="99.8033%" y="1013" width="0.0547%" height="15" fill="rgb(205,115,49)" fg:x="9131" fg:w="5"/><text x="100.0533%" y="1023.50"></text></g><g><title>`0x7FFE41242097 (1 samples, 0.01%)</title><rect x="99.8470%" y="997" width="0.0109%" height="15" fill="rgb(250,154,43)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="1007.50"></text></g><g><title>`0x7FFE412428B4 (1 samples, 0.01%)</title><rect x="99.8470%" y="981" width="0.0109%" height="15" fill="rgb(226,43,29)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="991.50"></text></g><g><title>`0x7FFE41242976 (1 samples, 0.01%)</title><rect x="99.8470%" y="965" width="0.0109%" height="15" fill="rgb(249,228,39)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="975.50"></text></g><g><title>`0x7FFE412BEA85 (1 samples, 0.01%)</title><rect x="99.8470%" y="949" width="0.0109%" height="15" fill="rgb(216,79,43)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="959.50"></text></g><g><title>`0x7FFE412C988B (1 samples, 0.01%)</title><rect x="99.8470%" y="933" width="0.0109%" height="15" fill="rgb(228,95,12)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="943.50"></text></g><g><title>`0x7FFE412D0B0B (1 samples, 0.01%)</title><rect x="99.8470%" y="917" width="0.0109%" height="15" fill="rgb(249,221,15)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="927.50"></text></g><g><title>`0x7FFE412CB370 (1 samples, 0.01%)</title><rect x="99.8470%" y="901" width="0.0109%" height="15" fill="rgb(233,34,13)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="911.50"></text></g><g><title>`0x7FFE412CB68A (1 samples, 0.01%)</title><rect x="99.8470%" y="885" width="0.0109%" height="15" fill="rgb(214,103,39)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="895.50"></text></g><g><title>`0x7FFE412B9A10 (1 samples, 0.01%)</title><rect x="99.8470%" y="869" width="0.0109%" height="15" fill="rgb(251,126,39)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="879.50"></text></g><g><title>`0x7FFE412B62AC (1 samples, 0.01%)</title><rect x="99.8470%" y="853" width="0.0109%" height="15" fill="rgb(214,216,36)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="863.50"></text></g><g><title>`0x7FFE412B821B (1 samples, 0.01%)</title><rect x="99.8470%" y="837" width="0.0109%" height="15" fill="rgb(220,221,8)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="847.50"></text></g><g><title>`0x7FFE412BA830 (1 samples, 0.01%)</title><rect x="99.8470%" y="821" width="0.0109%" height="15" fill="rgb(240,216,3)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="831.50"></text></g><g><title>`0x7FFE412B7B98 (1 samples, 0.01%)</title><rect x="99.8470%" y="805" width="0.0109%" height="15" fill="rgb(232,218,17)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="815.50"></text></g><g><title>`0x7FFE412B9577 (1 samples, 0.01%)</title><rect x="99.8470%" y="789" width="0.0109%" height="15" fill="rgb(229,163,45)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="799.50"></text></g><g><title>`0x7FFE412B9994 (1 samples, 0.01%)</title><rect x="99.8470%" y="773" width="0.0109%" height="15" fill="rgb(231,110,42)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="783.50"></text></g><g><title>`0x7FFE412B61D0 (1 samples, 0.01%)</title><rect x="99.8470%" y="757" width="0.0109%" height="15" fill="rgb(208,170,48)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="767.50"></text></g><g><title>`0x7FFE412B816F (1 samples, 0.01%)</title><rect x="99.8470%" y="741" width="0.0109%" height="15" fill="rgb(239,116,25)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="751.50"></text></g><g><title>`0x7FFE412BA1D0 (1 samples, 0.01%)</title><rect x="99.8470%" y="725" width="0.0109%" height="15" fill="rgb(219,200,50)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="735.50"></text></g><g><title>`0x7FFE412B706C (1 samples, 0.01%)</title><rect x="99.8470%" y="709" width="0.0109%" height="15" fill="rgb(245,200,0)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="719.50"></text></g><g><title>`0x7FFE412B8CCB (1 samples, 0.01%)</title><rect x="99.8470%" y="693" width="0.0109%" height="15" fill="rgb(245,119,33)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="703.50"></text></g><g><title>`0x7FFE412BA154 (1 samples, 0.01%)</title><rect x="99.8470%" y="677" width="0.0109%" height="15" fill="rgb(231,125,12)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="687.50"></text></g><g><title>`0x7FFE412B6F90 (1 samples, 0.01%)</title><rect x="99.8470%" y="661" width="0.0109%" height="15" fill="rgb(216,96,41)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="671.50"></text></g><g><title>`0x7FFE412B8C1F (1 samples, 0.01%)</title><rect x="99.8470%" y="645" width="0.0109%" height="15" fill="rgb(248,43,45)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="655.50"></text></g><g><title>`0x7FFE412BA0D8 (1 samples, 0.01%)</title><rect x="99.8470%" y="629" width="0.0109%" height="15" fill="rgb(217,222,7)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="639.50"></text></g><g><title>`0x7FFE412B6EB4 (1 samples, 0.01%)</title><rect x="99.8470%" y="613" width="0.0109%" height="15" fill="rgb(233,28,6)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="623.50"></text></g><g><title>`0x7FFE412B8B73 (1 samples, 0.01%)</title><rect x="99.8470%" y="597" width="0.0109%" height="15" fill="rgb(231,218,15)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="607.50"></text></g><g><title>`0x7FFE412BA05C (1 samples, 0.01%)</title><rect x="99.8470%" y="581" width="0.0109%" height="15" fill="rgb(226,171,48)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="591.50"></text></g><g><title>`0x7FFE412B6DD8 (1 samples, 0.01%)</title><rect x="99.8470%" y="565" width="0.0109%" height="15" fill="rgb(235,201,9)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="575.50"></text></g><g><title>`0x7FFE412B8AC7 (1 samples, 0.01%)</title><rect x="99.8470%" y="549" width="0.0109%" height="15" fill="rgb(217,80,15)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="559.50"></text></g><g><title>`0x7FFE412B9FC5 (1 samples, 0.01%)</title><rect x="99.8470%" y="533" width="0.0109%" height="15" fill="rgb(219,152,8)" fg:x="9135" fg:w="1"/><text x="100.0970%" y="543.50"></text></g><g><title>`0x7FFE439EE8E8 (1 samples, 0.01%)</title><rect x="99.8579%" y="1141" width="0.0109%" height="15" fill="rgb(243,107,38)" fg:x="9136" fg:w="1"/><text x="100.1079%" y="1151.50"></text></g><g><title>`0x7FFE43932180 (1 samples, 0.01%)</title><rect x="99.8579%" y="1125" width="0.0109%" height="15" fill="rgb(231,17,5)" fg:x="9136" fg:w="1"/><text x="100.1079%" y="1135.50"></text></g><g><title>`0x7FFE4393290B (1 samples, 0.01%)</title><rect x="99.8579%" y="1109" width="0.0109%" height="15" fill="rgb(209,25,54)" fg:x="9136" fg:w="1"/><text x="100.1079%" y="1119.50"></text></g><g><title>`0x7FFE43932D73 (1 samples, 0.01%)</title><rect x="99.8579%" y="1093" width="0.0109%" height="15" fill="rgb(219,0,2)" fg:x="9136" fg:w="1"/><text x="100.1079%" y="1103.50"></text></g><g><title>`0x7FFE439EE8ED (1 samples, 0.01%)</title><rect x="99.8688%" y="1141" width="0.0109%" height="15" fill="rgb(246,9,5)" fg:x="9137" fg:w="1"/><text x="100.1188%" y="1151.50"></text></g><g><title>`0x7FFE43928992 (1 samples, 0.01%)</title><rect x="99.8688%" y="1125" width="0.0109%" height="15" fill="rgb(226,159,4)" fg:x="9137" fg:w="1"/><text x="100.1188%" y="1135.50"></text></g><g><title>`0x7FFE43924A92 (1 samples, 0.01%)</title><rect x="99.8688%" y="1109" width="0.0109%" height="15" fill="rgb(219,175,34)" fg:x="9137" fg:w="1"/><text x="100.1188%" y="1119.50"></text></g><g><title>`0x7FFE439349EF (1 samples, 0.01%)</title><rect x="99.8798%" y="1125" width="0.0109%" height="15" fill="rgb(236,10,46)" fg:x="9138" fg:w="1"/><text x="100.1298%" y="1135.50"></text></g><g><title>`0x7FFE43981A1C (1 samples, 0.01%)</title><rect x="99.8798%" y="1109" width="0.0109%" height="15" fill="rgb(240,211,16)" fg:x="9138" fg:w="1"/><text x="100.1298%" y="1119.50"></text></g><g><title>`0x7FFE42BA0FD9 (1 samples, 0.01%)</title><rect x="99.8798%" y="1093" width="0.0109%" height="15" fill="rgb(205,3,43)" fg:x="9138" fg:w="1"/><text x="100.1298%" y="1103.50"></text></g><g><title>`0x7FFE41259EC0 (1 samples, 0.01%)</title><rect x="99.8798%" y="1077" width="0.0109%" height="15" fill="rgb(245,7,22)" fg:x="9138" fg:w="1"/><text x="100.1298%" y="1087.50"></text></g><g><title>`0x7FFE4393D25A (1 samples, 0.01%)</title><rect x="99.8907%" y="1077" width="0.0109%" height="15" fill="rgb(239,132,32)" fg:x="9139" fg:w="1"/><text x="100.1407%" y="1087.50"></text></g><g><title>`0x7FFE4393C3AB (1 samples, 0.01%)</title><rect x="99.8907%" y="1061" width="0.0109%" height="15" fill="rgb(228,202,34)" fg:x="9139" fg:w="1"/><text x="100.1407%" y="1071.50"></text></g><g><title>`0x7FFE439B07B4 (1 samples, 0.01%)</title><rect x="99.8907%" y="1045" width="0.0109%" height="15" fill="rgb(254,200,22)" fg:x="9139" fg:w="1"/><text x="100.1407%" y="1055.50"></text></g><g><title>`0x7FFE4393C859 (1 samples, 0.01%)</title><rect x="99.9016%" y="1061" width="0.0109%" height="15" fill="rgb(219,10,39)" fg:x="9140" fg:w="1"/><text x="100.1516%" y="1071.50"></text></g><g><title>`0x7FFE4393B46C (1 samples, 0.01%)</title><rect x="99.9016%" y="1045" width="0.0109%" height="15" fill="rgb(226,210,39)" fg:x="9140" fg:w="1"/><text x="100.1516%" y="1055.50"></text></g><g><title>`0x7FFE4393C0CD (1 samples, 0.01%)</title><rect x="99.9016%" y="1029" width="0.0109%" height="15" fill="rgb(208,219,16)" fg:x="9140" fg:w="1"/><text x="100.1516%" y="1039.50"></text></g><g><title>`0x7FFE43942DBE (1 samples, 0.01%)</title><rect x="99.9016%" y="1013" width="0.0109%" height="15" fill="rgb(216,158,51)" fg:x="9140" fg:w="1"/><text x="100.1516%" y="1023.50"></text></g><g><title>`0x7FFE43942D72 (1 samples, 0.01%)</title><rect x="99.9016%" y="997" width="0.0109%" height="15" fill="rgb(233,14,44)" fg:x="9140" fg:w="1"/><text x="100.1516%" y="1007.50"></text></g><g><title>`0x7FFE439B0AD4 (1 samples, 0.01%)</title><rect x="99.9016%" y="981" width="0.0109%" height="15" fill="rgb(237,97,39)" fg:x="9140" fg:w="1"/><text x="100.1516%" y="991.50"></text></g><g><title>`0x7FFE439EEB73 (4 samples, 0.04%)</title><rect x="99.8798%" y="1141" width="0.0437%" height="15" fill="rgb(218,198,43)" fg:x="9138" fg:w="4"/><text x="100.1298%" y="1151.50"></text></g><g><title>`0x7FFE43934B7B (3 samples, 0.03%)</title><rect x="99.8907%" y="1125" width="0.0328%" height="15" fill="rgb(231,104,20)" fg:x="9139" fg:w="3"/><text x="100.1407%" y="1135.50"></text></g><g><title>`0x7FFE43934DC6 (3 samples, 0.03%)</title><rect x="99.8907%" y="1109" width="0.0328%" height="15" fill="rgb(254,36,13)" fg:x="9139" fg:w="3"/><text x="100.1407%" y="1119.50"></text></g><g><title>`0x7FFE43935D84 (3 samples, 0.03%)</title><rect x="99.8907%" y="1093" width="0.0328%" height="15" fill="rgb(248,14,50)" fg:x="9139" fg:w="3"/><text x="100.1407%" y="1103.50"></text></g><g><title>`0x7FFE4393D2E9 (2 samples, 0.02%)</title><rect x="99.9016%" y="1077" width="0.0219%" height="15" fill="rgb(217,107,29)" fg:x="9140" fg:w="2"/><text x="100.1516%" y="1087.50"></text></g><g><title>`0x7FFE4393C8B8 (1 samples, 0.01%)</title><rect x="99.9126%" y="1061" width="0.0109%" height="15" fill="rgb(251,169,33)" fg:x="9141" fg:w="1"/><text x="100.1626%" y="1071.50"></text></g><g><title>`0x7FFE43934A84 (1 samples, 0.01%)</title><rect x="99.9126%" y="1045" width="0.0109%" height="15" fill="rgb(217,108,32)" fg:x="9141" fg:w="1"/><text x="100.1626%" y="1055.50"></text></g><g><title>`0x7FFE439343A3 (1 samples, 0.01%)</title><rect x="99.9235%" y="1093" width="0.0109%" height="15" fill="rgb(219,66,42)" fg:x="9142" fg:w="1"/><text x="100.1735%" y="1103.50"></text></g><g><title>`0x7FFE4393492A (1 samples, 0.01%)</title><rect x="99.9235%" y="1077" width="0.0109%" height="15" fill="rgb(206,180,7)" fg:x="9142" fg:w="1"/><text x="100.1735%" y="1087.50"></text></g><g><title>`0x7FFE439EEB7B (2 samples, 0.02%)</title><rect x="99.9235%" y="1141" width="0.0219%" height="15" fill="rgb(208,226,31)" fg:x="9142" fg:w="2"/><text x="100.1735%" y="1151.50"></text></g><g><title>`0x7FFE4393A560 (2 samples, 0.02%)</title><rect x="99.9235%" y="1125" width="0.0219%" height="15" fill="rgb(218,26,49)" fg:x="9142" fg:w="2"/><text x="100.1735%" y="1135.50"></text></g><g><title>`0x7FFE4392127B (2 samples, 0.02%)</title><rect x="99.9235%" y="1109" width="0.0219%" height="15" fill="rgb(233,197,48)" fg:x="9142" fg:w="2"/><text x="100.1735%" y="1119.50"></text></g><g><title>`0x7FFE43934706 (1 samples, 0.01%)</title><rect x="99.9344%" y="1093" width="0.0109%" height="15" fill="rgb(252,181,51)" fg:x="9143" fg:w="1"/><text x="100.1844%" y="1103.50"></text></g><g><title>`0x7FFE43914494 (1 samples, 0.01%)</title><rect x="99.9344%" y="1077" width="0.0109%" height="15" fill="rgb(253,90,19)" fg:x="9143" fg:w="1"/><text x="100.1844%" y="1087.50"></text></g><g><title>`0x7FFE439B0AD4 (1 samples, 0.01%)</title><rect x="99.9344%" y="1061" width="0.0109%" height="15" fill="rgb(215,171,30)" fg:x="9143" fg:w="1"/><text x="100.1844%" y="1071.50"></text></g><g><title>`0x7FFE415F0B2A (1 samples, 0.01%)</title><rect x="99.9453%" y="1061" width="0.0109%" height="15" fill="rgb(214,222,9)" fg:x="9144" fg:w="1"/><text x="100.1953%" y="1071.50"></text></g><g><title>`0x7FFE415E1517 (1 samples, 0.01%)</title><rect x="99.9453%" y="1045" width="0.0109%" height="15" fill="rgb(223,3,22)" fg:x="9144" fg:w="1"/><text x="100.1953%" y="1055.50"></text></g><g><title>`0x7FFE415E0DDC (1 samples, 0.01%)</title><rect x="99.9453%" y="1029" width="0.0109%" height="15" fill="rgb(225,196,46)" fg:x="9144" fg:w="1"/><text x="100.1953%" y="1039.50"></text></g><g><title>`0x7FFE415D7764 (1 samples, 0.01%)</title><rect x="99.9453%" y="1013" width="0.0109%" height="15" fill="rgb(209,110,37)" fg:x="9144" fg:w="1"/><text x="100.1953%" y="1023.50"></text></g><g><title>`0x7FFE415D4682 (1 samples, 0.01%)</title><rect x="99.9453%" y="997" width="0.0109%" height="15" fill="rgb(249,89,12)" fg:x="9144" fg:w="1"/><text x="100.1953%" y="1007.50"></text></g><g><title>`0x7FFE415D4321 (1 samples, 0.01%)</title><rect x="99.9453%" y="981" width="0.0109%" height="15" fill="rgb(226,27,33)" fg:x="9144" fg:w="1"/><text x="100.1953%" y="991.50"></text></g><g><title>`0x7FFE415C3587 (1 samples, 0.01%)</title><rect x="99.9453%" y="965" width="0.0109%" height="15" fill="rgb(213,82,22)" fg:x="9144" fg:w="1"/><text x="100.1953%" y="975.50"></text></g><g><title>`0x7FFE4397D2AE (2 samples, 0.02%)</title><rect x="99.9453%" y="1109" width="0.0219%" height="15" fill="rgb(248,140,0)" fg:x="9144" fg:w="2"/><text x="100.1953%" y="1119.50"></text></g><g><title>`0x7FFE4397D4FD (2 samples, 0.02%)</title><rect x="99.9453%" y="1093" width="0.0219%" height="15" fill="rgb(228,106,3)" fg:x="9144" fg:w="2"/><text x="100.1953%" y="1103.50"></text></g><g><title>`0x7FFE43938B5F (2 samples, 0.02%)</title><rect x="99.9453%" y="1077" width="0.0219%" height="15" fill="rgb(209,23,37)" fg:x="9144" fg:w="2"/><text x="100.1953%" y="1087.50"></text></g><g><title>`0x7FFE43865BDA (1 samples, 0.01%)</title><rect x="99.9563%" y="1061" width="0.0109%" height="15" fill="rgb(241,93,50)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="1071.50"></text></g><g><title>`0x7FFE43866596 (1 samples, 0.01%)</title><rect x="99.9563%" y="1045" width="0.0109%" height="15" fill="rgb(253,46,43)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="1055.50"></text></g><g><title>`0x7FFE438643D9 (1 samples, 0.01%)</title><rect x="99.9563%" y="1029" width="0.0109%" height="15" fill="rgb(226,206,43)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="1039.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.01%)</title><rect x="99.9563%" y="1013" width="0.0109%" height="15" fill="rgb(217,54,7)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="1023.50"></text></g><g><title>`0x7FFE43942639 (1 samples, 0.01%)</title><rect x="99.9563%" y="997" width="0.0109%" height="15" fill="rgb(223,5,52)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="1007.50"></text></g><g><title>`0x7FFE43942799 (1 samples, 0.01%)</title><rect x="99.9563%" y="981" width="0.0109%" height="15" fill="rgb(206,52,46)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="991.50"></text></g><g><title>`0x7FFE4394CC7A (1 samples, 0.01%)</title><rect x="99.9563%" y="965" width="0.0109%" height="15" fill="rgb(253,136,11)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="975.50"></text></g><g><title>`0x7FFE4394DB21 (1 samples, 0.01%)</title><rect x="99.9563%" y="949" width="0.0109%" height="15" fill="rgb(208,106,33)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="959.50"></text></g><g><title>`0x7FFE43973522 (1 samples, 0.01%)</title><rect x="99.9563%" y="933" width="0.0109%" height="15" fill="rgb(206,54,4)" fg:x="9145" fg:w="1"/><text x="100.2063%" y="943.50"></text></g><g><title>`0x7FFE439EECF9 (3 samples, 0.03%)</title><rect x="99.9453%" y="1141" width="0.0328%" height="15" fill="rgb(213,3,15)" fg:x="9144" fg:w="3"/><text x="100.1953%" y="1151.50"></text></g><g><title>`0x7FFE4397D320 (3 samples, 0.03%)</title><rect x="99.9453%" y="1125" width="0.0328%" height="15" fill="rgb(252,211,39)" fg:x="9144" fg:w="3"/><text x="100.1953%" y="1135.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.01%)</title><rect x="99.9672%" y="1109" width="0.0109%" height="15" fill="rgb(223,6,36)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1119.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.01%)</title><rect x="99.9672%" y="1093" width="0.0109%" height="15" fill="rgb(252,169,45)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1103.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.01%)</title><rect x="99.9672%" y="1077" width="0.0109%" height="15" fill="rgb(212,48,26)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1087.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.01%)</title><rect x="99.9672%" y="1061" width="0.0109%" height="15" fill="rgb(251,102,48)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1071.50"></text></g><g><title>`0x7FFE410076B3 (1 samples, 0.01%)</title><rect x="99.9672%" y="1045" width="0.0109%" height="15" fill="rgb(243,208,16)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1055.50"></text></g><g><title>`0x7FFE41007FCA (1 samples, 0.01%)</title><rect x="99.9672%" y="1029" width="0.0109%" height="15" fill="rgb(219,96,24)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1039.50"></text></g><g><title>`0x7FFE40FF63E4 (1 samples, 0.01%)</title><rect x="99.9672%" y="1013" width="0.0109%" height="15" fill="rgb(219,33,29)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1023.50"></text></g><g><title>`0x7FFE40FF656F (1 samples, 0.01%)</title><rect x="99.9672%" y="997" width="0.0109%" height="15" fill="rgb(223,176,5)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="1007.50"></text></g><g><title>`0x7FFE40FF67E1 (1 samples, 0.01%)</title><rect x="99.9672%" y="981" width="0.0109%" height="15" fill="rgb(228,140,14)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="991.50"></text></g><g><title>`0x7FFE40FF81C0 (1 samples, 0.01%)</title><rect x="99.9672%" y="965" width="0.0109%" height="15" fill="rgb(217,179,31)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="975.50"></text></g><g><title>`0x7FFE40FF896D (1 samples, 0.01%)</title><rect x="99.9672%" y="949" width="0.0109%" height="15" fill="rgb(230,9,30)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="959.50"></text></g><g><title>`0x7FFE40FF855F (1 samples, 0.01%)</title><rect x="99.9672%" y="933" width="0.0109%" height="15" fill="rgb(230,136,20)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="943.50"></text></g><g><title>`0x7FFE40FF87A5 (1 samples, 0.01%)</title><rect x="99.9672%" y="917" width="0.0109%" height="15" fill="rgb(215,210,22)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="927.50"></text></g><g><title>`0x7FFE412360FF (1 samples, 0.01%)</title><rect x="99.9672%" y="901" width="0.0109%" height="15" fill="rgb(218,43,5)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="911.50"></text></g><g><title>`0x7FFE41263E75 (1 samples, 0.01%)</title><rect x="99.9672%" y="885" width="0.0109%" height="15" fill="rgb(216,11,5)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="895.50"></text></g><g><title>`0x7FFE41240E27 (1 samples, 0.01%)</title><rect x="99.9672%" y="869" width="0.0109%" height="15" fill="rgb(209,82,29)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="879.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.01%)</title><rect x="99.9672%" y="853" width="0.0109%" height="15" fill="rgb(244,115,12)" fg:x="9146" fg:w="1"/><text x="100.2172%" y="863.50"></text></g><g><title>`0x7FFE439843A3 (29 samples, 0.32%)</title><rect x="99.6721%" y="1173" width="0.3170%" height="15" fill="rgb(222,82,18)" fg:x="9119" fg:w="29"/><text x="99.9221%" y="1183.50"></text></g><g><title>`0x7FFE439DA99A (29 samples, 0.32%)</title><rect x="99.6721%" y="1157" width="0.3170%" height="15" fill="rgb(249,227,8)" fg:x="9119" fg:w="29"/><text x="99.9221%" y="1167.50"></text></g><g><title>`0x7FFE439EEDDD (1 samples, 0.01%)</title><rect x="99.9781%" y="1141" width="0.0109%" height="15" fill="rgb(253,141,45)" fg:x="9147" fg:w="1"/><text x="100.2281%" y="1151.50"></text></g><g><title>`0x7FFE439397E9 (1 samples, 0.01%)</title><rect x="99.9781%" y="1125" width="0.0109%" height="15" fill="rgb(234,184,4)" fg:x="9147" fg:w="1"/><text x="100.2281%" y="1135.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.01%)</title><rect x="99.9781%" y="1109" width="0.0109%" height="15" fill="rgb(218,194,23)" fg:x="9147" fg:w="1"/><text x="100.2281%" y="1119.50"></text></g><g><title>`0x7FFE4398BFCA (1 samples, 0.01%)</title><rect x="99.9781%" y="1093" width="0.0109%" height="15" fill="rgb(235,66,41)" fg:x="9147" fg:w="1"/><text x="100.2281%" y="1103.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::thread_local::guard::windows::tls_callback (1 samples, 0.01%)</title><rect x="99.9781%" y="1077" width="0.0109%" height="15" fill="rgb(245,217,1)" fg:x="9147" fg:w="1"/><text x="100.2281%" y="1087.50"></text></g><g><title>all (9,149 samples, 100%)</title><rect x="0.0000%" y="1205" width="100.0000%" height="15" fill="rgb(229,91,1)" fg:x="0" fg:w="9149"/><text x="0.2500%" y="1215.50"></text></g><g><title>`0x7FFE439842CE (30 samples, 0.33%)</title><rect x="99.6721%" y="1189" width="0.3279%" height="15" fill="rgb(207,101,30)" fg:x="9119" fg:w="30"/><text x="99.9221%" y="1199.50"></text></g><g><title>`0x7FFE439BE133 (1 samples, 0.01%)</title><rect x="99.9891%" y="1173" width="0.0109%" height="15" fill="rgb(223,82,49)" fg:x="9148" fg:w="1"/><text x="100.2391%" y="1183.50"></text></g><g><title>`0x7FFE439BE8CD (1 samples, 0.01%)</title><rect x="99.9891%" y="1157" width="0.0109%" height="15" fill="rgb(218,167,17)" fg:x="9148" fg:w="1"/><text x="100.2391%" y="1167.50"></text></g><g><title>`0x7FFE4393B61F (1 samples, 0.01%)</title><rect x="99.9891%" y="1141" width="0.0109%" height="15" fill="rgb(208,103,14)" fg:x="9148" fg:w="1"/><text x="100.2391%" y="1151.50"></text></g></svg></svg>