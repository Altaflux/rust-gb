<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1190" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1173.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1173.00"> </text><svg id="frames" x="10" width="1180" total_samples="2964"><g><title>`0x7FFE4396AEE0 (1 samples, 0.03%)</title><rect x="0.0000%" y="1125" width="0.0337%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>`0x7FFE439457AB (1 samples, 0.03%)</title><rect x="0.0337%" y="1093" width="0.0337%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2837%" y="1103.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.03%)</title><rect x="0.0337%" y="1077" width="0.0337%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="0.2837%" y="1087.50"></text></g><g><title>`0x7FFE4394FBF8 (1 samples, 0.03%)</title><rect x="0.0337%" y="1061" width="0.0337%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2837%" y="1071.50"></text></g><g><title>`0x7FFE43955C9B (1 samples, 0.03%)</title><rect x="0.0337%" y="1045" width="0.0337%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2837%" y="1055.50"></text></g><g><title>`0x7FFE43956019 (1 samples, 0.03%)</title><rect x="0.0337%" y="1029" width="0.0337%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2837%" y="1039.50"></text></g><g><title>`0x7FFE439B03D4 (1 samples, 0.03%)</title><rect x="0.0337%" y="1013" width="0.0337%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2837%" y="1023.50"></text></g><g><title>`0x7FFE43934126 (1 samples, 0.03%)</title><rect x="0.0675%" y="1029" width="0.0337%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.3175%" y="1039.50"></text></g><g><title>`0x7FFE4392127B (2 samples, 0.07%)</title><rect x="0.0675%" y="1045" width="0.0675%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="2"/><text x="0.3175%" y="1055.50"></text></g><g><title>`0x7FFE4393468D (1 samples, 0.03%)</title><rect x="0.1012%" y="1029" width="0.0337%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.3512%" y="1039.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.03%)</title><rect x="0.1012%" y="1013" width="0.0337%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.3512%" y="1023.50"></text></g><g><title>`0x7FFE43935158 (1 samples, 0.03%)</title><rect x="0.1012%" y="997" width="0.0337%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.3512%" y="1007.50"></text></g><g><title>`0x7FFE43920EEE (1 samples, 0.03%)</title><rect x="0.1350%" y="1029" width="0.0337%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="0.3850%" y="1039.50"></text></g><g><title>`0x7FFE4393E011 (1 samples, 0.03%)</title><rect x="0.1350%" y="1013" width="0.0337%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.3850%" y="1023.50"></text></g><g><title>`0x7FFE4393A8C7 (1 samples, 0.03%)</title><rect x="0.1350%" y="997" width="0.0337%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="0.3850%" y="1007.50"></text></g><g><title>`0x7FFE4393B109 (1 samples, 0.03%)</title><rect x="0.1350%" y="981" width="0.0337%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="0.3850%" y="991.50"></text></g><g><title>`0x7FFE439B0874 (1 samples, 0.03%)</title><rect x="0.1350%" y="965" width="0.0337%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="0.3850%" y="975.50"></text></g><g><title>`0x7FFE43945E46 (4 samples, 0.13%)</title><rect x="0.0675%" y="1093" width="0.1350%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="4"/><text x="0.3175%" y="1103.50"></text></g><g><title>`0x7FFE4397287A (4 samples, 0.13%)</title><rect x="0.0675%" y="1077" width="0.1350%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="4"/><text x="0.3175%" y="1087.50"></text></g><g><title>`0x7FFE439211BB (4 samples, 0.13%)</title><rect x="0.0675%" y="1061" width="0.1350%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="4"/><text x="0.3175%" y="1071.50"></text></g><g><title>`0x7FFE43921380 (2 samples, 0.07%)</title><rect x="0.1350%" y="1045" width="0.0675%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="2"/><text x="0.3850%" y="1055.50"></text></g><g><title>`0x7FFE43920FB8 (1 samples, 0.03%)</title><rect x="0.1687%" y="1029" width="0.0337%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="1"/><text x="0.4187%" y="1039.50"></text></g><g><title>`0x7FFE43920AFF (1 samples, 0.03%)</title><rect x="0.1687%" y="1013" width="0.0337%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="1"/><text x="0.4187%" y="1023.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.03%)</title><rect x="0.1687%" y="997" width="0.0337%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="1"/><text x="0.4187%" y="1007.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.03%)</title><rect x="0.1687%" y="981" width="0.0337%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="1"/><text x="0.4187%" y="991.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.03%)</title><rect x="0.1687%" y="965" width="0.0337%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="1"/><text x="0.4187%" y="975.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.03%)</title><rect x="0.1687%" y="949" width="0.0337%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="1"/><text x="0.4187%" y="959.50"></text></g><g><title>`0x7FFE43921472 (1 samples, 0.03%)</title><rect x="0.2024%" y="933" width="0.0337%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="1"/><text x="0.4524%" y="943.50"></text></g><g><title>`0x7FFE4393A8C7 (1 samples, 0.03%)</title><rect x="0.2024%" y="917" width="0.0337%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="1"/><text x="0.4524%" y="927.50"></text></g><g><title>`0x7FFE4393B109 (1 samples, 0.03%)</title><rect x="0.2024%" y="901" width="0.0337%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="1"/><text x="0.4524%" y="911.50"></text></g><g><title>`0x7FFE439B0874 (1 samples, 0.03%)</title><rect x="0.2024%" y="885" width="0.0337%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="1"/><text x="0.4524%" y="895.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.03%)</title><rect x="0.2362%" y="901" width="0.0337%" height="15" fill="rgb(229,88,8)" fg:x="7" fg:w="1"/><text x="0.4862%" y="911.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.03%)</title><rect x="0.2362%" y="885" width="0.0337%" height="15" fill="rgb(213,181,19)" fg:x="7" fg:w="1"/><text x="0.4862%" y="895.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.03%)</title><rect x="0.2362%" y="869" width="0.0337%" height="15" fill="rgb(254,191,54)" fg:x="7" fg:w="1"/><text x="0.4862%" y="879.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.03%)</title><rect x="0.2362%" y="853" width="0.0337%" height="15" fill="rgb(241,83,37)" fg:x="7" fg:w="1"/><text x="0.4862%" y="863.50"></text></g><g><title>`0x7FFE43938D94 (3 samples, 0.10%)</title><rect x="0.2024%" y="965" width="0.1012%" height="15" fill="rgb(233,36,39)" fg:x="6" fg:w="3"/><text x="0.4524%" y="975.50"></text></g><g><title>`0x7FFE439212AF (3 samples, 0.10%)</title><rect x="0.2024%" y="949" width="0.1012%" height="15" fill="rgb(226,3,54)" fg:x="6" fg:w="3"/><text x="0.4524%" y="959.50"></text></g><g><title>`0x7FFE439214E0 (2 samples, 0.07%)</title><rect x="0.2362%" y="933" width="0.0675%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="2"/><text x="0.4862%" y="943.50"></text></g><g><title>`0x7FFE43920AFF (2 samples, 0.07%)</title><rect x="0.2362%" y="917" width="0.0675%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="2"/><text x="0.4862%" y="927.50"></text></g><g><title>`0x7FFE4393C8B8 (1 samples, 0.03%)</title><rect x="0.2699%" y="901" width="0.0337%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="1"/><text x="0.5199%" y="911.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.03%)</title><rect x="0.2699%" y="885" width="0.0337%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="1"/><text x="0.5199%" y="895.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.03%)</title><rect x="0.2699%" y="869" width="0.0337%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="1"/><text x="0.5199%" y="879.50"></text></g><g><title>`0x7FFE43935867 (1 samples, 0.03%)</title><rect x="0.2699%" y="853" width="0.0337%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="1"/><text x="0.5199%" y="863.50"></text></g><g><title>`0x7FFE4393DAA1 (1 samples, 0.03%)</title><rect x="0.3036%" y="949" width="0.0337%" height="15" fill="rgb(213,116,39)" fg:x="9" fg:w="1"/><text x="0.5536%" y="959.50"></text></g><g><title>`0x7FFE4393ECC9 (1 samples, 0.03%)</title><rect x="0.3036%" y="933" width="0.0337%" height="15" fill="rgb(222,207,29)" fg:x="9" fg:w="1"/><text x="0.5536%" y="943.50"></text></g><g><title>`0x7FFE4393ECAF (1 samples, 0.03%)</title><rect x="0.3036%" y="917" width="0.0337%" height="15" fill="rgb(206,96,30)" fg:x="9" fg:w="1"/><text x="0.5536%" y="927.50"></text></g><g><title>`0x7FFE4393ED81 (1 samples, 0.03%)</title><rect x="0.3036%" y="901" width="0.0337%" height="15" fill="rgb(218,138,4)" fg:x="9" fg:w="1"/><text x="0.5536%" y="911.50"></text></g><g><title>`0x7FFE4100BEA8 (5 samples, 0.17%)</title><rect x="0.2024%" y="1061" width="0.1687%" height="15" fill="rgb(250,191,14)" fg:x="6" fg:w="5"/><text x="0.4524%" y="1071.50"></text></g><g><title>`0x7FFE41018FB1 (5 samples, 0.17%)</title><rect x="0.2024%" y="1045" width="0.1687%" height="15" fill="rgb(239,60,40)" fg:x="6" fg:w="5"/><text x="0.4524%" y="1055.50"></text></g><g><title>`0x7FFE41011C03 (5 samples, 0.17%)</title><rect x="0.2024%" y="1029" width="0.1687%" height="15" fill="rgb(206,27,48)" fg:x="6" fg:w="5"/><text x="0.4524%" y="1039.50"></text></g><g><title>`0x7FFE4122B662 (5 samples, 0.17%)</title><rect x="0.2024%" y="1013" width="0.1687%" height="15" fill="rgb(225,35,8)" fg:x="6" fg:w="5"/><text x="0.4524%" y="1023.50"></text></g><g><title>`0x7FFE4393A71A (5 samples, 0.17%)</title><rect x="0.2024%" y="997" width="0.1687%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="5"/><text x="0.4524%" y="1007.50"></text></g><g><title>`0x7FFE4392909C (5 samples, 0.17%)</title><rect x="0.2024%" y="981" width="0.1687%" height="15" fill="rgb(247,123,22)" fg:x="6" fg:w="5"/><text x="0.4524%" y="991.50"></text></g><g><title>`0x7FFE43938E00 (2 samples, 0.07%)</title><rect x="0.3036%" y="965" width="0.0675%" height="15" fill="rgb(231,138,38)" fg:x="9" fg:w="2"/><text x="0.5536%" y="975.50"></text></g><g><title>`0x7FFE4393DAED (1 samples, 0.03%)</title><rect x="0.3374%" y="949" width="0.0337%" height="15" fill="rgb(231,145,46)" fg:x="10" fg:w="1"/><text x="0.5874%" y="959.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.03%)</title><rect x="0.3374%" y="933" width="0.0337%" height="15" fill="rgb(251,118,11)" fg:x="10" fg:w="1"/><text x="0.5874%" y="943.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.03%)</title><rect x="0.3374%" y="917" width="0.0337%" height="15" fill="rgb(217,147,25)" fg:x="10" fg:w="1"/><text x="0.5874%" y="927.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.03%)</title><rect x="0.3374%" y="901" width="0.0337%" height="15" fill="rgb(247,81,37)" fg:x="10" fg:w="1"/><text x="0.5874%" y="911.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.03%)</title><rect x="0.3374%" y="885" width="0.0337%" height="15" fill="rgb(209,12,38)" fg:x="10" fg:w="1"/><text x="0.5874%" y="895.50"></text></g><g><title>`0x7FFE42CD7C34 (1 samples, 0.03%)</title><rect x="0.3374%" y="869" width="0.0337%" height="15" fill="rgb(227,1,9)" fg:x="10" fg:w="1"/><text x="0.5874%" y="879.50"></text></g><g><title>`0x7FFE42D0F765 (1 samples, 0.03%)</title><rect x="0.3374%" y="853" width="0.0337%" height="15" fill="rgb(248,47,43)" fg:x="10" fg:w="1"/><text x="0.5874%" y="863.50"></text></g><g><title>`0x7FFE4100C099 (6 samples, 0.20%)</title><rect x="0.2024%" y="1077" width="0.2024%" height="15" fill="rgb(221,10,30)" fg:x="6" fg:w="6"/><text x="0.4524%" y="1087.50"></text></g><g><title>`0x7FFE4100BED8 (1 samples, 0.03%)</title><rect x="0.3711%" y="1061" width="0.0337%" height="15" fill="rgb(210,229,1)" fg:x="11" fg:w="1"/><text x="0.6211%" y="1071.50"></text></g><g><title>`0x7FFE42BA7FAB (1 samples, 0.03%)</title><rect x="0.3711%" y="1045" width="0.0337%" height="15" fill="rgb(222,148,37)" fg:x="11" fg:w="1"/><text x="0.6211%" y="1055.50"></text></g><g><title>`0x7FFE4396115D (1 samples, 0.03%)</title><rect x="0.3711%" y="1029" width="0.0337%" height="15" fill="rgb(234,67,33)" fg:x="11" fg:w="1"/><text x="0.6211%" y="1039.50"></text></g><g><title>`0x7FFE43961566 (1 samples, 0.03%)</title><rect x="0.3711%" y="1013" width="0.0337%" height="15" fill="rgb(247,98,35)" fg:x="11" fg:w="1"/><text x="0.6211%" y="1023.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.03%)</title><rect x="0.3711%" y="997" width="0.0337%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="1"/><text x="0.6211%" y="1007.50"></text></g><g><title>`0x7FFE415F0C05 (1 samples, 0.03%)</title><rect x="0.3711%" y="981" width="0.0337%" height="15" fill="rgb(213,79,30)" fg:x="11" fg:w="1"/><text x="0.6211%" y="991.50"></text></g><g><title>`0x7FFE415E1BD2 (1 samples, 0.03%)</title><rect x="0.3711%" y="965" width="0.0337%" height="15" fill="rgb(246,177,23)" fg:x="11" fg:w="1"/><text x="0.6211%" y="975.50"></text></g><g><title>`0x7FFE415E1B57 (1 samples, 0.03%)</title><rect x="0.3711%" y="949" width="0.0337%" height="15" fill="rgb(230,62,27)" fg:x="11" fg:w="1"/><text x="0.6211%" y="959.50"></text></g><g><title>`0x7FFE415E0AB9 (1 samples, 0.03%)</title><rect x="0.3711%" y="933" width="0.0337%" height="15" fill="rgb(216,154,8)" fg:x="11" fg:w="1"/><text x="0.6211%" y="943.50"></text></g><g><title>`0x7FFE4397DC32 (1 samples, 0.03%)</title><rect x="0.3711%" y="917" width="0.0337%" height="15" fill="rgb(244,35,45)" fg:x="11" fg:w="1"/><text x="0.6211%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;criterion::Criterion&lt;criterion::measurement::WallTime&gt; &gt;(criterion::Criterion (1 samples, 0.03%)</title><rect x="0.4049%" y="1013" width="0.0337%" height="15" fill="rgb(251,115,12)" fg:x="12" fg:w="1"/><text x="0.6549%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4049%" y="997" width="0.0337%" height="15" fill="rgb(240,54,50)" fg:x="12" fg:w="1"/><text x="0.6549%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4049%" y="981" width="0.0337%" height="15" fill="rgb(233,84,52)" fg:x="12" fg:w="1"/><text x="0.6549%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4049%" y="965" width="0.0337%" height="15" fill="rgb(207,117,47)" fg:x="12" fg:w="1"/><text x="0.6549%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4049%" y="949" width="0.0337%" height="15" fill="rgb(249,43,39)" fg:x="12" fg:w="1"/><text x="0.6549%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="0.4049%" y="933" width="0.0337%" height="15" fill="rgb(209,38,44)" fg:x="12" fg:w="1"/><text x="0.6549%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="0.4049%" y="917" width="0.0337%" height="15" fill="rgb(236,212,23)" fg:x="12" fg:w="1"/><text x="0.6549%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="0.4049%" y="901" width="0.0337%" height="15" fill="rgb(242,79,21)" fg:x="12" fg:w="1"/><text x="0.6549%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="0.4049%" y="885" width="0.0337%" height="15" fill="rgb(211,96,35)" fg:x="12" fg:w="1"/><text x="0.6549%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.03%)</title><rect x="0.4049%" y="869" width="0.0337%" height="15" fill="rgb(253,215,40)" fg:x="12" fg:w="1"/><text x="0.6549%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;enum2$&lt;core::option::Option&lt;criterion::html::Html&gt; &gt; &gt;(enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="0.4049%" y="853" width="0.0337%" height="15" fill="rgb(211,81,21)" fg:x="12" fg:w="1"/><text x="0.6549%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4049%" y="837" width="0.0337%" height="15" fill="rgb(208,190,38)" fg:x="12" fg:w="1"/><text x="0.6549%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4049%" y="821" width="0.0337%" height="15" fill="rgb(235,213,38)" fg:x="12" fg:w="1"/><text x="0.6549%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap&lt;ref$ (1 samples, 0.03%)</title><rect x="0.4049%" y="805" width="0.0337%" height="15" fill="rgb(237,122,38)" fg:x="12" fg:w="1"/><text x="0.6549%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(hashbrown::map::HashMap&lt;ref$ (1 samples, 0.03%)</title><rect x="0.4049%" y="789" width="0.0337%" height="15" fill="rgb(244,218,35)" fg:x="12" fg:w="1"/><text x="0.6549%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$&lt;ref$ (1 samples, 0.03%)</title><rect x="0.4049%" y="773" width="0.0337%" height="15" fill="rgb(240,68,47)" fg:x="12" fg:w="1"/><text x="0.6549%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::impl$18::drop(hashbrown::raw::RawTable&lt;tuple$&lt;ref$ (1 samples, 0.03%)</title><rect x="0.4049%" y="757" width="0.0337%" height="15" fill="rgb(210,16,53)" fg:x="12" fg:w="1"/><text x="0.6549%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::RawTableInner::drop_inner_table (1 samples, 0.03%)</title><rect x="0.4049%" y="741" width="0.0337%" height="15" fill="rgb(235,124,12)" fg:x="12" fg:w="1"/><text x="0.6549%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::RawTableInner::drop_elements (1 samples, 0.03%)</title><rect x="0.4049%" y="725" width="0.0337%" height="15" fill="rgb(224,169,11)" fg:x="12" fg:w="1"/><text x="0.6549%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`hashbrown::raw::Bucket&lt;tuple$&lt;ref$&lt;str$&gt;,tinytemplate::template::Template&gt; &gt;::drop (1 samples, 0.03%)</title><rect x="0.4049%" y="709" width="0.0337%" height="15" fill="rgb(250,166,2)" fg:x="12" fg:w="1"/><text x="0.6549%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;ref$ (1 samples, 0.03%)</title><rect x="0.4049%" y="693" width="0.0337%" height="15" fill="rgb(242,216,29)" fg:x="12" fg:w="1"/><text x="0.6549%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(tuple$&lt;ref$ (1 samples, 0.03%)</title><rect x="0.4049%" y="677" width="0.0337%" height="15" fill="rgb(230,116,27)" fg:x="12" fg:w="1"/><text x="0.6549%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="0.4049%" y="661" width="0.0337%" height="15" fill="rgb(228,99,48)" fg:x="12" fg:w="1"/><text x="0.6549%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (1 samples, 0.03%)</title><rect x="0.4049%" y="645" width="0.0337%" height="15" fill="rgb(253,11,6)" fg:x="12" fg:w="1"/><text x="0.6549%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$ (1 samples, 0.03%)</title><rect x="0.4049%" y="629" width="0.0337%" height="15" fill="rgb(247,143,39)" fg:x="12" fg:w="1"/><text x="0.6549%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;enum2$ (1 samples, 0.03%)</title><rect x="0.4049%" y="613" width="0.0337%" height="15" fill="rgb(236,97,10)" fg:x="12" fg:w="1"/><text x="0.6549%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::final_summary (1 samples, 0.03%)</title><rect x="0.4386%" y="1013" width="0.0337%" height="15" fill="rgb(233,208,19)" fg:x="13" fg:w="1"/><text x="0.6886%" y="1023.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (1 samples, 0.03%)</title><rect x="0.4386%" y="997" width="0.0337%" height="15" fill="rgb(216,164,2)" fg:x="13" fg:w="1"/><text x="0.6886%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::arg (1 samples, 0.03%)</title><rect x="0.4386%" y="981" width="0.0337%" height="15" fill="rgb(220,129,5)" fg:x="13" fg:w="1"/><text x="0.6886%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::arg_internal (1 samples, 0.03%)</title><rect x="0.4386%" y="965" width="0.0337%" height="15" fill="rgb(242,17,10)" fg:x="13" fg:w="1"/><text x="0.6886%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::mkeymap::MKeyMap::push (1 samples, 0.03%)</title><rect x="0.4386%" y="949" width="0.0337%" height="15" fill="rgb(242,107,0)" fg:x="13" fg:w="1"/><text x="0.6886%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;clap_builder::builder::arg::Arg,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="0.4386%" y="933" width="0.0337%" height="15" fill="rgb(251,28,31)" fg:x="13" fg:w="1"/><text x="0.6886%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::mut_ptr::impl$0::add (1 samples, 0.03%)</title><rect x="0.4386%" y="917" width="0.0337%" height="15" fill="rgb(233,223,10)" fg:x="13" fg:w="1"/><text x="0.6886%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;clap_builder::builder::arg::Arg,alloc::alloc::Global&gt;::grow_one&lt;clap_builder::builder::arg::Arg,alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="0.4386%" y="901" width="0.0337%" height="15" fill="rgb(215,21,27)" fg:x="13" fg:w="1"/><text x="0.6886%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt; &gt;(criterion::benchmark_group::BenchmarkGroup (1 samples, 0.03%)</title><rect x="0.4723%" y="997" width="0.0337%" height="15" fill="rgb(232,23,21)" fg:x="14" fg:w="1"/><text x="0.7223%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::impl$1::drop(criterion::benchmark_group::BenchmarkGroup (1 samples, 0.03%)</title><rect x="0.4723%" y="981" width="0.0337%" height="15" fill="rgb(244,5,23)" fg:x="14" fg:w="1"/><text x="0.7223%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::impl$5::group_separator (1 samples, 0.03%)</title><rect x="0.4723%" y="965" width="0.0337%" height="15" fill="rgb(226,81,46)" fg:x="14" fg:w="1"/><text x="0.7223%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::report::impl$7::group_separator (1 samples, 0.03%)</title><rect x="0.4723%" y="949" width="0.0337%" height="15" fill="rgb(247,70,30)" fg:x="14" fg:w="1"/><text x="0.7223%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::_print (1 samples, 0.03%)</title><rect x="0.4723%" y="933" width="0.0337%" height="15" fill="rgb(212,68,19)" fg:x="14" fg:w="1"/><text x="0.7223%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::print_to (1 samples, 0.03%)</title><rect x="0.4723%" y="917" width="0.0337%" height="15" fill="rgb(240,187,13)" fg:x="14" fg:w="1"/><text x="0.7223%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$15::write_fmt (1 samples, 0.03%)</title><rect x="0.4723%" y="901" width="0.0337%" height="15" fill="rgb(223,113,26)" fg:x="14" fg:w="1"/><text x="0.7223%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$16::write_fmt (1 samples, 0.03%)</title><rect x="0.4723%" y="885" width="0.0337%" height="15" fill="rgb(206,192,2)" fg:x="14" fg:w="1"/><text x="0.7223%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt (1 samples, 0.03%)</title><rect x="0.4723%" y="869" width="0.0337%" height="15" fill="rgb(241,108,4)" fg:x="14" fg:w="1"/><text x="0.7223%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::fmt::write (1 samples, 0.03%)</title><rect x="0.4723%" y="853" width="0.0337%" height="15" fill="rgb(247,173,49)" fg:x="14" fg:w="1"/><text x="0.7223%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.03%)</title><rect x="0.4723%" y="837" width="0.0337%" height="15" fill="rgb(224,114,35)" fg:x="14" fg:w="1"/><text x="0.7223%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$19::write_all (1 samples, 0.03%)</title><rect x="0.4723%" y="821" width="0.0337%" height="15" fill="rgb(245,159,27)" fg:x="14" fg:w="1"/><text x="0.7223%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cell::RefCell::borrow_mut (1 samples, 0.03%)</title><rect x="0.4723%" y="805" width="0.0337%" height="15" fill="rgb(245,172,44)" fg:x="14" fg:w="1"/><text x="0.7223%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.03%)</title><rect x="0.4723%" y="789" width="0.0337%" height="15" fill="rgb(236,23,11)" fg:x="14" fg:w="1"/><text x="0.7223%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$1::write_all (1 samples, 0.03%)</title><rect x="0.4723%" y="773" width="0.0337%" height="15" fill="rgb(205,117,38)" fg:x="14" fg:w="1"/><text x="0.7223%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::handle_ebadf (1 samples, 0.03%)</title><rect x="0.4723%" y="757" width="0.0337%" height="15" fill="rgb(237,72,25)" fg:x="14" fg:w="1"/><text x="0.7223%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_all&lt;std::sys::pal::windows::stdio::Stdout&gt; (1 samples, 0.03%)</title><rect x="0.4723%" y="741" width="0.0337%" height="15" fill="rgb(244,70,9)" fg:x="14" fg:w="1"/><text x="0.7223%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write (1 samples, 0.03%)</title><rect x="0.4723%" y="725" width="0.0337%" height="15" fill="rgb(217,125,39)" fg:x="14" fg:w="1"/><text x="0.7223%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::is_console (1 samples, 0.03%)</title><rect x="0.4723%" y="709" width="0.0337%" height="15" fill="rgb(235,36,10)" fg:x="14" fg:w="1"/><text x="0.7223%" y="719.50"></text></g><g><title>`0x7FFE41242F43 (1 samples, 0.03%)</title><rect x="0.4723%" y="693" width="0.0337%" height="15" fill="rgb(251,123,47)" fg:x="14" fg:w="1"/><text x="0.7223%" y="703.50"></text></g><g><title>`0x7FFE41243124 (1 samples, 0.03%)</title><rect x="0.4723%" y="677" width="0.0337%" height="15" fill="rgb(221,13,13)" fg:x="14" fg:w="1"/><text x="0.7223%" y="687.50"></text></g><g><title>`0x7FFE41243219 (1 samples, 0.03%)</title><rect x="0.4723%" y="661" width="0.0337%" height="15" fill="rgb(238,131,9)" fg:x="14" fg:w="1"/><text x="0.7223%" y="671.50"></text></g><g><title>`0x7FFE439B01B4 (1 samples, 0.03%)</title><rect x="0.4723%" y="645" width="0.0337%" height="15" fill="rgb(211,50,8)" fg:x="14" fg:w="1"/><text x="0.7223%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::os::current_exe (1 samples, 0.03%)</title><rect x="0.5061%" y="741" width="0.0337%" height="15" fill="rgb(245,182,24)" fg:x="15" fg:w="1"/><text x="0.7561%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;criterion::PlottingBackend&gt;::initialize&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (9 samples, 0.30%)</title><rect x="0.5061%" y="981" width="0.3036%" height="15" fill="rgb(242,14,37)" fg:x="15" fg:w="9"/><text x="0.7561%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (9 samples, 0.30%)</title><rect x="0.5061%" y="965" width="0.3036%" height="15" fill="rgb(246,228,12)" fg:x="15" fg:w="9"/><text x="0.7561%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$ (9 samples, 0.30%)</title><rect x="0.5061%" y="949" width="0.3036%" height="15" fill="rgb(213,55,15)" fg:x="15" fg:w="9"/><text x="0.7561%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_PLOTTING_BACKEND::closure_env$0,tuple$&lt;&gt; &gt; (9 samples, 0.30%)</title><rect x="0.5061%" y="933" width="0.3036%" height="15" fill="rgb(209,9,3)" fg:x="15" fg:w="9"/><text x="0.7561%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_PLOTTING_BACKEND::closure$0 (9 samples, 0.30%)</title><rect x="0.5061%" y="917" width="0.3036%" height="15" fill="rgb(230,59,30)" fg:x="15" fg:w="9"/><text x="0.7561%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; &gt;::initialize&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*) (9 samples, 0.30%)</title><rect x="0.5061%" y="901" width="0.3036%" height="15" fill="rgb(209,121,21)" fg:x="15" fg:w="9"/><text x="0.7561%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (9 samples, 0.30%)</title><rect x="0.5061%" y="885" width="0.3036%" height="15" fill="rgb(220,109,13)" fg:x="15" fg:w="9"/><text x="0.7561%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$ (9 samples, 0.30%)</title><rect x="0.5061%" y="869" width="0.3036%" height="15" fill="rgb(232,18,1)" fg:x="15" fg:w="9"/><text x="0.7561%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion_plot::version (9 samples, 0.30%)</title><rect x="0.5061%" y="853" width="0.3036%" height="15" fill="rgb(215,41,42)" fg:x="15" fg:w="9"/><text x="0.7561%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;, enum2$&lt;criterion_plot::VersionError&gt; (*) (9 samples, 0.30%)</title><rect x="0.5061%" y="837" width="0.3036%" height="15" fill="rgb(224,123,36)" fg:x="15" fg:w="9"/><text x="0.7561%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (9 samples, 0.30%)</title><rect x="0.5061%" y="821" width="0.3036%" height="15" fill="rgb(240,125,3)" fg:x="15" fg:w="9"/><text x="0.7561%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (9 samples, 0.30%)</title><rect x="0.5061%" y="805" width="0.3036%" height="15" fill="rgb(205,98,50)" fg:x="15" fg:w="9"/><text x="0.7561%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (9 samples, 0.30%)</title><rect x="0.5061%" y="789" width="0.3036%" height="15" fill="rgb(205,185,37)" fg:x="15" fg:w="9"/><text x="0.7561%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe (9 samples, 0.30%)</title><rect x="0.5061%" y="773" width="0.3036%" height="15" fill="rgb(238,207,15)" fg:x="15" fg:w="9"/><text x="0.7561%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::search_paths (9 samples, 0.30%)</title><rect x="0.5061%" y="757" width="0.3036%" height="15" fill="rgb(213,199,42)" fg:x="15" fg:w="9"/><text x="0.7561%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe::closure$0 (8 samples, 0.27%)</title><rect x="0.5398%" y="741" width="0.2699%" height="15" fill="rgb(235,201,11)" fg:x="16" fg:w="8"/><text x="0.7898%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.27%)</title><rect x="0.5398%" y="725" width="0.2699%" height="15" fill="rgb(207,46,11)" fg:x="16" fg:w="8"/><text x="0.7898%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.27%)</title><rect x="0.5398%" y="709" width="0.2699%" height="15" fill="rgb(241,35,35)" fg:x="16" fg:w="8"/><text x="0.7898%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.27%)</title><rect x="0.5398%" y="693" width="0.2699%" height="15" fill="rgb(243,32,47)" fg:x="16" fg:w="8"/><text x="0.7898%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.27%)</title><rect x="0.5398%" y="677" width="0.2699%" height="15" fill="rgb(247,202,23)" fg:x="16" fg:w="8"/><text x="0.7898%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.27%)</title><rect x="0.5398%" y="661" width="0.2699%" height="15" fill="rgb(219,102,11)" fg:x="16" fg:w="8"/><text x="0.7898%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.27%)</title><rect x="0.5398%" y="645" width="0.2699%" height="15" fill="rgb(243,110,44)" fg:x="16" fg:w="8"/><text x="0.7898%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop (8 samples, 0.27%)</title><rect x="0.5398%" y="629" width="0.2699%" height="15" fill="rgb(222,74,54)" fg:x="16" fg:w="8"/><text x="0.7898%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::deallocate (8 samples, 0.27%)</title><rect x="0.5398%" y="613" width="0.2699%" height="15" fill="rgb(216,99,12)" fg:x="16" fg:w="8"/><text x="0.7898%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::current_memory (8 samples, 0.27%)</title><rect x="0.5398%" y="597" width="0.2699%" height="15" fill="rgb(226,22,26)" fg:x="16" fg:w="8"/><text x="0.7898%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::program_exists (8 samples, 0.27%)</title><rect x="0.5398%" y="581" width="0.2699%" height="15" fill="rgb(217,163,10)" fg:x="16" fg:w="8"/><text x="0.7898%" y="591.50"></text></g><g><title>`0x7FFE41232291 (8 samples, 0.27%)</title><rect x="0.5398%" y="565" width="0.2699%" height="15" fill="rgb(213,25,53)" fg:x="16" fg:w="8"/><text x="0.7898%" y="575.50"></text></g><g><title>`0x7FFE439B0874 (8 samples, 0.27%)</title><rect x="0.5398%" y="549" width="0.2699%" height="15" fill="rgb(252,105,26)" fg:x="16" fg:w="8"/><text x="0.7898%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (1 samples, 0.03%)</title><rect x="0.8097%" y="981" width="0.0337%" height="15" fill="rgb(220,39,43)" fg:x="24" fg:w="1"/><text x="1.0597%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::html::Html::new(alloc::boxed::Box&lt;dyn$ (1 samples, 0.03%)</title><rect x="0.8097%" y="965" width="0.0337%" height="15" fill="rgb(229,68,48)" fg:x="24" fg:w="1"/><text x="1.0597%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;, ref$ (1 samples, 0.03%)</title><rect x="0.8097%" y="949" width="0.0337%" height="15" fill="rgb(252,8,32)" fg:x="24" fg:w="1"/><text x="1.0597%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::TinyTemplate::add_template(ref$&lt;str$&gt;, ref$ (1 samples, 0.03%)</title><rect x="0.8097%" y="933" width="0.0337%" height="15" fill="rgb(223,20,43)" fg:x="24" fg:w="1"/><text x="1.0597%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::template::Template::compile(ref$ (1 samples, 0.03%)</title><rect x="0.8097%" y="917" width="0.0337%" height="15" fill="rgb(229,81,49)" fg:x="24" fg:w="1"/><text x="1.0597%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::compile (1 samples, 0.03%)</title><rect x="0.8097%" y="901" width="0.0337%" height="15" fill="rgb(236,28,36)" fg:x="24" fg:w="1"/><text x="1.0597%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::parse_call(ref$ (1 samples, 0.03%)</title><rect x="0.8097%" y="885" width="0.0337%" height="15" fill="rgb(249,185,26)" fg:x="24" fg:w="1"/><text x="1.0597%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::impl$0::find&lt;ref$&lt;str$&gt; &gt;(ref$&lt;str$&gt;, ref$ (1 samples, 0.03%)</title><rect x="0.8097%" y="869" width="0.0337%" height="15" fill="rgb(249,174,33)" fg:x="24" fg:w="1"/><text x="1.0597%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::pattern::impl$33::next_match (1 samples, 0.03%)</title><rect x="0.8097%" y="853" width="0.0337%" height="15" fill="rgb(233,201,37)" fg:x="24" fg:w="1"/><text x="1.0597%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::str::pattern::TwoWaySearcher::next(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1 samples, 0.03%)</title><rect x="0.8097%" y="837" width="0.0337%" height="15" fill="rgb(221,78,26)" fg:x="24" fg:w="1"/><text x="1.0597%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::parse_whitespace (4 samples, 0.13%)</title><rect x="0.9109%" y="613" width="0.1350%" height="15" fill="rgb(250,127,30)" fg:x="27" fg:w="4"/><text x="1.1609%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::peek (3 samples, 0.10%)</title><rect x="0.9447%" y="597" width="0.1012%" height="15" fill="rgb(230,49,44)" fg:x="28" fg:w="3"/><text x="1.1947%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::peek (3 samples, 0.10%)</title><rect x="0.9447%" y="581" width="0.1012%" height="15" fill="rgb(229,67,23)" fg:x="28" fg:w="3"/><text x="1.1947%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (10 samples, 0.34%)</title><rect x="0.8435%" y="789" width="0.3374%" height="15" fill="rgb(249,83,47)" fg:x="25" fg:w="10"/><text x="1.0935%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (10 samples, 0.34%)</title><rect x="0.8435%" y="773" width="0.3374%" height="15" fill="rgb(215,43,3)" fg:x="25" fg:w="10"/><text x="1.0935%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize(serde_json::de::Deserializer (10 samples, 0.34%)</title><rect x="0.8435%" y="757" width="0.3374%" height="15" fill="rgb(238,154,13)" fg:x="25" fg:w="10"/><text x="1.0935%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (10 samples, 0.34%)</title><rect x="0.8435%" y="741" width="0.3374%" height="15" fill="rgb(219,56,2)" fg:x="25" fg:w="10"/><text x="1.0935%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize::impl$2::visit_map(criterion::cargo_target_directory::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (10 samples, 0.34%)</title><rect x="0.8435%" y="725" width="0.3374%" height="15" fill="rgb(233,0,4)" fg:x="25" fg:w="10"/><text x="1.0935%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_value(serde_json::de::MapAccess (10 samples, 0.34%)</title><rect x="0.8435%" y="709" width="0.3374%" height="15" fill="rgb(235,30,7)" fg:x="25" fg:w="10"/><text x="1.0935%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt;*, core::marker::PhantomData (10 samples, 0.34%)</title><rect x="0.8435%" y="693" width="0.3374%" height="15" fill="rgb(250,79,13)" fg:x="25" fg:w="10"/><text x="1.0935%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;serde::de::ignored_any::IgnoredAny&gt;, serde_json::de::Deserializer (10 samples, 0.34%)</title><rect x="0.8435%" y="677" width="0.3374%" height="15" fill="rgb(211,146,34)" fg:x="25" fg:w="10"/><text x="1.0935%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::ignored_any::impl$1::deserialize(serde_json::de::Deserializer (10 samples, 0.34%)</title><rect x="0.8435%" y="661" width="0.3374%" height="15" fill="rgb(228,22,38)" fg:x="25" fg:w="10"/><text x="1.0935%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_ignored_any(serde_json::de::Deserializer (10 samples, 0.34%)</title><rect x="0.8435%" y="645" width="0.3374%" height="15" fill="rgb(235,168,5)" fg:x="25" fg:w="10"/><text x="1.0935%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::ignore_value (10 samples, 0.34%)</title><rect x="0.8435%" y="629" width="0.3374%" height="15" fill="rgb(221,155,16)" fg:x="25" fg:w="10"/><text x="1.0935%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::ignore_str (4 samples, 0.13%)</title><rect x="1.0459%" y="613" width="0.1350%" height="15" fill="rgb(215,215,53)" fg:x="31" fg:w="4"/><text x="1.2959%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="1.1808%" y="725" width="0.0337%" height="15" fill="rgb(223,4,10)" fg:x="35" fg:w="1"/><text x="1.4308%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Stdio::to_handle (1 samples, 0.03%)</title><rect x="1.1808%" y="709" width="0.0337%" height="15" fill="rgb(234,103,6)" fg:x="35" fg:w="1"/><text x="1.4308%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.03%)</title><rect x="1.1808%" y="693" width="0.0337%" height="15" fill="rgb(227,97,0)" fg:x="35" fg:w="1"/><text x="1.4308%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::random_number (1 samples, 0.03%)</title><rect x="1.1808%" y="677" width="0.0337%" height="15" fill="rgb(234,150,53)" fg:x="35" fg:w="1"/><text x="1.4308%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::rand::hashmap_random_keys (1 samples, 0.03%)</title><rect x="1.1808%" y="661" width="0.0337%" height="15" fill="rgb(228,201,54)" fg:x="35" fg:w="1"/><text x="1.4308%" y="671.50"></text></g><g><title>`0x7FFE415E084D (1 samples, 0.03%)</title><rect x="1.1808%" y="645" width="0.0337%" height="15" fill="rgb(222,22,37)" fg:x="35" fg:w="1"/><text x="1.4308%" y="655.50"></text></g><g><title>`0x7FFE415E0B38 (1 samples, 0.03%)</title><rect x="1.1808%" y="629" width="0.0337%" height="15" fill="rgb(237,53,32)" fg:x="35" fg:w="1"/><text x="1.4308%" y="639.50"></text></g><g><title>`0x7FFE43938D76 (1 samples, 0.03%)</title><rect x="1.2146%" y="549" width="0.0337%" height="15" fill="rgb(233,25,53)" fg:x="36" fg:w="1"/><text x="1.4646%" y="559.50"></text></g><g><title>`0x7FFE4393E269 (1 samples, 0.03%)</title><rect x="1.2146%" y="533" width="0.0337%" height="15" fill="rgb(210,40,34)" fg:x="36" fg:w="1"/><text x="1.4646%" y="543.50"></text></g><g><title>`0x7FFE4393D2E9 (1 samples, 0.03%)</title><rect x="1.2146%" y="517" width="0.0337%" height="15" fill="rgb(241,220,44)" fg:x="36" fg:w="1"/><text x="1.4646%" y="527.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.03%)</title><rect x="1.2146%" y="501" width="0.0337%" height="15" fill="rgb(235,28,35)" fg:x="36" fg:w="1"/><text x="1.4646%" y="511.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.03%)</title><rect x="1.2146%" y="485" width="0.0337%" height="15" fill="rgb(210,56,17)" fg:x="36" fg:w="1"/><text x="1.4646%" y="495.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.03%)</title><rect x="1.2146%" y="469" width="0.0337%" height="15" fill="rgb(224,130,29)" fg:x="36" fg:w="1"/><text x="1.4646%" y="479.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.03%)</title><rect x="1.2146%" y="453" width="0.0337%" height="15" fill="rgb(235,212,8)" fg:x="36" fg:w="1"/><text x="1.4646%" y="463.50"></text></g><g><title>`0x7FFE43938DA0 (1 samples, 0.03%)</title><rect x="1.2483%" y="549" width="0.0337%" height="15" fill="rgb(223,33,50)" fg:x="37" fg:w="1"/><text x="1.4983%" y="559.50"></text></g><g><title>`0x7FFE4393A560 (1 samples, 0.03%)</title><rect x="1.2483%" y="533" width="0.0337%" height="15" fill="rgb(219,149,13)" fg:x="37" fg:w="1"/><text x="1.4983%" y="543.50"></text></g><g><title>`0x7FFE4392127B (1 samples, 0.03%)</title><rect x="1.2483%" y="517" width="0.0337%" height="15" fill="rgb(250,156,29)" fg:x="37" fg:w="1"/><text x="1.4983%" y="527.50"></text></g><g><title>`0x7FFE439340EB (1 samples, 0.03%)</title><rect x="1.2483%" y="501" width="0.0337%" height="15" fill="rgb(216,193,19)" fg:x="37" fg:w="1"/><text x="1.4983%" y="511.50"></text></g><g><title>`0x7FFE41246A7A (3 samples, 0.10%)</title><rect x="1.2146%" y="661" width="0.1012%" height="15" fill="rgb(216,135,14)" fg:x="36" fg:w="3"/><text x="1.4646%" y="671.50"></text></g><g><title>`0x7FFE412B4869 (3 samples, 0.10%)</title><rect x="1.2146%" y="645" width="0.1012%" height="15" fill="rgb(241,47,5)" fg:x="36" fg:w="3"/><text x="1.4646%" y="655.50"></text></g><g><title>`0x7FFE4127EE32 (3 samples, 0.10%)</title><rect x="1.2146%" y="629" width="0.1012%" height="15" fill="rgb(233,42,35)" fg:x="36" fg:w="3"/><text x="1.4646%" y="639.50"></text></g><g><title>`0x7FFE4393BEB7 (3 samples, 0.10%)</title><rect x="1.2146%" y="613" width="0.1012%" height="15" fill="rgb(231,13,6)" fg:x="36" fg:w="3"/><text x="1.4646%" y="623.50"></text></g><g><title>`0x7FFE439330F5 (3 samples, 0.10%)</title><rect x="1.2146%" y="597" width="0.1012%" height="15" fill="rgb(207,181,40)" fg:x="36" fg:w="3"/><text x="1.4646%" y="607.50"></text></g><g><title>`0x7FFE4392607E (3 samples, 0.10%)</title><rect x="1.2146%" y="581" width="0.1012%" height="15" fill="rgb(254,173,49)" fg:x="36" fg:w="3"/><text x="1.4646%" y="591.50"></text></g><g><title>`0x7FFE43928EC0 (3 samples, 0.10%)</title><rect x="1.2146%" y="565" width="0.1012%" height="15" fill="rgb(221,1,38)" fg:x="36" fg:w="3"/><text x="1.4646%" y="575.50"></text></g><g><title>`0x7FFE43938E00 (1 samples, 0.03%)</title><rect x="1.2821%" y="549" width="0.0337%" height="15" fill="rgb(206,124,46)" fg:x="38" fg:w="1"/><text x="1.5321%" y="559.50"></text></g><g><title>`0x7FFE4393DAED (1 samples, 0.03%)</title><rect x="1.2821%" y="533" width="0.0337%" height="15" fill="rgb(249,21,11)" fg:x="38" fg:w="1"/><text x="1.5321%" y="543.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.03%)</title><rect x="1.2821%" y="517" width="0.0337%" height="15" fill="rgb(222,201,40)" fg:x="38" fg:w="1"/><text x="1.5321%" y="527.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.03%)</title><rect x="1.2821%" y="501" width="0.0337%" height="15" fill="rgb(235,61,29)" fg:x="38" fg:w="1"/><text x="1.5321%" y="511.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.03%)</title><rect x="1.2821%" y="485" width="0.0337%" height="15" fill="rgb(219,207,3)" fg:x="38" fg:w="1"/><text x="1.5321%" y="495.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.03%)</title><rect x="1.2821%" y="469" width="0.0337%" height="15" fill="rgb(222,56,46)" fg:x="38" fg:w="1"/><text x="1.5321%" y="479.50"></text></g><g><title>`0x7FFE411DA067 (1 samples, 0.03%)</title><rect x="1.2821%" y="453" width="0.0337%" height="15" fill="rgb(239,76,54)" fg:x="38" fg:w="1"/><text x="1.5321%" y="463.50"></text></g><g><title>`0x7FFE411D35BC (1 samples, 0.03%)</title><rect x="1.2821%" y="437" width="0.0337%" height="15" fill="rgb(231,124,27)" fg:x="38" fg:w="1"/><text x="1.5321%" y="447.50"></text></g><g><title>`0x7FFE411D3839 (1 samples, 0.03%)</title><rect x="1.2821%" y="421" width="0.0337%" height="15" fill="rgb(249,195,6)" fg:x="38" fg:w="1"/><text x="1.5321%" y="431.50"></text></g><g><title>`0x7FFE411D3953 (1 samples, 0.03%)</title><rect x="1.2821%" y="405" width="0.0337%" height="15" fill="rgb(237,174,47)" fg:x="38" fg:w="1"/><text x="1.5321%" y="415.50"></text></g><g><title>`0x7FFE411D6413 (1 samples, 0.03%)</title><rect x="1.2821%" y="389" width="0.0337%" height="15" fill="rgb(206,201,31)" fg:x="38" fg:w="1"/><text x="1.5321%" y="399.50"></text></g><g><title>`0x7FFE439B01B4 (1 samples, 0.03%)</title><rect x="1.2821%" y="373" width="0.0337%" height="15" fill="rgb(231,57,52)" fg:x="38" fg:w="1"/><text x="1.5321%" y="383.50"></text></g><g><title>`0x7FFE4124746B (1 samples, 0.03%)</title><rect x="1.3158%" y="661" width="0.0337%" height="15" fill="rgb(248,177,22)" fg:x="39" fg:w="1"/><text x="1.5658%" y="671.50"></text></g><g><title>`0x7FFE41279E93 (1 samples, 0.03%)</title><rect x="1.3158%" y="645" width="0.0337%" height="15" fill="rgb(215,211,37)" fg:x="39" fg:w="1"/><text x="1.5658%" y="655.50"></text></g><g><title>`0x7FFE4398DD08 (1 samples, 0.03%)</title><rect x="1.3158%" y="629" width="0.0337%" height="15" fill="rgb(241,128,51)" fg:x="39" fg:w="1"/><text x="1.5658%" y="639.50"></text></g><g><title>`0x7FFE43986DE6 (1 samples, 0.03%)</title><rect x="1.3158%" y="613" width="0.0337%" height="15" fill="rgb(227,165,31)" fg:x="39" fg:w="1"/><text x="1.5658%" y="623.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.03%)</title><rect x="1.3158%" y="597" width="0.0337%" height="15" fill="rgb(228,167,24)" fg:x="39" fg:w="1"/><text x="1.5658%" y="607.50"></text></g><g><title>`0x7FFE41247624 (3 samples, 0.10%)</title><rect x="1.3495%" y="661" width="0.1012%" height="15" fill="rgb(228,143,12)" fg:x="40" fg:w="3"/><text x="1.5995%" y="671.50"></text></g><g><title>`0x7FFE439B1AA4 (3 samples, 0.10%)</title><rect x="1.3495%" y="645" width="0.1012%" height="15" fill="rgb(249,149,8)" fg:x="40" fg:w="3"/><text x="1.5995%" y="655.50"></text></g><g><title>`0x7FFE412483B0 (1 samples, 0.03%)</title><rect x="1.4507%" y="661" width="0.0337%" height="15" fill="rgb(243,35,44)" fg:x="43" fg:w="1"/><text x="1.7007%" y="671.50"></text></g><g><title>`0x7FFE42BA5A78 (1 samples, 0.03%)</title><rect x="1.4507%" y="645" width="0.0337%" height="15" fill="rgb(246,89,9)" fg:x="43" fg:w="1"/><text x="1.7007%" y="655.50"></text></g><g><title>`0x7FFE42B989EA (1 samples, 0.03%)</title><rect x="1.4845%" y="629" width="0.0337%" height="15" fill="rgb(233,213,13)" fg:x="44" fg:w="1"/><text x="1.7345%" y="639.50"></text></g><g><title>`0x7FFE42B9959C (1 samples, 0.03%)</title><rect x="1.4845%" y="613" width="0.0337%" height="15" fill="rgb(233,141,41)" fg:x="44" fg:w="1"/><text x="1.7345%" y="623.50"></text></g><g><title>`0x7FFE42B99A90 (1 samples, 0.03%)</title><rect x="1.4845%" y="597" width="0.0337%" height="15" fill="rgb(239,167,4)" fg:x="44" fg:w="1"/><text x="1.7345%" y="607.50"></text></g><g><title>`0x7FFE4391E907 (1 samples, 0.03%)</title><rect x="1.4845%" y="581" width="0.0337%" height="15" fill="rgb(209,217,16)" fg:x="44" fg:w="1"/><text x="1.7345%" y="591.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.03%)</title><rect x="1.4845%" y="565" width="0.0337%" height="15" fill="rgb(219,88,35)" fg:x="44" fg:w="1"/><text x="1.7345%" y="575.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.03%)</title><rect x="1.4845%" y="549" width="0.0337%" height="15" fill="rgb(220,193,23)" fg:x="44" fg:w="1"/><text x="1.7345%" y="559.50"></text></g><g><title>`0x7FFE43949A68 (1 samples, 0.03%)</title><rect x="1.4845%" y="533" width="0.0337%" height="15" fill="rgb(230,90,52)" fg:x="44" fg:w="1"/><text x="1.7345%" y="543.50"></text></g><g><title>`0x7FFE43954D2E (1 samples, 0.03%)</title><rect x="1.4845%" y="517" width="0.0337%" height="15" fill="rgb(252,106,19)" fg:x="44" fg:w="1"/><text x="1.7345%" y="527.50"></text></g><g><title>`0x7FFE412486DA (3 samples, 0.10%)</title><rect x="1.4845%" y="661" width="0.1012%" height="15" fill="rgb(206,74,20)" fg:x="44" fg:w="3"/><text x="1.7345%" y="671.50"></text></g><g><title>`0x7FFE42B959A4 (3 samples, 0.10%)</title><rect x="1.4845%" y="645" width="0.1012%" height="15" fill="rgb(230,138,44)" fg:x="44" fg:w="3"/><text x="1.7345%" y="655.50"></text></g><g><title>`0x7FFE42B98ABB (2 samples, 0.07%)</title><rect x="1.5182%" y="629" width="0.0675%" height="15" fill="rgb(235,182,43)" fg:x="45" fg:w="2"/><text x="1.7682%" y="639.50"></text></g><g><title>`0x7FFE439B0A54 (2 samples, 0.07%)</title><rect x="1.5182%" y="613" width="0.0675%" height="15" fill="rgb(242,16,51)" fg:x="45" fg:w="2"/><text x="1.7682%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (13 samples, 0.44%)</title><rect x="1.1808%" y="741" width="0.4386%" height="15" fill="rgb(248,9,4)" fg:x="35" fg:w="13"/><text x="1.4308%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (12 samples, 0.40%)</title><rect x="1.2146%" y="725" width="0.4049%" height="15" fill="rgb(210,31,22)" fg:x="36" fg:w="12"/><text x="1.4646%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (12 samples, 0.40%)</title><rect x="1.2146%" y="709" width="0.4049%" height="15" fill="rgb(239,54,39)" fg:x="36" fg:w="12"/><text x="1.4646%" y="719.50"></text></g><g><title>`0x7FFE42BA61F4 (12 samples, 0.40%)</title><rect x="1.2146%" y="693" width="0.4049%" height="15" fill="rgb(230,99,41)" fg:x="36" fg:w="12"/><text x="1.4646%" y="703.50"></text></g><g><title>`0x7FFE4127EAB6 (12 samples, 0.40%)</title><rect x="1.2146%" y="677" width="0.4049%" height="15" fill="rgb(253,106,12)" fg:x="36" fg:w="12"/><text x="1.4646%" y="687.50"></text></g><g><title>`0x7FFE41248816 (1 samples, 0.03%)</title><rect x="1.5857%" y="661" width="0.0337%" height="15" fill="rgb(213,46,41)" fg:x="47" fg:w="1"/><text x="1.8357%" y="671.50"></text></g><g><title>`0x7FFE42B99207 (1 samples, 0.03%)</title><rect x="1.5857%" y="645" width="0.0337%" height="15" fill="rgb(215,133,35)" fg:x="47" fg:w="1"/><text x="1.8357%" y="655.50"></text></g><g><title>`0x7FFE42B9A030 (1 samples, 0.03%)</title><rect x="1.5857%" y="629" width="0.0337%" height="15" fill="rgb(213,28,5)" fg:x="47" fg:w="1"/><text x="1.8357%" y="639.50"></text></g><g><title>`0x7FFE42B97BF5 (1 samples, 0.03%)</title><rect x="1.5857%" y="613" width="0.0337%" height="15" fill="rgb(215,77,49)" fg:x="47" fg:w="1"/><text x="1.8357%" y="623.50"></text></g><g><title>`0x7FFE43921C04 (1 samples, 0.03%)</title><rect x="1.5857%" y="597" width="0.0337%" height="15" fill="rgb(248,100,22)" fg:x="47" fg:w="1"/><text x="1.8357%" y="607.50"></text></g><g><title>`0x7FFE439BB3B1 (1 samples, 0.03%)</title><rect x="1.5857%" y="581" width="0.0337%" height="15" fill="rgb(208,67,9)" fg:x="47" fg:w="1"/><text x="1.8357%" y="591.50"></text></g><g><title>`0x7FFE4391A820 (1 samples, 0.03%)</title><rect x="1.5857%" y="565" width="0.0337%" height="15" fill="rgb(219,133,21)" fg:x="47" fg:w="1"/><text x="1.8357%" y="575.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.03%)</title><rect x="1.5857%" y="549" width="0.0337%" height="15" fill="rgb(246,46,29)" fg:x="47" fg:w="1"/><text x="1.8357%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::spare_capacity_mut (1 samples, 0.03%)</title><rect x="1.6194%" y="677" width="0.0337%" height="15" fill="rgb(246,185,52)" fg:x="48" fg:w="1"/><text x="1.8694%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::capacity (1 samples, 0.03%)</title><rect x="1.6194%" y="661" width="0.0337%" height="15" fill="rgb(252,136,11)" fg:x="48" fg:w="1"/><text x="1.8694%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::capacity (1 samples, 0.03%)</title><rect x="1.6194%" y="645" width="0.0337%" height="15" fill="rgb(219,138,53)" fg:x="48" fg:w="1"/><text x="1.8694%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="1.6194%" y="629" width="0.0337%" height="15" fill="rgb(211,51,23)" fg:x="48" fg:w="1"/><text x="1.8694%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.03%)</title><rect x="1.6194%" y="613" width="0.0337%" height="15" fill="rgb(247,221,28)" fg:x="48" fg:w="1"/><text x="1.8694%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="1.6194%" y="597" width="0.0337%" height="15" fill="rgb(251,222,45)" fg:x="48" fg:w="1"/><text x="1.8694%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.03%)</title><rect x="1.6194%" y="581" width="0.0337%" height="15" fill="rgb(217,162,53)" fg:x="48" fg:w="1"/><text x="1.8694%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::grow (1 samples, 0.03%)</title><rect x="1.6194%" y="565" width="0.0337%" height="15" fill="rgb(229,93,14)" fg:x="48" fg:w="1"/><text x="1.8694%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::grow_impl (1 samples, 0.03%)</title><rect x="1.6194%" y="549" width="0.0337%" height="15" fill="rgb(209,67,49)" fg:x="48" fg:w="1"/><text x="1.8694%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.03%)</title><rect x="1.6194%" y="533" width="0.0337%" height="15" fill="rgb(213,87,29)" fg:x="48" fg:w="1"/><text x="1.8694%" y="543.50"></text></g><g><title>`0x7FFE4395216A (1 samples, 0.03%)</title><rect x="1.6194%" y="517" width="0.0337%" height="15" fill="rgb(205,151,52)" fg:x="48" fg:w="1"/><text x="1.8694%" y="527.50"></text></g><g><title>`0x7FFE439522A7 (1 samples, 0.03%)</title><rect x="1.6194%" y="501" width="0.0337%" height="15" fill="rgb(253,215,39)" fg:x="48" fg:w="1"/><text x="1.8694%" y="511.50"></text></g><g><title>`0x7FFE43952ADE (1 samples, 0.03%)</title><rect x="1.6194%" y="485" width="0.0337%" height="15" fill="rgb(221,220,41)" fg:x="48" fg:w="1"/><text x="1.8694%" y="495.50"></text></g><g><title>`0x7FFE439B6E17 (1 samples, 0.03%)</title><rect x="1.6194%" y="469" width="0.0337%" height="15" fill="rgb(218,133,21)" fg:x="48" fg:w="1"/><text x="1.8694%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::impl$4::default (38 samples, 1.28%)</title><rect x="0.5061%" y="997" width="1.2821%" height="15" fill="rgb(221,193,43)" fg:x="15" fg:w="38"/><text x="0.7561%" y="1007.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;std::path::PathBuf,std::path::PathBuf (*) (28 samples, 0.94%)</title><rect x="0.8435%" y="981" width="0.9447%" height="15" fill="rgb(240,128,52)" fg:x="25" fg:w="28"/><text x="1.0935%" y="991.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::ffi::os_str::impl$10::clone (28 samples, 0.94%)</title><rect x="0.8435%" y="965" width="0.9447%" height="15" fill="rgb(253,114,12)" fg:x="25" fg:w="28"/><text x="1.0935%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::os_str::wtf8::impl$10::clone (28 samples, 0.94%)</title><rect x="0.8435%" y="949" width="0.9447%" height="15" fill="rgb(215,223,47)" fg:x="25" fg:w="28"/><text x="1.0935%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::impl$35::clone (28 samples, 0.94%)</title><rect x="0.8435%" y="933" width="0.9447%" height="15" fill="rgb(248,225,23)" fg:x="25" fg:w="28"/><text x="1.0935%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;std::path::PathBuf&gt;::initialize&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*) (28 samples, 0.94%)</title><rect x="0.8435%" y="917" width="0.9447%" height="15" fill="rgb(250,108,0)" fg:x="25" fg:w="28"/><text x="1.0935%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (28 samples, 0.94%)</title><rect x="0.8435%" y="901" width="0.9447%" height="15" fill="rgb(228,208,7)" fg:x="25" fg:w="28"/><text x="1.0935%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$ (28 samples, 0.94%)</title><rect x="0.8435%" y="885" width="0.9447%" height="15" fill="rgb(244,45,10)" fg:x="25" fg:w="28"/><text x="1.0935%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_OUTPUT_DIRECTORY::closure_env$0,tuple$&lt;&gt; &gt; (28 samples, 0.94%)</title><rect x="0.8435%" y="869" width="0.9447%" height="15" fill="rgb(207,125,25)" fg:x="25" fg:w="28"/><text x="1.0935%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_OUTPUT_DIRECTORY::closure$0 (28 samples, 0.94%)</title><rect x="0.8435%" y="853" width="0.9447%" height="15" fill="rgb(210,195,18)" fg:x="25" fg:w="28"/><text x="1.0935%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory (28 samples, 0.94%)</title><rect x="0.8435%" y="837" width="0.9447%" height="15" fill="rgb(249,80,12)" fg:x="25" fg:w="28"/><text x="1.0935%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;::or_else(enum2$&lt;core::option::Option (28 samples, 0.94%)</title><rect x="0.8435%" y="821" width="0.9447%" height="15" fill="rgb(221,65,9)" fg:x="25" fg:w="28"/><text x="1.0935%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::closure$0 (28 samples, 0.94%)</title><rect x="0.8435%" y="805" width="0.9447%" height="15" fill="rgb(235,49,36)" fg:x="25" fg:w="28"/><text x="1.0935%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result (18 samples, 0.61%)</title><rect x="1.1808%" y="789" width="0.6073%" height="15" fill="rgb(225,32,20)" fg:x="35" fg:w="18"/><text x="1.4308%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (18 samples, 0.61%)</title><rect x="1.1808%" y="773" width="0.6073%" height="15" fill="rgb(215,141,46)" fg:x="35" fg:w="18"/><text x="1.4308%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (18 samples, 0.61%)</title><rect x="1.1808%" y="757" width="0.6073%" height="15" fill="rgb(250,160,47)" fg:x="35" fg:w="18"/><text x="1.4308%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::process::wait_with_output (5 samples, 0.17%)</title><rect x="1.6194%" y="741" width="0.1687%" height="15" fill="rgb(216,222,40)" fg:x="48" fg:w="5"/><text x="1.8694%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::unwrap (5 samples, 0.17%)</title><rect x="1.6194%" y="725" width="0.1687%" height="15" fill="rgb(234,217,39)" fg:x="48" fg:w="5"/><text x="1.8694%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::read2 (5 samples, 0.17%)</title><rect x="1.6194%" y="709" width="0.1687%" height="15" fill="rgb(207,178,40)" fg:x="48" fg:w="5"/><text x="1.8694%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (5 samples, 0.17%)</title><rect x="1.6194%" y="693" width="0.1687%" height="15" fill="rgb(221,136,13)" fg:x="48" fg:w="5"/><text x="1.8694%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read_overlapped (4 samples, 0.13%)</title><rect x="1.6532%" y="677" width="0.1350%" height="15" fill="rgb(249,199,10)" fg:x="49" fg:w="4"/><text x="1.9032%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (4 samples, 0.13%)</title><rect x="1.6532%" y="661" width="0.1350%" height="15" fill="rgb(249,222,13)" fg:x="49" fg:w="4"/><text x="1.9032%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (4 samples, 0.13%)</title><rect x="1.6532%" y="645" width="0.1350%" height="15" fill="rgb(244,185,38)" fg:x="49" fg:w="4"/><text x="1.9032%" y="655.50"></text></g><g><title>`0x7FFE4122BDC8 (4 samples, 0.13%)</title><rect x="1.6532%" y="629" width="0.1350%" height="15" fill="rgb(236,202,9)" fg:x="49" fg:w="4"/><text x="1.9032%" y="639.50"></text></g><g><title>`0x7FFE439B0194 (4 samples, 0.13%)</title><rect x="1.6532%" y="613" width="0.1350%" height="15" fill="rgb(250,229,37)" fg:x="49" fg:w="4"/><text x="1.9032%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::arg (1 samples, 0.03%)</title><rect x="1.7881%" y="677" width="0.0337%" height="15" fill="rgb(206,174,23)" fg:x="53" fg:w="1"/><text x="2.0381%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::arg_internal (1 samples, 0.03%)</title><rect x="1.7881%" y="661" width="0.0337%" height="15" fill="rgb(211,33,43)" fg:x="53" fg:w="1"/><text x="2.0381%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::mkeymap::MKeyMap::push (1 samples, 0.03%)</title><rect x="1.7881%" y="645" width="0.0337%" height="15" fill="rgb(245,58,50)" fg:x="53" fg:w="1"/><text x="2.0381%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;clap_builder::builder::arg::Arg,alloc::alloc::Global&gt;::push (1 samples, 0.03%)</title><rect x="1.7881%" y="629" width="0.0337%" height="15" fill="rgb(244,68,36)" fg:x="53" fg:w="1"/><text x="2.0381%" y="639.50"></text></g><g><title>`0x7FFE26C113F6 (1 samples, 0.03%)</title><rect x="1.7881%" y="613" width="0.0337%" height="15" fill="rgb(232,229,15)" fg:x="53" fg:w="1"/><text x="2.0381%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches (1 samples, 0.03%)</title><rect x="1.8219%" y="677" width="0.0337%" height="15" fill="rgb(254,30,23)" fg:x="54" fg:w="1"/><text x="2.0719%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches_from (1 samples, 0.03%)</title><rect x="1.8219%" y="661" width="0.0337%" height="15" fill="rgb(235,160,14)" fg:x="54" fg:w="1"/><text x="2.0719%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.03%)</title><rect x="1.8219%" y="645" width="0.0337%" height="15" fill="rgb(212,155,44)" fg:x="54" fg:w="1"/><text x="2.0719%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="1.8219%" y="629" width="0.0337%" height="15" fill="rgb(226,2,50)" fg:x="54" fg:w="1"/><text x="2.0719%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.8219%" y="613" width="0.0337%" height="15" fill="rgb(234,177,6)" fg:x="54" fg:w="1"/><text x="2.0719%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::_do_parse (1 samples, 0.03%)</title><rect x="1.8219%" y="597" width="0.0337%" height="15" fill="rgb(217,24,9)" fg:x="54" fg:w="1"/><text x="2.0719%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::arg_matcher::ArgMatcher::new (1 samples, 0.03%)</title><rect x="1.8219%" y="581" width="0.0337%" height="15" fill="rgb(220,13,46)" fg:x="54" fg:w="1"/><text x="2.0719%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::_build_self (1 samples, 0.03%)</title><rect x="1.8219%" y="565" width="0.0337%" height="15" fill="rgb(239,221,27)" fg:x="54" fg:w="1"/><text x="2.0719%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::_check_help_and_version (1 samples, 0.03%)</title><rect x="1.8219%" y="549" width="0.0337%" height="15" fill="rgb(222,198,25)" fg:x="54" fg:w="1"/><text x="2.0719%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::long_help_exists_ (1 samples, 0.03%)</title><rect x="1.8219%" y="533" width="0.0337%" height="15" fill="rgb(211,99,13)" fg:x="54" fg:w="1"/><text x="2.0719%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::any(core::slice::iter::Iter (1 samples, 0.03%)</title><rect x="1.8219%" y="517" width="0.0337%" height="15" fill="rgb(232,111,31)" fg:x="54" fg:w="1"/><text x="2.0719%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::impl$7::long_help_exists_::closure$0 (1 samples, 0.03%)</title><rect x="1.8219%" y="501" width="0.0337%" height="15" fill="rgb(245,82,37)" fg:x="54" fg:w="1"/><text x="2.0719%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="1.8219%" y="485" width="0.0337%" height="15" fill="rgb(227,149,46)" fg:x="54" fg:w="1"/><text x="2.0719%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="1.8219%" y="469" width="0.0337%" height="15" fill="rgb(218,36,50)" fg:x="54" fg:w="1"/><text x="2.0719%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="1.8219%" y="453" width="0.0337%" height="15" fill="rgb(226,80,48)" fg:x="54" fg:w="1"/><text x="2.0719%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="1.8219%" y="437" width="0.0337%" height="15" fill="rgb(238,224,15)" fg:x="54" fg:w="1"/><text x="2.0719%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.03%)</title><rect x="1.8219%" y="421" width="0.0337%" height="15" fill="rgb(241,136,10)" fg:x="54" fg:w="1"/><text x="2.0719%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::dealloc (1 samples, 0.03%)</title><rect x="1.8219%" y="405" width="0.0337%" height="15" fill="rgb(208,32,45)" fg:x="54" fg:w="1"/><text x="2.0719%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.03%)</title><rect x="1.8219%" y="389" width="0.0337%" height="15" fill="rgb(207,135,9)" fg:x="54" fg:w="1"/><text x="2.0719%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 0.03%)</title><rect x="1.8219%" y="373" width="0.0337%" height="15" fill="rgb(206,86,44)" fg:x="54" fg:w="1"/><text x="2.0719%" y="383.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.03%)</title><rect x="1.8219%" y="357" width="0.0337%" height="15" fill="rgb(245,177,15)" fg:x="54" fg:w="1"/><text x="2.0719%" y="367.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.03%)</title><rect x="1.8219%" y="341" width="0.0337%" height="15" fill="rgb(206,64,50)" fg:x="54" fg:w="1"/><text x="2.0719%" y="351.50"></text></g><g><title>`0x7FFE43949BE8 (1 samples, 0.03%)</title><rect x="1.8219%" y="325" width="0.0337%" height="15" fill="rgb(234,36,40)" fg:x="54" fg:w="1"/><text x="2.0719%" y="335.50"></text></g><g><title>`0x7FFE43954FDB (1 samples, 0.03%)</title><rect x="1.8219%" y="309" width="0.0337%" height="15" fill="rgb(213,64,8)" fg:x="54" fg:w="1"/><text x="2.0719%" y="319.50"></text></g><g><title>`0x7FFE439568BA (1 samples, 0.03%)</title><rect x="1.8219%" y="293" width="0.0337%" height="15" fill="rgb(210,75,36)" fg:x="54" fg:w="1"/><text x="2.0719%" y="303.50"></text></g><g><title>`0x7FFE43956968 (1 samples, 0.03%)</title><rect x="1.8219%" y="277" width="0.0337%" height="15" fill="rgb(229,88,21)" fg:x="54" fg:w="1"/><text x="2.0719%" y="287.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.03%)</title><rect x="1.8219%" y="261" width="0.0337%" height="15" fill="rgb(252,204,47)" fg:x="54" fg:w="1"/><text x="2.0719%" y="271.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.03%)</title><rect x="1.8219%" y="245" width="0.0337%" height="15" fill="rgb(208,77,27)" fg:x="54" fg:w="1"/><text x="2.0719%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::benchmark_group(ref$ (3 samples, 0.10%)</title><rect x="1.7881%" y="965" width="0.1012%" height="15" fill="rgb(221,76,26)" fg:x="53" fg:w="3"/><text x="2.0381%" y="975.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::convert::impl$3::into(ref$ (3 samples, 0.10%)</title><rect x="1.7881%" y="949" width="0.1012%" height="15" fill="rgb(225,139,18)" fg:x="53" fg:w="3"/><text x="2.0381%" y="959.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.10%)</title><rect x="1.7881%" y="933" width="0.1012%" height="15" fill="rgb(230,137,11)" fg:x="53" fg:w="3"/><text x="2.0381%" y="943.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.10%)</title><rect x="1.7881%" y="917" width="0.1012%" height="15" fill="rgb(212,28,1)" fg:x="53" fg:w="3"/><text x="2.0381%" y="927.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="1.7881%" y="901" width="0.1012%" height="15" fill="rgb(248,164,17)" fg:x="53" fg:w="3"/><text x="2.0381%" y="911.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="1.7881%" y="885" width="0.1012%" height="15" fill="rgb(222,171,42)" fg:x="53" fg:w="3"/><text x="2.0381%" y="895.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="1.7881%" y="869" width="0.1012%" height="15" fill="rgb(243,84,45)" fg:x="53" fg:w="3"/><text x="2.0381%" y="879.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="1.7881%" y="853" width="0.1012%" height="15" fill="rgb(252,49,23)" fg:x="53" fg:w="3"/><text x="2.0381%" y="863.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.10%)</title><rect x="1.7881%" y="837" width="0.1012%" height="15" fill="rgb(215,19,7)" fg:x="53" fg:w="3"/><text x="2.0381%" y="847.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="1.7881%" y="821" width="0.1012%" height="15" fill="rgb(238,81,41)" fg:x="53" fg:w="3"/><text x="2.0381%" y="831.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="1.7881%" y="805" width="0.1012%" height="15" fill="rgb(210,199,37)" fg:x="53" fg:w="3"/><text x="2.0381%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.10%)</title><rect x="1.7881%" y="789" width="0.1012%" height="15" fill="rgb(244,192,49)" fg:x="53" fg:w="3"/><text x="2.0381%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.10%)</title><rect x="1.7881%" y="773" width="0.1012%" height="15" fill="rgb(226,211,11)" fg:x="53" fg:w="3"/><text x="2.0381%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::allocate (3 samples, 0.10%)</title><rect x="1.7881%" y="757" width="0.1012%" height="15" fill="rgb(236,162,54)" fg:x="53" fg:w="3"/><text x="2.0381%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.10%)</title><rect x="1.7881%" y="741" width="0.1012%" height="15" fill="rgb(220,229,9)" fg:x="53" fg:w="3"/><text x="2.0381%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::alloc (3 samples, 0.10%)</title><rect x="1.7881%" y="725" width="0.1012%" height="15" fill="rgb(250,87,22)" fg:x="53" fg:w="3"/><text x="2.0381%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::read_volatile (3 samples, 0.10%)</title><rect x="1.7881%" y="709" width="0.1012%" height="15" fill="rgb(239,43,17)" fg:x="53" fg:w="3"/><text x="2.0381%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (3 samples, 0.10%)</title><rect x="1.7881%" y="693" width="0.1012%" height="15" fill="rgb(231,177,25)" fg:x="53" fg:w="3"/><text x="2.0381%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`is_terminal::impl$0::is_terminal (1 samples, 0.03%)</title><rect x="1.8556%" y="677" width="0.0337%" height="15" fill="rgb(219,179,1)" fg:x="55" fg:w="1"/><text x="2.1056%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`is_terminal::handle_is_console (1 samples, 0.03%)</title><rect x="1.8556%" y="661" width="0.0337%" height="15" fill="rgb(238,219,53)" fg:x="55" fg:w="1"/><text x="2.1056%" y="671.50"></text></g><g><title>`0x7FFE41242F43 (1 samples, 0.03%)</title><rect x="1.8556%" y="645" width="0.0337%" height="15" fill="rgb(232,167,36)" fg:x="55" fg:w="1"/><text x="2.1056%" y="655.50"></text></g><g><title>`0x7FFE41243124 (1 samples, 0.03%)</title><rect x="1.8556%" y="629" width="0.0337%" height="15" fill="rgb(244,19,51)" fg:x="55" fg:w="1"/><text x="2.1056%" y="639.50"></text></g><g><title>`0x7FFE41243219 (1 samples, 0.03%)</title><rect x="1.8556%" y="613" width="0.0337%" height="15" fill="rgb(224,6,22)" fg:x="55" fg:w="1"/><text x="2.1056%" y="623.50"></text></g><g><title>`0x7FFE439B01B4 (1 samples, 0.03%)</title><rect x="1.8556%" y="597" width="0.0337%" height="15" fill="rgb(224,145,5)" fg:x="55" fg:w="1"/><text x="2.1056%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (146 samples, 4.93%)</title><rect x="1.8893%" y="581" width="4.9258%" height="15" fill="rgb(234,130,49)" fg:x="56" fg:w="146"/><text x="2.1393%" y="591.50">my_ben..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (146 samples, 4.93%)</title><rect x="1.8893%" y="565" width="4.9258%" height="15" fill="rgb(254,6,2)" fg:x="56" fg:w="146"/><text x="2.1393%" y="575.50">my_ben..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$76::lt (110 samples, 3.71%)</title><rect x="3.1039%" y="549" width="3.7112%" height="15" fill="rgb(208,96,46)" fg:x="92" fg:w="110"/><text x="3.3539%" y="559.50">my_b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$0::write_ram&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::ReadOnlyMemoryCartridge (41 samples, 1.38%)</title><rect x="5.4318%" y="533" width="1.3833%" height="15" fill="rgb(239,3,39)" fg:x="161" fg:w="41"/><text x="5.6818%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt; &gt;(gb_core::gameboy::GameBoy (1 samples, 0.03%)</title><rect x="6.8151%" y="581" width="0.0337%" height="15" fill="rgb(233,210,1)" fg:x="202" fg:w="1"/><text x="7.0651%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="6.8151%" y="565" width="0.0337%" height="15" fill="rgb(244,137,37)" fg:x="202" fg:w="1"/><text x="7.0651%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="6.8151%" y="549" width="0.0337%" height="15" fill="rgb(240,136,2)" fg:x="202" fg:w="1"/><text x="7.0651%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (1 samples, 0.03%)</title><rect x="6.8151%" y="533" width="0.0337%" height="15" fill="rgb(239,18,37)" fg:x="202" fg:w="1"/><text x="7.0651%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (1 samples, 0.03%)</title><rect x="6.8151%" y="517" width="0.0337%" height="15" fill="rgb(218,185,22)" fg:x="202" fg:w="1"/><text x="7.0651%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt; &gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="6.8151%" y="501" width="0.0337%" height="15" fill="rgb(225,218,4)" fg:x="202" fg:w="1"/><text x="7.0651%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::hardware::rom::Rom (1 samples, 0.03%)</title><rect x="6.8151%" y="485" width="0.0337%" height="15" fill="rgb(230,182,32)" fg:x="202" fg:w="1"/><text x="7.0651%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.03%)</title><rect x="6.8151%" y="469" width="0.0337%" height="15" fill="rgb(242,56,43)" fg:x="202" fg:w="1"/><text x="7.0651%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.03%)</title><rect x="6.8151%" y="453" width="0.0337%" height="15" fill="rgb(233,99,24)" fg:x="202" fg:w="1"/><text x="7.0651%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="6.8151%" y="437" width="0.0337%" height="15" fill="rgb(234,209,42)" fg:x="202" fg:w="1"/><text x="7.0651%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.03%)</title><rect x="6.8151%" y="421" width="0.0337%" height="15" fill="rgb(227,7,12)" fg:x="202" fg:w="1"/><text x="7.0651%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.03%)</title><rect x="6.8151%" y="405" width="0.0337%" height="15" fill="rgb(245,203,43)" fg:x="202" fg:w="1"/><text x="7.0651%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.03%)</title><rect x="6.8151%" y="389" width="0.0337%" height="15" fill="rgb(238,205,33)" fg:x="202" fg:w="1"/><text x="7.0651%" y="399.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.03%)</title><rect x="6.8151%" y="373" width="0.0337%" height="15" fill="rgb(231,56,7)" fg:x="202" fg:w="1"/><text x="7.0651%" y="383.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.03%)</title><rect x="6.8151%" y="357" width="0.0337%" height="15" fill="rgb(244,186,29)" fg:x="202" fg:w="1"/><text x="7.0651%" y="367.50"></text></g><g><title>`0x7FFE4394A0EC (1 samples, 0.03%)</title><rect x="6.8151%" y="341" width="0.0337%" height="15" fill="rgb(234,111,31)" fg:x="202" fg:w="1"/><text x="7.0651%" y="351.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.03%)</title><rect x="6.8151%" y="325" width="0.0337%" height="15" fill="rgb(241,149,10)" fg:x="202" fg:w="1"/><text x="7.0651%" y="335.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.03%)</title><rect x="6.8151%" y="309" width="0.0337%" height="15" fill="rgb(249,206,44)" fg:x="202" fg:w="1"/><text x="7.0651%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::impl$5::read_buf (2 samples, 0.07%)</title><rect x="6.8489%" y="533" width="0.0675%" height="15" fill="rgb(251,153,30)" fg:x="203" fg:w="2"/><text x="7.0989%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::read_buf (2 samples, 0.07%)</title><rect x="6.8489%" y="517" width="0.0675%" height="15" fill="rgb(239,152,38)" fg:x="203" fg:w="2"/><text x="7.0989%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read_buf (2 samples, 0.07%)</title><rect x="6.8489%" y="501" width="0.0675%" height="15" fill="rgb(249,139,47)" fg:x="203" fg:w="2"/><text x="7.0989%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::synchronous_read (2 samples, 0.07%)</title><rect x="6.8489%" y="485" width="0.0675%" height="15" fill="rgb(244,64,35)" fg:x="203" fg:w="2"/><text x="7.0989%" y="495.50"></text></g><g><title>`0x7FFE439B0194 (2 samples, 0.07%)</title><rect x="6.8489%" y="469" width="0.0675%" height="15" fill="rgb(216,46,15)" fg:x="203" fg:w="2"/><text x="7.0989%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;::and_then(enum2$&lt;core::result::Result (3 samples, 0.10%)</title><rect x="6.8489%" y="581" width="0.1012%" height="15" fill="rgb(250,74,19)" fg:x="203" fg:w="3"/><text x="7.0989%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci::closure$0 (3 samples, 0.10%)</title><rect x="6.8489%" y="565" width="0.1012%" height="15" fill="rgb(249,42,33)" fg:x="203" fg:w="3"/><text x="7.0989%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (3 samples, 0.10%)</title><rect x="6.8489%" y="549" width="0.1012%" height="15" fill="rgb(242,149,17)" fg:x="203" fg:w="3"/><text x="7.0989%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::default_read_to_end::small_probe_read&lt;ref$&lt;std::fs::File&gt; &gt; (1 samples, 0.03%)</title><rect x="6.9163%" y="533" width="0.0337%" height="15" fill="rgb(244,29,21)" fg:x="205" fg:w="1"/><text x="7.1663%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read (1 samples, 0.03%)</title><rect x="6.9163%" y="517" width="0.0337%" height="15" fill="rgb(220,130,37)" fg:x="205" fg:w="1"/><text x="7.1663%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::synchronous_read (1 samples, 0.03%)</title><rect x="6.9163%" y="501" width="0.0337%" height="15" fill="rgb(211,67,2)" fg:x="205" fg:w="1"/><text x="7.1663%" y="511.50"></text></g><g><title>`0x7FFE439B0194 (1 samples, 0.03%)</title><rect x="6.9163%" y="485" width="0.0337%" height="15" fill="rgb(235,68,52)" fg:x="205" fg:w="1"/><text x="7.1663%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_hl (1 samples, 0.03%)</title><rect x="14.7436%" y="517" width="0.0337%" height="15" fill="rgb(246,142,3)" fg:x="437" fg:w="1"/><text x="14.9936%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_hl (1 samples, 0.03%)</title><rect x="14.7773%" y="517" width="0.0337%" height="15" fill="rgb(241,25,7)" fg:x="438" fg:w="1"/><text x="15.0273%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::add16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (3 samples, 0.10%)</title><rect x="14.7436%" y="533" width="0.1012%" height="15" fill="rgb(242,119,39)" fg:x="437" fg:w="3"/><text x="14.9936%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::test_add_carry_bit (1 samples, 0.03%)</title><rect x="14.8111%" y="517" width="0.0337%" height="15" fill="rgb(241,98,45)" fg:x="439" fg:w="1"/><text x="15.0611%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$30::bitand (1 samples, 0.03%)</title><rect x="14.8111%" y="501" width="0.0337%" height="15" fill="rgb(254,28,30)" fg:x="439" fg:w="1"/><text x="15.0611%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (7 samples, 0.24%)</title><rect x="14.8448%" y="533" width="0.2362%" height="15" fill="rgb(241,142,54)" fg:x="440" fg:w="7"/><text x="15.0948%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (13 samples, 0.44%)</title><rect x="15.0810%" y="533" width="0.4386%" height="15" fill="rgb(222,85,15)" fg:x="447" fg:w="13"/><text x="15.3310%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (7 samples, 0.24%)</title><rect x="15.2834%" y="517" width="0.2362%" height="15" fill="rgb(210,85,47)" fg:x="453" fg:w="7"/><text x="15.5334%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_sub (7 samples, 0.24%)</title><rect x="15.7557%" y="485" width="0.2362%" height="15" fill="rgb(224,206,25)" fg:x="467" fg:w="7"/><text x="16.0057%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_call&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (28 samples, 0.94%)</title><rect x="15.6545%" y="517" width="0.9447%" height="15" fill="rgb(243,201,19)" fg:x="464" fg:w="28"/><text x="15.9045%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (25 samples, 0.84%)</title><rect x="15.7557%" y="501" width="0.8435%" height="15" fill="rgb(236,59,4)" fg:x="467" fg:w="25"/><text x="16.0057%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte(gb_core::hardware::Hardware (18 samples, 0.61%)</title><rect x="15.9919%" y="485" width="0.6073%" height="15" fill="rgb(254,179,45)" fg:x="474" fg:w="18"/><text x="16.2419%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::write (8 samples, 0.27%)</title><rect x="16.3293%" y="469" width="0.2699%" height="15" fill="rgb(226,14,10)" fg:x="484" fg:w="8"/><text x="16.5793%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="16.7004%" y="501" width="0.0337%" height="15" fill="rgb(244,27,41)" fg:x="495" fg:w="1"/><text x="16.9504%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="16.7341%" y="501" width="0.0675%" height="15" fill="rgb(235,35,32)" fg:x="496" fg:w="2"/><text x="16.9841%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.03%)</title><rect x="16.7679%" y="485" width="0.0337%" height="15" fill="rgb(218,68,31)" fg:x="497" fg:w="1"/><text x="17.0179%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (7 samples, 0.24%)</title><rect x="16.5992%" y="517" width="0.2362%" height="15" fill="rgb(207,120,37)" fg:x="492" fg:w="7"/><text x="16.8492%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="16.8016%" y="501" width="0.0337%" height="15" fill="rgb(227,98,0)" fg:x="498" fg:w="1"/><text x="17.0516%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="16.9028%" y="469" width="0.0675%" height="15" fill="rgb(207,7,3)" fg:x="501" fg:w="2"/><text x="17.1528%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (5 samples, 0.17%)</title><rect x="16.9028%" y="501" width="0.1687%" height="15" fill="rgb(206,98,19)" fg:x="501" fg:w="5"/><text x="17.1528%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (5 samples, 0.17%)</title><rect x="16.9028%" y="485" width="0.1687%" height="15" fill="rgb(217,5,26)" fg:x="501" fg:w="5"/><text x="17.1528%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (3 samples, 0.10%)</title><rect x="16.9703%" y="469" width="0.1012%" height="15" fill="rgb(235,190,38)" fg:x="503" fg:w="3"/><text x="17.2203%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.07%)</title><rect x="17.0040%" y="453" width="0.0675%" height="15" fill="rgb(247,86,24)" fg:x="504" fg:w="2"/><text x="17.2540%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (2 samples, 0.07%)</title><rect x="17.0715%" y="485" width="0.0675%" height="15" fill="rgb(205,101,16)" fg:x="506" fg:w="2"/><text x="17.3215%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.03%)</title><rect x="17.1053%" y="469" width="0.0337%" height="15" fill="rgb(246,168,33)" fg:x="507" fg:w="1"/><text x="17.3553%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="17.2402%" y="469" width="0.0675%" height="15" fill="rgb(231,114,1)" fg:x="511" fg:w="2"/><text x="17.4902%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::call (62 samples, 2.09%)</title><rect x="15.5196%" y="533" width="2.0918%" height="15" fill="rgb(207,184,53)" fg:x="460" fg:w="62"/><text x="15.7696%" y="543.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (23 samples, 0.78%)</title><rect x="16.8354%" y="517" width="0.7760%" height="15" fill="rgb(224,95,51)" fg:x="499" fg:w="23"/><text x="17.0854%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (16 samples, 0.54%)</title><rect x="17.0715%" y="501" width="0.5398%" height="15" fill="rgb(212,188,45)" fg:x="506" fg:w="16"/><text x="17.3215%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (14 samples, 0.47%)</title><rect x="17.1390%" y="485" width="0.4723%" height="15" fill="rgb(223,154,38)" fg:x="508" fg:w="14"/><text x="17.3890%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (9 samples, 0.30%)</title><rect x="17.3077%" y="469" width="0.3036%" height="15" fill="rgb(251,22,52)" fg:x="513" fg:w="9"/><text x="17.5577%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (4 samples, 0.13%)</title><rect x="17.4764%" y="453" width="0.1350%" height="15" fill="rgb(229,209,22)" fg:x="518" fg:w="4"/><text x="17.7264%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::bit (2 samples, 0.07%)</title><rect x="17.7463%" y="517" width="0.0675%" height="15" fill="rgb(234,138,34)" fg:x="526" fg:w="2"/><text x="17.9963%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (2 samples, 0.07%)</title><rect x="17.7463%" y="501" width="0.0675%" height="15" fill="rgb(212,95,11)" fg:x="526" fg:w="2"/><text x="17.9963%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="17.7800%" y="485" width="0.0337%" height="15" fill="rgb(240,179,47)" fg:x="527" fg:w="1"/><text x="18.0300%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::bit&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(unsigned long long, enum2$ (1 samples, 0.03%)</title><rect x="17.8138%" y="517" width="0.0337%" height="15" fill="rgb(240,163,11)" fg:x="528" fg:w="1"/><text x="18.0638%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (1 samples, 0.03%)</title><rect x="17.8475%" y="517" width="0.0337%" height="15" fill="rgb(236,37,12)" fg:x="529" fg:w="1"/><text x="18.0975%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="17.8475%" y="501" width="0.0337%" height="15" fill="rgb(232,164,16)" fg:x="529" fg:w="1"/><text x="18.0975%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::res&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(unsigned long long, enum2$ (1 samples, 0.03%)</title><rect x="17.8812%" y="517" width="0.0337%" height="15" fill="rgb(244,205,15)" fg:x="530" fg:w="1"/><text x="18.1312%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$10::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (1 samples, 0.03%)</title><rect x="17.8812%" y="501" width="0.0337%" height="15" fill="rgb(223,117,47)" fg:x="530" fg:w="1"/><text x="18.1312%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="17.8812%" y="485" width="0.0337%" height="15" fill="rgb(244,107,35)" fg:x="530" fg:w="1"/><text x="18.1312%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_decode_execute&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (10 samples, 0.34%)</title><rect x="17.6113%" y="533" width="0.3374%" height="15" fill="rgb(205,140,8)" fg:x="522" fg:w="10"/><text x="17.8613%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rr&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.03%)</title><rect x="17.9150%" y="517" width="0.0337%" height="15" fill="rgb(228,84,46)" fg:x="531" fg:w="1"/><text x="18.1650%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::alu_rr(unsigned char, bool, gb_core::cpu::opcodes::impl$0::rr::closure_env$0&lt;gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="17.9150%" y="501" width="0.0337%" height="15" fill="rgb(254,188,9)" fg:x="531" fg:w="1"/><text x="18.1650%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::opcodes::impl$0::rr::closure$0(gb_core::cpu::opcodes::impl$0::rr::closure_env$0&lt;gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="17.9150%" y="485" width="0.0337%" height="15" fill="rgb(206,112,54)" fg:x="531" fg:w="1"/><text x="18.1650%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="18.0837%" y="485" width="0.0337%" height="15" fill="rgb(216,84,49)" fg:x="536" fg:w="1"/><text x="18.3337%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_prefix&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (6 samples, 0.20%)</title><rect x="17.9487%" y="533" width="0.2024%" height="15" fill="rgb(214,194,35)" fg:x="532" fg:w="6"/><text x="18.1987%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (2 samples, 0.07%)</title><rect x="18.0837%" y="517" width="0.0675%" height="15" fill="rgb(249,28,3)" fg:x="536" fg:w="2"/><text x="18.3337%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="18.0837%" y="501" width="0.0675%" height="15" fill="rgb(222,56,52)" fg:x="536" fg:w="2"/><text x="18.3337%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="18.1174%" y="485" width="0.0337%" height="15" fill="rgb(245,217,50)" fg:x="537" fg:w="1"/><text x="18.3674%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.03%)</title><rect x="18.1174%" y="469" width="0.0337%" height="15" fill="rgb(213,201,24)" fg:x="537" fg:w="1"/><text x="18.3674%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (6 samples, 0.20%)</title><rect x="18.4211%" y="501" width="0.2024%" height="15" fill="rgb(248,116,28)" fg:x="546" fg:w="6"/><text x="18.6711%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (13 samples, 0.44%)</title><rect x="18.6235%" y="501" width="0.4386%" height="15" fill="rgb(219,72,43)" fg:x="552" fg:w="13"/><text x="18.8735%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.10%)</title><rect x="18.9609%" y="485" width="0.1012%" height="15" fill="rgb(209,138,14)" fg:x="562" fg:w="3"/><text x="19.2109%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (26 samples, 0.88%)</title><rect x="18.2861%" y="517" width="0.8772%" height="15" fill="rgb(222,18,33)" fg:x="542" fg:w="26"/><text x="18.5361%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (3 samples, 0.10%)</title><rect x="19.0621%" y="501" width="0.1012%" height="15" fill="rgb(213,199,7)" fg:x="565" fg:w="3"/><text x="19.3121%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (1 samples, 0.03%)</title><rect x="19.2982%" y="469" width="0.0337%" height="15" fill="rgb(250,110,10)" fg:x="572" fg:w="1"/><text x="19.5482%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (1 samples, 0.03%)</title><rect x="19.2982%" y="453" width="0.0337%" height="15" fill="rgb(248,123,6)" fg:x="572" fg:w="1"/><text x="19.5482%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="19.2982%" y="437" width="0.0337%" height="15" fill="rgb(206,91,31)" fg:x="572" fg:w="1"/><text x="19.5482%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (10 samples, 0.34%)</title><rect x="19.1633%" y="517" width="0.3374%" height="15" fill="rgb(211,154,13)" fg:x="568" fg:w="10"/><text x="19.4133%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (8 samples, 0.27%)</title><rect x="19.2308%" y="501" width="0.2699%" height="15" fill="rgb(225,148,7)" fg:x="570" fg:w="8"/><text x="19.4808%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (7 samples, 0.24%)</title><rect x="19.2645%" y="485" width="0.2362%" height="15" fill="rgb(220,160,43)" fg:x="571" fg:w="7"/><text x="19.5145%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (5 samples, 0.17%)</title><rect x="19.3320%" y="469" width="0.1687%" height="15" fill="rgb(213,52,39)" fg:x="573" fg:w="5"/><text x="19.5820%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (5 samples, 0.17%)</title><rect x="19.3320%" y="453" width="0.1687%" height="15" fill="rgb(243,137,7)" fg:x="573" fg:w="5"/><text x="19.5820%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.13%)</title><rect x="19.3657%" y="437" width="0.1350%" height="15" fill="rgb(230,79,13)" fg:x="574" fg:w="4"/><text x="19.6157%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (2 samples, 0.07%)</title><rect x="19.6019%" y="501" width="0.0675%" height="15" fill="rgb(247,105,23)" fg:x="581" fg:w="2"/><text x="19.8519%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctrl_jr (8 samples, 0.27%)</title><rect x="19.6694%" y="501" width="0.2699%" height="15" fill="rgb(223,179,41)" fg:x="583" fg:w="8"/><text x="19.9194%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.03%)</title><rect x="19.9055%" y="485" width="0.0337%" height="15" fill="rgb(218,9,34)" fg:x="590" fg:w="1"/><text x="20.1555%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (8 samples, 0.27%)</title><rect x="20.0067%" y="469" width="0.2699%" height="15" fill="rgb(222,106,8)" fg:x="593" fg:w="8"/><text x="20.2567%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (74 samples, 2.50%)</title><rect x="18.1511%" y="533" width="2.4966%" height="15" fill="rgb(211,220,0)" fg:x="538" fg:w="74"/><text x="18.4011%" y="543.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jr_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (34 samples, 1.15%)</title><rect x="19.5007%" y="517" width="1.1471%" height="15" fill="rgb(229,52,16)" fg:x="578" fg:w="34"/><text x="19.7507%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (21 samples, 0.71%)</title><rect x="19.9393%" y="501" width="0.7085%" height="15" fill="rgb(212,155,18)" fg:x="591" fg:w="21"/><text x="20.1893%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (21 samples, 0.71%)</title><rect x="19.9393%" y="485" width="0.7085%" height="15" fill="rgb(242,21,14)" fg:x="591" fg:w="21"/><text x="20.1893%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (11 samples, 0.37%)</title><rect x="20.2767%" y="469" width="0.3711%" height="15" fill="rgb(222,19,48)" fg:x="601" fg:w="11"/><text x="20.5267%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.10%)</title><rect x="20.5466%" y="453" width="0.1012%" height="15" fill="rgb(232,45,27)" fg:x="609" fg:w="3"/><text x="20.7966%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (3 samples, 0.10%)</title><rect x="20.9514%" y="501" width="0.1012%" height="15" fill="rgb(249,103,42)" fg:x="621" fg:w="3"/><text x="21.2014%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.03%)</title><rect x="21.0189%" y="485" width="0.0337%" height="15" fill="rgb(246,81,33)" fg:x="623" fg:w="1"/><text x="21.2689%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="21.0189%" y="469" width="0.0337%" height="15" fill="rgb(252,33,42)" fg:x="623" fg:w="1"/><text x="21.2689%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cp&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (14 samples, 0.47%)</title><rect x="20.6478%" y="533" width="0.4723%" height="15" fill="rgb(209,212,41)" fg:x="612" fg:w="14"/><text x="20.8978%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::alu_sub (7 samples, 0.24%)</title><rect x="20.8839%" y="517" width="0.2362%" height="15" fill="rgb(207,154,6)" fg:x="619" fg:w="7"/><text x="21.1339%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="21.0526%" y="501" width="0.0675%" height="15" fill="rgb(223,64,47)" fg:x="624" fg:w="2"/><text x="21.3026%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (35 samples, 1.18%)</title><rect x="23.0094%" y="517" width="1.1808%" height="15" fill="rgb(211,161,38)" fg:x="682" fg:w="35"/><text x="23.2594%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (68 samples, 2.29%)</title><rect x="24.1903%" y="517" width="2.2942%" height="15" fill="rgb(219,138,40)" fg:x="717" fg:w="68"/><text x="24.4403%" y="527.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (22 samples, 0.74%)</title><rect x="25.7422%" y="501" width="0.7422%" height="15" fill="rgb(241,228,46)" fg:x="763" fg:w="22"/><text x="25.9922%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="26.4845%" y="517" width="0.0675%" height="15" fill="rgb(223,209,38)" fg:x="785" fg:w="2"/><text x="26.7345%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (163 samples, 5.50%)</title><rect x="21.1201%" y="533" width="5.4993%" height="15" fill="rgb(236,164,45)" fg:x="626" fg:w="163"/><text x="21.3701%" y="543.50">my_benc..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="26.5520%" y="517" width="0.0675%" height="15" fill="rgb(231,15,5)" fg:x="787" fg:w="2"/><text x="26.8020%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (2 samples, 0.07%)</title><rect x="26.5520%" y="501" width="0.0675%" height="15" fill="rgb(252,35,15)" fg:x="787" fg:w="2"/><text x="26.8020%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::inc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (2 samples, 0.07%)</title><rect x="26.6194%" y="533" width="0.0675%" height="15" fill="rgb(248,181,18)" fg:x="789" fg:w="2"/><text x="26.8694%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp (1 samples, 0.03%)</title><rect x="26.6869%" y="533" width="0.0337%" height="15" fill="rgb(233,39,42)" fg:x="791" fg:w="1"/><text x="26.9369%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jr&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (3 samples, 0.10%)</title><rect x="26.7206%" y="533" width="0.1012%" height="15" fill="rgb(238,110,33)" fg:x="792" fg:w="3"/><text x="26.9706%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (2 samples, 0.07%)</title><rect x="26.7544%" y="517" width="0.0675%" height="15" fill="rgb(233,195,10)" fg:x="793" fg:w="2"/><text x="27.0044%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="26.7544%" y="501" width="0.0675%" height="15" fill="rgb(254,105,3)" fg:x="793" fg:w="2"/><text x="27.0044%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="26.7881%" y="485" width="0.0337%" height="15" fill="rgb(221,225,9)" fg:x="794" fg:w="1"/><text x="27.0381%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (1 samples, 0.03%)</title><rect x="26.8219%" y="485" width="0.0337%" height="15" fill="rgb(224,227,45)" fg:x="795" fg:w="1"/><text x="27.0719%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (1 samples, 0.03%)</title><rect x="26.8219%" y="469" width="0.0337%" height="15" fill="rgb(229,198,43)" fg:x="795" fg:w="1"/><text x="27.0719%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate16,gb_core::cpu::registers::Reg16&gt; (2 samples, 0.07%)</title><rect x="26.8219%" y="533" width="0.0675%" height="15" fill="rgb(206,209,35)" fg:x="795" fg:w="2"/><text x="27.0719%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="26.8219%" y="517" width="0.0675%" height="15" fill="rgb(245,195,53)" fg:x="795" fg:w="2"/><text x="27.0719%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (2 samples, 0.07%)</title><rect x="26.8219%" y="501" width="0.0675%" height="15" fill="rgb(240,92,26)" fg:x="795" fg:w="2"/><text x="27.0719%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.03%)</title><rect x="26.8556%" y="485" width="0.0337%" height="15" fill="rgb(207,40,23)" fg:x="796" fg:w="1"/><text x="27.1056%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="26.8556%" y="469" width="0.0337%" height="15" fill="rgb(223,111,35)" fg:x="796" fg:w="1"/><text x="27.1056%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="26.8556%" y="453" width="0.0337%" height="15" fill="rgb(229,147,28)" fg:x="796" fg:w="1"/><text x="27.1056%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.03%)</title><rect x="26.8556%" y="437" width="0.0337%" height="15" fill="rgb(211,29,28)" fg:x="796" fg:w="1"/><text x="27.1056%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_a (9 samples, 0.30%)</title><rect x="26.8893%" y="501" width="0.3036%" height="15" fill="rgb(228,72,33)" fg:x="797" fg:w="9"/><text x="27.1393%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_b (6 samples, 0.20%)</title><rect x="27.1930%" y="501" width="0.2024%" height="15" fill="rgb(205,214,31)" fg:x="806" fg:w="6"/><text x="27.4430%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_d (5 samples, 0.17%)</title><rect x="27.3954%" y="501" width="0.1687%" height="15" fill="rgb(224,111,15)" fg:x="812" fg:w="5"/><text x="27.6454%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_e (8 samples, 0.27%)</title><rect x="27.5641%" y="501" width="0.2699%" height="15" fill="rgb(253,21,26)" fg:x="817" fg:w="8"/><text x="27.8141%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.17%)</title><rect x="28.2389%" y="469" width="0.1687%" height="15" fill="rgb(245,139,43)" fg:x="837" fg:w="5"/><text x="28.4889%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8 (55 samples, 1.86%)</title><rect x="26.8893%" y="533" width="1.8556%" height="15" fill="rgb(252,170,7)" fg:x="797" fg:w="55"/><text x="27.1393%" y="543.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (55 samples, 1.86%)</title><rect x="26.8893%" y="517" width="1.8556%" height="15" fill="rgb(231,118,14)" fg:x="797" fg:w="55"/><text x="27.1393%" y="527.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_l (27 samples, 0.91%)</title><rect x="27.8340%" y="501" width="0.9109%" height="15" fill="rgb(238,83,0)" fg:x="825" fg:w="27"/><text x="28.0840%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (22 samples, 0.74%)</title><rect x="28.0027%" y="485" width="0.7422%" height="15" fill="rgb(221,39,39)" fg:x="830" fg:w="22"/><text x="28.2527%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (10 samples, 0.34%)</title><rect x="28.4076%" y="469" width="0.3374%" height="15" fill="rgb(222,119,46)" fg:x="842" fg:w="10"/><text x="28.6576%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.07%)</title><rect x="28.6775%" y="453" width="0.0675%" height="15" fill="rgb(222,165,49)" fg:x="850" fg:w="2"/><text x="28.9275%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="29.9595%" y="453" width="0.0337%" height="15" fill="rgb(219,113,52)" fg:x="888" fg:w="1"/><text x="30.2095%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (5 samples, 0.17%)</title><rect x="29.9595%" y="485" width="0.1687%" height="15" fill="rgb(214,7,15)" fg:x="888" fg:w="5"/><text x="30.2095%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (5 samples, 0.17%)</title><rect x="29.9595%" y="469" width="0.1687%" height="15" fill="rgb(235,32,4)" fg:x="888" fg:w="5"/><text x="30.2095%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.13%)</title><rect x="29.9933%" y="453" width="0.1350%" height="15" fill="rgb(238,90,54)" fg:x="889" fg:w="4"/><text x="30.2433%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.07%)</title><rect x="30.0607%" y="437" width="0.0675%" height="15" fill="rgb(213,208,19)" fg:x="891" fg:w="2"/><text x="30.3107%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="30.2294%" y="453" width="0.0675%" height="15" fill="rgb(233,156,4)" fg:x="896" fg:w="2"/><text x="30.4794%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (12 samples, 0.40%)</title><rect x="29.9595%" y="501" width="0.4049%" height="15" fill="rgb(207,194,5)" fg:x="888" fg:w="12"/><text x="30.2095%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (7 samples, 0.24%)</title><rect x="30.1282%" y="485" width="0.2362%" height="15" fill="rgb(206,111,30)" fg:x="893" fg:w="7"/><text x="30.3782%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (7 samples, 0.24%)</title><rect x="30.1282%" y="469" width="0.2362%" height="15" fill="rgb(243,70,54)" fg:x="893" fg:w="7"/><text x="30.3782%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="30.2969%" y="453" width="0.0675%" height="15" fill="rgb(242,28,8)" fg:x="898" fg:w="2"/><text x="30.5469%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.03%)</title><rect x="30.3306%" y="437" width="0.0337%" height="15" fill="rgb(219,106,18)" fg:x="899" fg:w="1"/><text x="30.5806%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.03%)</title><rect x="30.3644%" y="501" width="0.0337%" height="15" fill="rgb(244,222,10)" fg:x="900" fg:w="1"/><text x="30.6144%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.03%)</title><rect x="30.3644%" y="485" width="0.0337%" height="15" fill="rgb(236,179,52)" fg:x="900" fg:w="1"/><text x="30.6144%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (1 samples, 0.03%)</title><rect x="30.3644%" y="469" width="0.0337%" height="15" fill="rgb(213,23,39)" fg:x="900" fg:w="1"/><text x="30.6144%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (7 samples, 0.24%)</title><rect x="30.3981%" y="501" width="0.2362%" height="15" fill="rgb(238,48,10)" fg:x="901" fg:w="7"/><text x="30.6481%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (1 samples, 0.03%)</title><rect x="30.9717%" y="485" width="0.0337%" height="15" fill="rgb(251,196,23)" fg:x="918" fg:w="1"/><text x="31.2217%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (18 samples, 0.61%)</title><rect x="30.6343%" y="501" width="0.6073%" height="15" fill="rgb(250,152,24)" fg:x="908" fg:w="18"/><text x="30.8843%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (7 samples, 0.24%)</title><rect x="31.0054%" y="485" width="0.2362%" height="15" fill="rgb(209,150,17)" fg:x="919" fg:w="7"/><text x="31.2554%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$10::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (67 samples, 2.26%)</title><rect x="29.3185%" y="517" width="2.2605%" height="15" fill="rgb(234,202,34)" fg:x="869" fg:w="67"/><text x="29.5685%" y="527.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (10 samples, 0.34%)</title><rect x="31.2416%" y="501" width="0.3374%" height="15" fill="rgb(253,148,53)" fg:x="926" fg:w="10"/><text x="31.4916%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_a (3 samples, 0.10%)</title><rect x="31.7139%" y="501" width="0.1012%" height="15" fill="rgb(218,129,16)" fg:x="940" fg:w="3"/><text x="31.9639%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt;,gb_core::cpu::registers::Reg8&gt;(gb_core::cpu::registers::Reg8, enum2$ (92 samples, 3.10%)</title><rect x="28.7449%" y="533" width="3.1039%" height="15" fill="rgb(216,85,19)" fg:x="852" fg:w="92"/><text x="28.9949%" y="543.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (8 samples, 0.27%)</title><rect x="31.5789%" y="517" width="0.2699%" height="15" fill="rgb(235,228,7)" fg:x="936" fg:w="8"/><text x="31.8289%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="31.8151%" y="501" width="0.0337%" height="15" fill="rgb(245,175,0)" fg:x="943" fg:w="1"/><text x="32.0651%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="31.9163%" y="501" width="0.0675%" height="15" fill="rgb(208,168,36)" fg:x="946" fg:w="2"/><text x="32.1663%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (2 samples, 0.07%)</title><rect x="31.9163%" y="485" width="0.0675%" height="15" fill="rgb(246,171,24)" fg:x="946" fg:w="2"/><text x="32.1663%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="31.9163%" y="469" width="0.0675%" height="15" fill="rgb(215,142,24)" fg:x="946" fg:w="2"/><text x="32.1663%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8,gb_core::cpu::registers::Reg8&gt; (5 samples, 0.17%)</title><rect x="31.8489%" y="533" width="0.1687%" height="15" fill="rgb(250,187,7)" fg:x="944" fg:w="5"/><text x="32.0989%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (3 samples, 0.10%)</title><rect x="31.9163%" y="517" width="0.1012%" height="15" fill="rgb(228,66,33)" fg:x="946" fg:w="3"/><text x="32.1663%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="31.9838%" y="501" width="0.0337%" height="15" fill="rgb(234,215,21)" fg:x="948" fg:w="1"/><text x="32.2338%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (2 samples, 0.07%)</title><rect x="32.9622%" y="469" width="0.0675%" height="15" fill="rgb(222,191,20)" fg:x="977" fg:w="2"/><text x="33.2122%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (7 samples, 0.24%)</title><rect x="33.0297%" y="453" width="0.2362%" height="15" fill="rgb(245,79,54)" fg:x="979" fg:w="7"/><text x="33.2797%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (18 samples, 0.61%)</title><rect x="32.9622%" y="501" width="0.6073%" height="15" fill="rgb(240,10,37)" fg:x="977" fg:w="18"/><text x="33.2122%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (18 samples, 0.61%)</title><rect x="32.9622%" y="485" width="0.6073%" height="15" fill="rgb(214,192,32)" fg:x="977" fg:w="18"/><text x="33.2122%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (16 samples, 0.54%)</title><rect x="33.0297%" y="469" width="0.5398%" height="15" fill="rgb(209,36,54)" fg:x="979" fg:w="16"/><text x="33.2797%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (9 samples, 0.30%)</title><rect x="33.2659%" y="453" width="0.3036%" height="15" fill="rgb(220,10,11)" fg:x="986" fg:w="9"/><text x="33.5159%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.07%)</title><rect x="33.5020%" y="437" width="0.0675%" height="15" fill="rgb(221,106,17)" fg:x="993" fg:w="2"/><text x="33.7520%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="34.1430%" y="437" width="0.0337%" height="15" fill="rgb(251,142,44)" fg:x="1012" fg:w="1"/><text x="34.3930%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (3 samples, 0.10%)</title><rect x="34.1430%" y="469" width="0.1012%" height="15" fill="rgb(238,13,15)" fg:x="1012" fg:w="3"/><text x="34.3930%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (3 samples, 0.10%)</title><rect x="34.1430%" y="453" width="0.1012%" height="15" fill="rgb(208,107,27)" fg:x="1012" fg:w="3"/><text x="34.3930%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="34.1768%" y="437" width="0.0675%" height="15" fill="rgb(205,136,37)" fg:x="1013" fg:w="2"/><text x="34.4268%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.03%)</title><rect x="34.2105%" y="421" width="0.0337%" height="15" fill="rgb(250,205,27)" fg:x="1014" fg:w="1"/><text x="34.4605%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="34.2443%" y="437" width="0.0675%" height="15" fill="rgb(210,80,43)" fg:x="1015" fg:w="2"/><text x="34.4943%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (8 samples, 0.27%)</title><rect x="34.1093%" y="485" width="0.2699%" height="15" fill="rgb(247,160,36)" fg:x="1011" fg:w="8"/><text x="34.3593%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (4 samples, 0.13%)</title><rect x="34.2443%" y="469" width="0.1350%" height="15" fill="rgb(234,13,49)" fg:x="1015" fg:w="4"/><text x="34.4943%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (4 samples, 0.13%)</title><rect x="34.2443%" y="453" width="0.1350%" height="15" fill="rgb(234,122,0)" fg:x="1015" fg:w="4"/><text x="34.4943%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.07%)</title><rect x="34.3117%" y="437" width="0.0675%" height="15" fill="rgb(207,146,38)" fg:x="1017" fg:w="2"/><text x="34.5617%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.03%)</title><rect x="34.3455%" y="421" width="0.0337%" height="15" fill="rgb(207,177,25)" fg:x="1018" fg:w="1"/><text x="34.5955%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="34.3792%" y="469" width="0.0675%" height="15" fill="rgb(211,178,42)" fg:x="1019" fg:w="2"/><text x="34.6292%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (1 samples, 0.03%)</title><rect x="34.4130%" y="453" width="0.0337%" height="15" fill="rgb(230,69,54)" fg:x="1020" fg:w="1"/><text x="34.6630%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;::transfer_dma&lt;my_benchmark::DummyScreen&gt; (4 samples, 0.13%)</title><rect x="34.3792%" y="485" width="0.1350%" height="15" fill="rgb(214,135,41)" fg:x="1019" fg:w="4"/><text x="34.6292%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::write_oam (2 samples, 0.07%)</title><rect x="34.4467%" y="469" width="0.0675%" height="15" fill="rgb(237,67,25)" fg:x="1021" fg:w="2"/><text x="34.6967%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(enum2$ (75 samples, 2.53%)</title><rect x="32.0175%" y="533" width="2.5304%" height="15" fill="rgb(222,189,50)" fg:x="949" fg:w="75"/><text x="32.2675%" y="543.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$9::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (69 samples, 2.33%)</title><rect x="32.2200%" y="517" width="2.3279%" height="15" fill="rgb(245,148,34)" fg:x="955" fg:w="69"/><text x="32.4700%" y="527.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte(gb_core::hardware::Hardware (29 samples, 0.98%)</title><rect x="33.5695%" y="501" width="0.9784%" height="15" fill="rgb(222,29,6)" fg:x="995" fg:w="29"/><text x="33.8195%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::write_ram&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.03%)</title><rect x="34.5142%" y="485" width="0.0337%" height="15" fill="rgb(221,189,43)" fg:x="1023" fg:w="1"/><text x="34.7642%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (1 samples, 0.03%)</title><rect x="34.7503%" y="501" width="0.0337%" height="15" fill="rgb(207,36,27)" fg:x="1030" fg:w="1"/><text x="35.0003%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (1 samples, 0.03%)</title><rect x="34.7503%" y="485" width="0.0337%" height="15" fill="rgb(217,90,24)" fg:x="1030" fg:w="1"/><text x="35.0003%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (6 samples, 0.20%)</title><rect x="34.7166%" y="517" width="0.2024%" height="15" fill="rgb(224,66,35)" fg:x="1029" fg:w="6"/><text x="34.9666%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (4 samples, 0.13%)</title><rect x="34.7841%" y="501" width="0.1350%" height="15" fill="rgb(221,13,50)" fg:x="1031" fg:w="4"/><text x="35.0341%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (3 samples, 0.10%)</title><rect x="34.8178%" y="485" width="0.1012%" height="15" fill="rgb(236,68,49)" fg:x="1032" fg:w="3"/><text x="35.0678%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (13 samples, 0.44%)</title><rect x="34.5479%" y="533" width="0.4386%" height="15" fill="rgb(229,146,28)" fg:x="1024" fg:w="13"/><text x="34.7979%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.07%)</title><rect x="34.9190%" y="517" width="0.0675%" height="15" fill="rgb(225,31,38)" fg:x="1035" fg:w="2"/><text x="35.1690%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (13 samples, 0.44%)</title><rect x="34.9865%" y="533" width="0.4386%" height="15" fill="rgb(250,208,3)" fg:x="1037" fg:w="13"/><text x="35.2365%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (6 samples, 0.20%)</title><rect x="35.2227%" y="517" width="0.2024%" height="15" fill="rgb(246,54,23)" fg:x="1044" fg:w="6"/><text x="35.4727%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_sub (3 samples, 0.10%)</title><rect x="35.3239%" y="501" width="0.1012%" height="15" fill="rgb(243,76,11)" fg:x="1047" fg:w="3"/><text x="35.5739%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret (18 samples, 0.61%)</title><rect x="35.4251%" y="533" width="0.6073%" height="15" fill="rgb(245,21,50)" fg:x="1050" fg:w="18"/><text x="35.6751%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (18 samples, 0.61%)</title><rect x="35.4251%" y="517" width="0.6073%" height="15" fill="rgb(228,9,43)" fg:x="1050" fg:w="18"/><text x="35.6751%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (16 samples, 0.54%)</title><rect x="35.4926%" y="501" width="0.5398%" height="15" fill="rgb(208,100,47)" fg:x="1052" fg:w="16"/><text x="35.7426%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (10 samples, 0.34%)</title><rect x="35.6950%" y="485" width="0.3374%" height="15" fill="rgb(232,26,8)" fg:x="1058" fg:w="10"/><text x="35.9450%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (5 samples, 0.17%)</title><rect x="35.8637%" y="469" width="0.1687%" height="15" fill="rgb(216,166,38)" fg:x="1063" fg:w="5"/><text x="36.1137%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.03%)</title><rect x="36.1673%" y="485" width="0.0337%" height="15" fill="rgb(251,202,51)" fg:x="1072" fg:w="1"/><text x="36.4173%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (12 samples, 0.40%)</title><rect x="36.0324%" y="533" width="0.4049%" height="15" fill="rgb(254,216,34)" fg:x="1068" fg:w="12"/><text x="36.2824%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (9 samples, 0.30%)</title><rect x="36.1336%" y="517" width="0.3036%" height="15" fill="rgb(251,32,27)" fg:x="1071" fg:w="9"/><text x="36.3836%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (9 samples, 0.30%)</title><rect x="36.1336%" y="501" width="0.3036%" height="15" fill="rgb(208,127,28)" fg:x="1071" fg:w="9"/><text x="36.3836%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (7 samples, 0.24%)</title><rect x="36.2011%" y="485" width="0.2362%" height="15" fill="rgb(224,137,22)" fg:x="1073" fg:w="7"/><text x="36.4511%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (5 samples, 0.17%)</title><rect x="36.2686%" y="469" width="0.1687%" height="15" fill="rgb(254,70,32)" fg:x="1075" fg:w="5"/><text x="36.5186%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (3 samples, 0.10%)</title><rect x="36.5047%" y="501" width="0.1012%" height="15" fill="rgb(229,75,37)" fg:x="1082" fg:w="3"/><text x="36.7547%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rst (10 samples, 0.34%)</title><rect x="36.4372%" y="533" width="0.3374%" height="15" fill="rgb(252,64,23)" fg:x="1080" fg:w="10"/><text x="36.6872%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (10 samples, 0.34%)</title><rect x="36.4372%" y="517" width="0.3374%" height="15" fill="rgb(232,162,48)" fg:x="1080" fg:w="10"/><text x="36.6872%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.17%)</title><rect x="36.6059%" y="501" width="0.1687%" height="15" fill="rgb(246,160,12)" fg:x="1085" fg:w="5"/><text x="36.8559%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.03%)</title><rect x="36.7409%" y="485" width="0.0337%" height="15" fill="rgb(247,166,0)" fg:x="1089" fg:w="1"/><text x="36.9909%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::step (856 samples, 28.88%)</title><rect x="7.9622%" y="565" width="28.8799%" height="15" fill="rgb(249,219,21)" fg:x="236" fg:w="856"/><text x="8.2122%" y="575.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::decode&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (811 samples, 27.36%)</title><rect x="9.4804%" y="549" width="27.3617%" height="15" fill="rgb(205,209,3)" fg:x="281" fg:w="811"/><text x="9.7304%" y="559.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::c..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::xor&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (2 samples, 0.07%)</title><rect x="36.7746%" y="533" width="0.0675%" height="15" fill="rgb(243,44,1)" fg:x="1090" fg:w="2"/><text x="37.0246%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::InputController::update_state (19 samples, 0.64%)</title><rect x="36.8421%" y="565" width="0.6410%" height="15" fill="rgb(206,159,16)" fg:x="1092" fg:w="19"/><text x="37.0921%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::impl$9::clone (15 samples, 0.51%)</title><rect x="36.9771%" y="549" width="0.5061%" height="15" fill="rgb(244,77,30)" fg:x="1096" fg:w="15"/><text x="37.2271%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_pixel (3 samples, 0.10%)</title><rect x="41.2618%" y="485" width="0.1012%" height="15" fill="rgb(218,69,12)" fg:x="1223" fg:w="3"/><text x="41.5118%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (3 samples, 0.10%)</title><rect x="41.2618%" y="469" width="0.1012%" height="15" fill="rgb(212,87,7)" fg:x="1223" fg:w="3"/><text x="41.5118%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::request (6 samples, 0.20%)</title><rect x="41.2618%" y="549" width="0.2024%" height="15" fill="rgb(245,114,25)" fg:x="1223" fg:w="6"/><text x="41.5118%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptLine::insert (6 samples, 0.20%)</title><rect x="41.2618%" y="533" width="0.2024%" height="15" fill="rgb(210,61,42)" fg:x="1223" fg:w="6"/><text x="41.5118%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::_::InternalBitFlags::insert (6 samples, 0.20%)</title><rect x="41.2618%" y="517" width="0.2024%" height="15" fill="rgb(211,52,33)" fg:x="1223" fg:w="6"/><text x="41.5118%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (6 samples, 0.20%)</title><rect x="41.2618%" y="501" width="0.2024%" height="15" fill="rgb(234,58,33)" fg:x="1223" fg:w="6"/><text x="41.5118%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_window_pixel (3 samples, 0.10%)</title><rect x="41.3630%" y="485" width="0.1012%" height="15" fill="rgb(220,115,36)" fg:x="1226" fg:w="3"/><text x="41.6130%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (2 samples, 0.07%)</title><rect x="41.3968%" y="469" width="0.0675%" height="15" fill="rgb(243,153,54)" fg:x="1227" fg:w="2"/><text x="41.6468%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (29 samples, 0.98%)</title><rect x="41.7004%" y="533" width="0.9784%" height="15" fill="rgb(251,47,18)" fg:x="1236" fg:w="29"/><text x="41.9504%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (29 samples, 0.98%)</title><rect x="41.7004%" y="517" width="0.9784%" height="15" fill="rgb(242,102,42)" fg:x="1236" fg:w="29"/><text x="41.9504%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$58::lt (21 samples, 0.71%)</title><rect x="41.9703%" y="501" width="0.7085%" height="15" fill="rgb(234,31,38)" fg:x="1244" fg:w="21"/><text x="42.2203%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_add (4 samples, 0.13%)</title><rect x="42.6788%" y="533" width="0.1350%" height="15" fill="rgb(221,117,51)" fg:x="1265" fg:w="4"/><text x="42.9288%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_mul (2 samples, 0.07%)</title><rect x="43.8259%" y="517" width="0.0675%" height="15" fill="rgb(212,20,18)" fg:x="1299" fg:w="2"/><text x="44.0759%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (1 samples, 0.03%)</title><rect x="43.8934%" y="517" width="0.0337%" height="15" fill="rgb(245,133,36)" fg:x="1301" fg:w="1"/><text x="44.1434%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (1 samples, 0.03%)</title><rect x="43.8934%" y="501" width="0.0337%" height="15" fill="rgb(212,6,19)" fg:x="1301" fg:w="1"/><text x="44.1434%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_pixel (85 samples, 2.87%)</title><rect x="43.9271%" y="517" width="2.8677%" height="15" fill="rgb(218,1,36)" fg:x="1302" fg:w="85"/><text x="44.1771%" y="527.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$1::set_pixel (85 samples, 2.87%)</title><rect x="43.9271%" y="501" width="2.8677%" height="15" fill="rgb(246,84,54)" fg:x="1302" fg:w="85"/><text x="44.1771%" y="511.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (42 samples, 1.42%)</title><rect x="46.7949%" y="517" width="1.4170%" height="15" fill="rgb(242,110,6)" fg:x="1387" fg:w="42"/><text x="47.0449%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_pixel (618 samples, 20.85%)</title><rect x="42.8138%" y="533" width="20.8502%" height="15" fill="rgb(214,47,5)" fg:x="1269" fg:w="618"/><text x="43.0638%" y="543.50">my_benchmark-c9a97925f9d084bf.exe..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (458 samples, 15.45%)</title><rect x="48.2119%" y="517" width="15.4521%" height="15" fill="rgb(218,159,25)" fg:x="1429" fg:w="458"/><text x="48.4619%" y="527.50">my_benchmark-c9a97925f9d..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::bit (7 samples, 0.24%)</title><rect x="63.4278%" y="501" width="0.2362%" height="15" fill="rgb(215,211,28)" fg:x="1880" fg:w="7"/><text x="63.6778%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$779::shr (7 samples, 0.24%)</title><rect x="63.4278%" y="485" width="0.2362%" height="15" fill="rgb(238,59,32)" fg:x="1880" fg:w="7"/><text x="63.6778%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_mul (11 samples, 0.37%)</title><rect x="64.8111%" y="517" width="0.3711%" height="15" fill="rgb(226,82,3)" fg:x="1921" fg:w="11"/><text x="65.0611%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (77 samples, 2.60%)</title><rect x="65.1822%" y="517" width="2.5978%" height="15" fill="rgb(240,164,32)" fg:x="1932" fg:w="77"/><text x="65.4322%" y="527.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (77 samples, 2.60%)</title><rect x="65.1822%" y="501" width="2.5978%" height="15" fill="rgb(232,46,7)" fg:x="1932" fg:w="77"/><text x="65.4322%" y="511.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::bits (76 samples, 2.56%)</title><rect x="65.2159%" y="485" width="2.5641%" height="15" fill="rgb(229,129,53)" fg:x="1933" fg:w="76"/><text x="65.4659%" y="495.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;gb_core::hardware::color_palette::ColorPalette&gt;::background (18 samples, 0.61%)</title><rect x="68.4548%" y="501" width="0.6073%" height="15" fill="rgb(234,188,29)" fg:x="2029" fg:w="18"/><text x="68.7048%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_pixel (83 samples, 2.80%)</title><rect x="67.7800%" y="517" width="2.8003%" height="15" fill="rgb(246,141,4)" fg:x="2009" fg:w="83"/><text x="68.0300%" y="527.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$1::set_pixel (45 samples, 1.52%)</title><rect x="69.0621%" y="501" width="1.5182%" height="15" fill="rgb(229,23,39)" fg:x="2047" fg:w="45"/><text x="69.3121%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (135 samples, 4.55%)</title><rect x="70.5803%" y="517" width="4.5547%" height="15" fill="rgb(206,12,3)" fg:x="2092" fg:w="135"/><text x="70.8303%" y="527.50">my_be..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (4 samples, 0.13%)</title><rect x="75.0000%" y="501" width="0.1350%" height="15" fill="rgb(252,226,20)" fg:x="2223" fg:w="4"/><text x="75.2500%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (4 samples, 0.13%)</title><rect x="75.0000%" y="485" width="0.1350%" height="15" fill="rgb(216,123,35)" fg:x="2223" fg:w="4"/><text x="75.2500%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_window_pixel (953 samples, 32.15%)</title><rect x="63.6640%" y="533" width="32.1525%" height="15" fill="rgb(212,68,40)" fg:x="1887" fg:w="953"/><text x="63.9140%" y="543.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware:..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (613 samples, 20.68%)</title><rect x="75.1350%" y="517" width="20.6815%" height="15" fill="rgb(254,125,32)" fg:x="2227" fg:w="613"/><text x="75.3850%" y="527.50">my_benchmark-c9a97925f9d084bf.exe..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::bit (17 samples, 0.57%)</title><rect x="95.2429%" y="501" width="0.5735%" height="15" fill="rgb(253,97,22)" fg:x="2823" fg:w="17"/><text x="95.4929%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$779::shr (17 samples, 0.57%)</title><rect x="95.2429%" y="485" width="0.5735%" height="15" fill="rgb(241,101,14)" fg:x="2823" fg:w="17"/><text x="95.4929%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.37%)</title><rect x="95.9514%" y="453" width="0.3711%" height="15" fill="rgb(238,103,29)" fg:x="2844" fg:w="11"/><text x="96.2014%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.37%)</title><rect x="95.9514%" y="437" width="0.3711%" height="15" fill="rgb(233,195,47)" fg:x="2844" fg:w="11"/><text x="96.2014%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.37%)</title><rect x="95.9514%" y="421" width="0.3711%" height="15" fill="rgb(246,218,30)" fg:x="2844" fg:w="11"/><text x="96.2014%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::find(core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;*, gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.37%)</title><rect x="95.9514%" y="405" width="0.3711%" height="15" fill="rgb(219,145,47)" fg:x="2844" fg:w="11"/><text x="96.2014%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::impls::impl$3::call_mut(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (8 samples, 0.27%)</title><rect x="96.0526%" y="389" width="0.2699%" height="15" fill="rgb(243,12,26)" fg:x="2847" fg:w="8"/><text x="96.3026%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::impl$1::draw_sprites::closure$0(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (8 samples, 0.27%)</title><rect x="96.0526%" y="373" width="0.2699%" height="15" fill="rgb(214,87,16)" fg:x="2847" fg:w="8"/><text x="96.3026%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_sub (6 samples, 0.20%)</title><rect x="96.1201%" y="357" width="0.2024%" height="15" fill="rgb(208,99,42)" fg:x="2849" fg:w="6"/><text x="96.3701%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (1,627 samples, 54.89%)</title><rect x="41.4642%" y="549" width="54.8920%" height="15" fill="rgb(253,99,2)" fg:x="1229" fg:w="1627"/><text x="41.7142%" y="559.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::d..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_sprites (16 samples, 0.54%)</title><rect x="95.8165%" y="533" width="0.5398%" height="15" fill="rgb(220,168,23)" fg:x="2840" fg:w="16"/><text x="96.0665%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.40%)</title><rect x="95.9514%" y="517" width="0.4049%" height="15" fill="rgb(242,38,24)" fg:x="2844" fg:w="12"/><text x="96.2014%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$26::from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.40%)</title><rect x="95.9514%" y="501" width="0.4049%" height="15" fill="rgb(225,182,9)" fg:x="2844" fg:w="12"/><text x="96.2014%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$24::extend(arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;*, core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.40%)</title><rect x="95.9514%" y="485" width="0.4049%" height="15" fill="rgb(243,178,37)" fg:x="2844" fg:w="12"/><text x="96.2014%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;::extend_from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.40%)</title><rect x="95.9514%" y="469" width="0.4049%" height="15" fill="rgb(232,139,19)" fg:x="2844" fg:w="12"/><text x="96.2014%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;*, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="96.3225%" y="453" width="0.0337%" height="15" fill="rgb(225,201,24)" fg:x="2855" fg:w="1"/><text x="96.5725%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::write(tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;*, tuple$&lt;usize,ref$ (1 samples, 0.03%)</title><rect x="96.3225%" y="437" width="0.0337%" height="15" fill="rgb(221,47,46)" fg:x="2855" fg:w="1"/><text x="96.5725%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_current_mode_sec (4 samples, 0.13%)</title><rect x="97.2335%" y="533" width="0.1350%" height="15" fill="rgb(249,23,13)" fg:x="2882" fg:w="4"/><text x="97.4835%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::step (1,781 samples, 60.09%)</title><rect x="37.4831%" y="565" width="60.0877%" height="15" fill="rgb(219,9,5)" fg:x="1111" fg:w="1781"/><text x="37.7331%" y="575.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::step</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_lcd_stat_interrupts (36 samples, 1.21%)</title><rect x="96.3563%" y="549" width="1.2146%" height="15" fill="rgb(254,171,16)" fg:x="2856" fg:w="36"/><text x="96.6063%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Stat::contains (6 samples, 0.20%)</title><rect x="97.3684%" y="533" width="0.2024%" height="15" fill="rgb(230,171,20)" fg:x="2886" fg:w="6"/><text x="97.6184%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (6 samples, 0.20%)</title><rect x="97.3684%" y="517" width="0.2024%" height="15" fill="rgb(210,71,41)" fg:x="2886" fg:w="6"/><text x="97.6184%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::do_cycle (11 samples, 0.37%)</title><rect x="97.5709%" y="565" width="0.3711%" height="15" fill="rgb(206,173,20)" fg:x="2892" fg:w="11"/><text x="97.8209%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick (2,732 samples, 92.17%)</title><rect x="6.9501%" y="581" width="92.1727%" height="15" fill="rgb(233,88,34)" fg:x="206" fg:w="2732"/><text x="7.2001%" y="591.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::timer::Timer::do_cycle (35 samples, 1.18%)</title><rect x="97.9420%" y="565" width="1.1808%" height="15" fill="rgb(223,209,46)" fg:x="2903" fg:w="35"/><text x="98.1920%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::HardwareState,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::HardwareState&gt;, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1228%" y="485" width="0.0337%" height="15" fill="rgb(250,43,18)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1228%" y="469" width="0.0337%" height="15" fill="rgb(208,13,10)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.03%)</title><rect x="99.1228%" y="453" width="0.0337%" height="15" fill="rgb(212,200,36)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.03%)</title><rect x="99.1228%" y="437" width="0.0337%" height="15" fill="rgb(225,90,30)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::Dma&gt; &gt;::is_some (1 samples, 0.03%)</title><rect x="99.1228%" y="421" width="0.0337%" height="15" fill="rgb(236,182,39)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::work_ram::WorkRam,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::work_ram::WorkRam&gt;, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1228%" y="405" width="0.0337%" height="15" fill="rgb(212,144,35)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1228%" y="389" width="0.0337%" height="15" fill="rgb(228,63,44)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_newtype_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$ (1 samples, 0.03%)</title><rect x="99.1228%" y="373" width="0.0337%" height="15" fill="rgb(228,109,6)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::_::impl$0::deserialize::impl$0::visit_newtype_struct(gb_core::hardware::work_ram::_::impl$0::deserialize::__Visitor, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1228%" y="357" width="0.0337%" height="15" fill="rgb(238,117,24)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1228%" y="341" width="0.0337%" height="15" fill="rgb(242,26,26)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_tuple(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, unsigned long long, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.03%)</title><rect x="99.1228%" y="325" width="0.0337%" height="15" fill="rgb(221,92,48)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_seq(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.03%)</title><rect x="99.1228%" y="309" width="0.0337%" height="15" fill="rgb(209,209,32)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize::impl$0::visit_seq(serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$&lt;u8,8192&gt; &gt;, serde_json::de::SeqAccess (1 samples, 0.03%)</title><rect x="99.1228%" y="293" width="0.0337%" height="15" fill="rgb(221,70,22)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option (1 samples, 0.03%)</title><rect x="99.1228%" y="277" width="0.0337%" height="15" fill="rgb(248,145,5)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::SeqAccess::next_element&lt;serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;,u8&gt;(serde_json::de::SeqAccess (1 samples, 0.03%)</title><rect x="99.1228%" y="261" width="0.0337%" height="15" fill="rgb(226,116,26)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$9::next_element_seed(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="99.1228%" y="245" width="0.0337%" height="15" fill="rgb(244,5,17)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_u8&lt;serde_json::read::StrRead,serde::de::impls::impl$55::deserialize::PrimitiveVisitor&gt;(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1228%" y="229" width="0.0337%" height="15" fill="rgb(252,159,33)" fg:x="2938" fg:w="1"/><text x="99.3728%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::ppu::PPuState&gt; &gt;::is_some (2 samples, 0.07%)</title><rect x="99.1228%" y="501" width="0.0675%" height="15" fill="rgb(206,71,0)" fg:x="2938" fg:w="2"/><text x="99.3728%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::ppu::PPuState,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::ppu::PPuState&gt;, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="485" width="0.0337%" height="15" fill="rgb(233,118,54)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="469" width="0.0337%" height="15" fill="rgb(234,83,48)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.03%)</title><rect x="99.1565%" y="453" width="0.0337%" height="15" fill="rgb(228,3,54)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.03%)</title><rect x="99.1565%" y="437" width="0.0337%" height="15" fill="rgb(226,155,13)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::ppu::Mode&gt; &gt;::is_some (1 samples, 0.03%)</title><rect x="99.1565%" y="421" width="0.0337%" height="15" fill="rgb(241,28,37)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::ppu::VideoRam,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::ppu::VideoRam&gt;, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="405" width="0.0337%" height="15" fill="rgb(233,93,10)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="389" width="0.0337%" height="15" fill="rgb(225,113,19)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.03%)</title><rect x="99.1565%" y="373" width="0.0337%" height="15" fill="rgb(241,2,18)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.03%)</title><rect x="99.1565%" y="357" width="0.0337%" height="15" fill="rgb(228,207,21)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_value(serde_json::de::MapAccess (1 samples, 0.03%)</title><rect x="99.1565%" y="341" width="0.0337%" height="15" fill="rgb(213,211,35)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="99.1565%" y="325" width="0.0337%" height="15" fill="rgb(209,83,10)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map::__DeserializeWith&gt;, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="309" width="0.0337%" height="15" fill="rgb(209,164,1)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map::impl$2::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="293" width="0.0337%" height="15" fill="rgb(213,184,43)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="277" width="0.0337%" height="15" fill="rgb(231,61,34)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_tuple&lt;serde_json::read::StrRead,serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$&lt;gb_core::hardware::ppu::Tile,384&gt; &gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, unsigned long long, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.03%)</title><rect x="99.1565%" y="261" width="0.0337%" height="15" fill="rgb(235,75,3)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_seq(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$ (1 samples, 0.03%)</title><rect x="99.1565%" y="245" width="0.0337%" height="15" fill="rgb(220,106,47)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_big_array::const_generics::impl$2::deserialize::impl$0::visit_seq(serde_big_array::const_generics::impl$2::deserialize::ArrayVisitor&lt;array$&lt;gb_core::hardware::ppu::Tile,384&gt; &gt;, serde_json::de::SeqAccess (1 samples, 0.03%)</title><rect x="99.1565%" y="229" width="0.0337%" height="15" fill="rgb(210,196,33)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::SeqAccess::next_element(serde_json::de::SeqAccess (1 samples, 0.03%)</title><rect x="99.1565%" y="213" width="0.0337%" height="15" fill="rgb(229,154,42)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$9::next_element_seed(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="99.1565%" y="197" width="0.0337%" height="15" fill="rgb(228,114,26)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;gb_core::hardware::ppu::Tile&gt;, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="181" width="0.0337%" height="15" fill="rgb(208,144,1)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="165" width="0.0337%" height="15" fill="rgb(239,112,37)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_newtype_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$ (1 samples, 0.03%)</title><rect x="99.1565%" y="149" width="0.0337%" height="15" fill="rgb(210,96,50)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$0::visit_newtype_struct(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="133" width="0.0337%" height="15" fill="rgb(222,178,2)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impls::impl$124::deserialize(serde_json::de::Deserializer (1 samples, 0.03%)</title><rect x="99.1565%" y="117" width="0.0337%" height="15" fill="rgb(226,74,18)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="127.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_tuple(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, unsigned long long, serde::de::impls::ArrayVisitor&lt;array$ (1 samples, 0.03%)</title><rect x="99.1565%" y="101" width="0.0337%" height="15" fill="rgb(225,67,54)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="111.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_seq(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::ArrayVisitor&lt;array$ (1 samples, 0.03%)</title><rect x="99.1565%" y="85" width="0.0337%" height="15" fill="rgb(251,92,32)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="95.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impls::impl$122::visit_seq(serde::de::impls::ArrayVisitor&lt;array$&lt;u8,16&gt; &gt;, serde_json::de::SeqAccess (1 samples, 0.03%)</title><rect x="99.1565%" y="69" width="0.0337%" height="15" fill="rgb(228,149,22)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="79.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::SeqAccess::next_element&lt;serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;,u8&gt;(serde_json::de::SeqAccess (1 samples, 0.03%)</title><rect x="99.1565%" y="53" width="0.0337%" height="15" fill="rgb(243,54,13)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="63.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$9::next_element_seed(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="99.1565%" y="37" width="0.0337%" height="15" fill="rgb(243,180,28)" fg:x="2939" fg:w="1"/><text x="99.4065%" y="47.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_str(ref$ (3 samples, 0.10%)</title><rect x="99.1228%" y="581" width="0.1012%" height="15" fill="rgb(208,167,24)" fg:x="2938" fg:w="3"/><text x="99.3728%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (3 samples, 0.10%)</title><rect x="99.1228%" y="565" width="0.1012%" height="15" fill="rgb(245,73,45)" fg:x="2938" fg:w="3"/><text x="99.3728%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize(serde_json::de::Deserializer (3 samples, 0.10%)</title><rect x="99.1228%" y="549" width="0.1012%" height="15" fill="rgb(237,203,48)" fg:x="2938" fg:w="3"/><text x="99.3728%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (3 samples, 0.10%)</title><rect x="99.1228%" y="533" width="0.1012%" height="15" fill="rgb(211,197,16)" fg:x="2938" fg:w="3"/><text x="99.3728%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize::impl$2::visit_map(gb_core::gameboy::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (3 samples, 0.10%)</title><rect x="99.1228%" y="517" width="0.1012%" height="15" fill="rgb(243,99,51)" fg:x="2938" fg:w="3"/><text x="99.3728%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_key(serde_json::de::MapAccess (1 samples, 0.03%)</title><rect x="99.1903%" y="501" width="0.0337%" height="15" fill="rgb(215,123,29)" fg:x="2940" fg:w="1"/><text x="99.4403%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_key_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.03%)</title><rect x="99.1903%" y="485" width="0.0337%" height="15" fill="rgb(239,186,37)" fg:x="2940" fg:w="1"/><text x="99.4403%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;gb_core::gameboy::_::impl$0::deserialize::__Field&gt;, serde_json::de::MapKey (1 samples, 0.03%)</title><rect x="99.1903%" y="469" width="0.0337%" height="15" fill="rgb(252,136,39)" fg:x="2940" fg:w="1"/><text x="99.4403%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize::impl$1::deserialize(serde_json::de::MapKey (1 samples, 0.03%)</title><rect x="99.1903%" y="453" width="0.0337%" height="15" fill="rgb(223,213,32)" fg:x="2940" fg:w="1"/><text x="99.4403%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$19::deserialize_identifier(serde_json::de::MapKey (1 samples, 0.03%)</title><rect x="99.1903%" y="437" width="0.0337%" height="15" fill="rgb(233,115,5)" fg:x="2940" fg:w="1"/><text x="99.4403%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$19::deserialize_any(serde_json::de::MapKey (1 samples, 0.03%)</title><rect x="99.1903%" y="421" width="0.0337%" height="15" fill="rgb(207,226,44)" fg:x="2940" fg:w="1"/><text x="99.4403%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$10::parse_str(serde_json::read::StrRead*, alloc::vec::Vec (1 samples, 0.03%)</title><rect x="99.1903%" y="405" width="0.0337%" height="15" fill="rgb(208,126,0)" fg:x="2940" fg:w="1"/><text x="99.4403%" y="415.50"></text></g><g><title>`0x7FFE4396AF08 (2,941 samples, 99.22%)</title><rect x="0.0337%" y="1125" width="99.2240%" height="15" fill="rgb(244,66,21)" fg:x="1" fg:w="2941"/><text x="0.2837%" y="1135.50">`0x7FFE4396AF08</text></g><g><title>`0x7FFE42BA257D (2,941 samples, 99.22%)</title><rect x="0.0337%" y="1109" width="99.2240%" height="15" fill="rgb(222,97,12)" fg:x="1" fg:w="2941"/><text x="0.2837%" y="1119.50">`0x7FFE42BA257D</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh() (2,936 samples, 99.06%)</title><rect x="0.2024%" y="1093" width="99.0553%" height="15" fill="rgb(219,213,19)" fg:x="6" fg:w="2936"/><text x="0.4524%" y="1103.50">my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`invoke_main() (2,930 samples, 98.85%)</title><rect x="0.4049%" y="1077" width="98.8529%" height="15" fill="rgb(252,169,30)" fg:x="12" fg:w="2930"/><text x="0.6549%" y="1087.50">my_benchmark-c9a97925f9d084bf.exe`invoke_main()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`main (2,930 samples, 98.85%)</title><rect x="0.4049%" y="1061" width="98.8529%" height="15" fill="rgb(206,32,51)" fg:x="12" fg:w="2930"/><text x="0.6549%" y="1071.50">my_benchmark-c9a97925f9d084bf.exe`main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (2,930 samples, 98.85%)</title><rect x="0.4049%" y="1045" width="98.8529%" height="15" fill="rgb(250,172,42)" fg:x="12" fg:w="2930"/><text x="0.6549%" y="1055.50">my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main (2,930 samples, 98.85%)</title><rect x="0.4049%" y="1029" width="98.8529%" height="15" fill="rgb(209,34,43)" fg:x="12" fg:w="2930"/><text x="0.6549%" y="1039.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches (2,928 samples, 98.79%)</title><rect x="0.4723%" y="1013" width="98.7854%" height="15" fill="rgb(223,11,35)" fg:x="14" fg:w="2928"/><text x="0.7223%" y="1023.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion (2,889 samples, 97.47%)</title><rect x="1.7881%" y="997" width="97.4696%" height="15" fill="rgb(251,219,26)" fg:x="53" fg:w="2889"/><text x="2.0381%" y="1007.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (2,889 samples, 97.47%)</title><rect x="1.7881%" y="981" width="97.4696%" height="15" fill="rgb(231,119,3)" fg:x="53" fg:w="2889"/><text x="2.0381%" y="991.50">my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function (2,886 samples, 97.37%)</title><rect x="1.8893%" y="965" width="97.3684%" height="15" fill="rgb(216,97,11)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="975.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (2,886 samples, 97.37%)</title><rect x="1.8893%" y="949" width="97.3684%" height="15" fill="rgb(223,59,9)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="959.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, ..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="933" width="97.3684%" height="15" fill="rgb(233,93,31)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="943.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (2,886 samples, 97.37%)</title><rect x="1.8893%" y="917" width="97.3684%" height="15" fill="rgb(239,81,33)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="927.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (2,886 samples, 97.37%)</title><rect x="1.8893%" y="901" width="97.3684%" height="15" fill="rgb(213,120,34)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="911.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (2,886 samples, 97.37%)</title><rect x="1.8893%" y="885" width="97.3684%" height="15" fill="rgb(243,49,53)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="895.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (2,886 samples, 97.37%)</title><rect x="1.8893%" y="869" width="97.3684%" height="15" fill="rgb(247,216,33)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="879.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (2,886 samples, 97.37%)</title><rect x="1.8893%" y="853" width="97.3684%" height="15" fill="rgb(226,26,14)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="863.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, ref$&lt;slice2$&lt;u64&gt; &gt;, tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="837" width="97.3684%" height="15" fill="rgb(215,49,53)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="847.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_en..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="821" width="97.3684%" height="15" fill="rgb(245,162,40)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="831.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::i..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="805" width="97.3684%" height="15" fill="rgb(229,68,17)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="815.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::clo..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="789" width="97.3684%" height="15" fill="rgb(213,182,10)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="799.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::imp..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="773" width="97.3684%" height="15" fill="rgb(245,125,30)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="783.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routi..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="757" width="97.3684%" height="15" fill="rgb(232,202,2)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="767.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::sli..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="741" width="97.3684%" height="15" fill="rgb(237,140,51)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="751.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="725" width="97.3684%" height="15" fill="rgb(236,157,25)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="735.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="709" width="97.3684%" height="15" fill="rgb(219,209,0)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="719.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="693" width="97.3684%" height="15" fill="rgb(240,116,54)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="703.50">my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="677" width="97.3684%" height="15" fill="rgb(216,10,36)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="687.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterio..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,886 samples, 97.37%)</title><rect x="1.8893%" y="661" width="97.3684%" height="15" fill="rgb(222,72,44)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="671.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,cr..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (2,886 samples, 97.37%)</title><rect x="1.8893%" y="645" width="97.3684%" height="15" fill="rgb(232,159,9)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="655.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::criterion_benchmark::closure$0::closure_env$0&gt; (2,886 samples, 97.37%)</title><rect x="1.8893%" y="629" width="97.3684%" height="15" fill="rgb(210,39,32)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="639.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::crite..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0 (2,886 samples, 97.37%)</title><rect x="1.8893%" y="613" width="97.3684%" height="15" fill="rgb(216,194,45)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="623.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci (2,886 samples, 97.37%)</title><rect x="1.8893%" y="597" width="97.3684%" height="15" fill="rgb(218,18,35)" fg:x="56" fg:w="2886"/><text x="2.1393%" y="607.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::File::open(ref$ (1 samples, 0.03%)</title><rect x="99.2240%" y="581" width="0.0337%" height="15" fill="rgb(207,83,51)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::open(ref$ (1 samples, 0.03%)</title><rect x="99.2240%" y="565" width="0.0337%" height="15" fill="rgb(225,63,43)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::_open (1 samples, 0.03%)</title><rect x="99.2240%" y="549" width="0.0337%" height="15" fill="rgb(207,57,36)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::map (1 samples, 0.03%)</title><rect x="99.2240%" y="533" width="0.0337%" height="15" fill="rgb(216,99,33)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.03%)</title><rect x="99.2240%" y="517" width="0.0337%" height="15" fill="rgb(225,42,16)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.03%)</title><rect x="99.2240%" y="501" width="0.0337%" height="15" fill="rgb(220,201,45)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.03%)</title><rect x="99.2240%" y="485" width="0.0337%" height="15" fill="rgb(225,33,4)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="495.50"></text></g><g><title>`0x7FFE41229EEC (1 samples, 0.03%)</title><rect x="99.2240%" y="469" width="0.0337%" height="15" fill="rgb(224,33,50)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="479.50"></text></g><g><title>`0x7FFE4122A580 (1 samples, 0.03%)</title><rect x="99.2240%" y="453" width="0.0337%" height="15" fill="rgb(246,198,51)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="463.50"></text></g><g><title>`0x7FFE439B0B74 (1 samples, 0.03%)</title><rect x="99.2240%" y="437" width="0.0337%" height="15" fill="rgb(205,22,4)" fg:x="2941" fg:w="1"/><text x="99.4740%" y="447.50"></text></g><g><title>`0x7FFE439ED091 (1 samples, 0.03%)</title><rect x="99.2578%" y="1077" width="0.0337%" height="15" fill="rgb(206,3,8)" fg:x="2942" fg:w="1"/><text x="99.5078%" y="1087.50"></text></g><g><title>`0x7FFE439ECF49 (1 samples, 0.03%)</title><rect x="99.2578%" y="1061" width="0.0337%" height="15" fill="rgb(251,23,15)" fg:x="2942" fg:w="1"/><text x="99.5078%" y="1071.50"></text></g><g><title>`0x7FFE439BF123 (1 samples, 0.03%)</title><rect x="99.2578%" y="1045" width="0.0337%" height="15" fill="rgb(252,88,28)" fg:x="2942" fg:w="1"/><text x="99.5078%" y="1055.50"></text></g><g><title>`0x7FFE439B20C4 (1 samples, 0.03%)</title><rect x="99.2578%" y="1029" width="0.0337%" height="15" fill="rgb(212,127,14)" fg:x="2942" fg:w="1"/><text x="99.5078%" y="1039.50"></text></g><g><title>`0x7FFE439ED84D (1 samples, 0.03%)</title><rect x="99.2915%" y="1077" width="0.0337%" height="15" fill="rgb(247,145,37)" fg:x="2943" fg:w="1"/><text x="99.5415%" y="1087.50"></text></g><g><title>`0x7FFE439EF0F2 (1 samples, 0.03%)</title><rect x="99.2915%" y="1061" width="0.0337%" height="15" fill="rgb(209,117,53)" fg:x="2943" fg:w="1"/><text x="99.5415%" y="1071.50"></text></g><g><title>`0x7FFE439582B9 (1 samples, 0.03%)</title><rect x="99.2915%" y="1045" width="0.0337%" height="15" fill="rgb(212,90,42)" fg:x="2943" fg:w="1"/><text x="99.5415%" y="1055.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.03%)</title><rect x="99.2915%" y="1029" width="0.0337%" height="15" fill="rgb(218,164,37)" fg:x="2943" fg:w="1"/><text x="99.5415%" y="1039.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.03%)</title><rect x="99.2915%" y="1013" width="0.0337%" height="15" fill="rgb(246,65,34)" fg:x="2943" fg:w="1"/><text x="99.5415%" y="1023.50"></text></g><g><title>`0x7FFE439EDA15 (1 samples, 0.03%)</title><rect x="99.3252%" y="1077" width="0.0337%" height="15" fill="rgb(231,100,33)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="1087.50"></text></g><g><title>`0x7FFE439685DA (1 samples, 0.03%)</title><rect x="99.3252%" y="1061" width="0.0337%" height="15" fill="rgb(228,126,14)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="1071.50"></text></g><g><title>`0x7FFE43968C9F (1 samples, 0.03%)</title><rect x="99.3252%" y="1045" width="0.0337%" height="15" fill="rgb(215,173,21)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="1055.50"></text></g><g><title>`0x7FFE43968D44 (1 samples, 0.03%)</title><rect x="99.3252%" y="1029" width="0.0337%" height="15" fill="rgb(210,6,40)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="1039.50"></text></g><g><title>`0x7FFE4392EC78 (1 samples, 0.03%)</title><rect x="99.3252%" y="1013" width="0.0337%" height="15" fill="rgb(212,48,18)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="1023.50"></text></g><g><title>`0x7FFE43968821 (1 samples, 0.03%)</title><rect x="99.3252%" y="997" width="0.0337%" height="15" fill="rgb(230,214,11)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="1007.50"></text></g><g><title>`0x7FFE4396890F (1 samples, 0.03%)</title><rect x="99.3252%" y="981" width="0.0337%" height="15" fill="rgb(254,105,39)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="991.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.03%)</title><rect x="99.3252%" y="965" width="0.0337%" height="15" fill="rgb(245,158,5)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="975.50"></text></g><g><title>`0x7FFE4394FEF8 (1 samples, 0.03%)</title><rect x="99.3252%" y="949" width="0.0337%" height="15" fill="rgb(249,208,11)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="959.50"></text></g><g><title>`0x7FFE4395A49B (1 samples, 0.03%)</title><rect x="99.3252%" y="933" width="0.0337%" height="15" fill="rgb(210,39,28)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="943.50"></text></g><g><title>`0x7FFE43959A01 (1 samples, 0.03%)</title><rect x="99.3252%" y="917" width="0.0337%" height="15" fill="rgb(211,56,53)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="927.50"></text></g><g><title>`0x7FFE43959408 (1 samples, 0.03%)</title><rect x="99.3252%" y="901" width="0.0337%" height="15" fill="rgb(226,201,30)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="911.50"></text></g><g><title>`0x7FFE4395A55D (1 samples, 0.03%)</title><rect x="99.3252%" y="885" width="0.0337%" height="15" fill="rgb(239,101,34)" fg:x="2944" fg:w="1"/><text x="99.5752%" y="895.50"></text></g><g><title>`0x7FFE439EE3CE (1 samples, 0.03%)</title><rect x="99.3590%" y="1077" width="0.0337%" height="15" fill="rgb(226,209,5)" fg:x="2945" fg:w="1"/><text x="99.6090%" y="1087.50"></text></g><g><title>`0x7FFE4398BD58 (1 samples, 0.03%)</title><rect x="99.3590%" y="1061" width="0.0337%" height="15" fill="rgb(250,105,47)" fg:x="2945" fg:w="1"/><text x="99.6090%" y="1071.50"></text></g><g><title>`0x7FFE4398BE2C (1 samples, 0.03%)</title><rect x="99.3590%" y="1045" width="0.0337%" height="15" fill="rgb(230,72,3)" fg:x="2945" fg:w="1"/><text x="99.6090%" y="1055.50"></text></g><g><title>`0x7FFE439B0734 (1 samples, 0.03%)</title><rect x="99.3590%" y="1029" width="0.0337%" height="15" fill="rgb(232,218,39)" fg:x="2945" fg:w="1"/><text x="99.6090%" y="1039.50"></text></g><g><title>`0x7FFE43934A01 (1 samples, 0.03%)</title><rect x="99.3927%" y="965" width="0.0337%" height="15" fill="rgb(248,166,6)" fg:x="2946" fg:w="1"/><text x="99.6427%" y="975.50"></text></g><g><title>`0x7FFE4393B2CE (1 samples, 0.03%)</title><rect x="99.3927%" y="949" width="0.0337%" height="15" fill="rgb(247,89,20)" fg:x="2946" fg:w="1"/><text x="99.6427%" y="959.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.03%)</title><rect x="99.4265%" y="965" width="0.0337%" height="15" fill="rgb(248,130,54)" fg:x="2947" fg:w="1"/><text x="99.6765%" y="975.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.03%)</title><rect x="99.4265%" y="949" width="0.0337%" height="15" fill="rgb(234,196,4)" fg:x="2947" fg:w="1"/><text x="99.6765%" y="959.50"></text></g><g><title>`0x7FFE43935827 (1 samples, 0.03%)</title><rect x="99.4265%" y="933" width="0.0337%" height="15" fill="rgb(250,143,31)" fg:x="2947" fg:w="1"/><text x="99.6765%" y="943.50"></text></g><g><title>`0x7FFE43934126 (1 samples, 0.03%)</title><rect x="99.4602%" y="949" width="0.0337%" height="15" fill="rgb(211,110,34)" fg:x="2948" fg:w="1"/><text x="99.7102%" y="959.50"></text></g><g><title>`0x7FFE43938D76 (4 samples, 0.13%)</title><rect x="99.3927%" y="1029" width="0.1350%" height="15" fill="rgb(215,124,48)" fg:x="2946" fg:w="4"/><text x="99.6427%" y="1039.50"></text></g><g><title>`0x7FFE4393E269 (4 samples, 0.13%)</title><rect x="99.3927%" y="1013" width="0.1350%" height="15" fill="rgb(216,46,13)" fg:x="2946" fg:w="4"/><text x="99.6427%" y="1023.50"></text></g><g><title>`0x7FFE4393D2E9 (4 samples, 0.13%)</title><rect x="99.3927%" y="997" width="0.1350%" height="15" fill="rgb(205,184,25)" fg:x="2946" fg:w="4"/><text x="99.6427%" y="1007.50"></text></g><g><title>`0x7FFE4393C8B8 (4 samples, 0.13%)</title><rect x="99.3927%" y="981" width="0.1350%" height="15" fill="rgb(228,1,10)" fg:x="2946" fg:w="4"/><text x="99.6427%" y="991.50"></text></g><g><title>`0x7FFE43934C34 (2 samples, 0.07%)</title><rect x="99.4602%" y="965" width="0.0675%" height="15" fill="rgb(213,116,27)" fg:x="2948" fg:w="2"/><text x="99.7102%" y="975.50"></text></g><g><title>`0x7FFE43934236 (1 samples, 0.03%)</title><rect x="99.4939%" y="949" width="0.0337%" height="15" fill="rgb(241,95,50)" fg:x="2949" fg:w="1"/><text x="99.7439%" y="959.50"></text></g><g><title>`0x7FFE43938DA0 (1 samples, 0.03%)</title><rect x="99.5277%" y="1029" width="0.0337%" height="15" fill="rgb(238,48,32)" fg:x="2950" fg:w="1"/><text x="99.7777%" y="1039.50"></text></g><g><title>`0x7FFE4393A560 (1 samples, 0.03%)</title><rect x="99.5277%" y="1013" width="0.0337%" height="15" fill="rgb(235,113,49)" fg:x="2950" fg:w="1"/><text x="99.7777%" y="1023.50"></text></g><g><title>`0x7FFE4392127B (1 samples, 0.03%)</title><rect x="99.5277%" y="997" width="0.0337%" height="15" fill="rgb(205,127,43)" fg:x="2950" fg:w="1"/><text x="99.7777%" y="1007.50"></text></g><g><title>`0x7FFE4393419B (1 samples, 0.03%)</title><rect x="99.5277%" y="981" width="0.0337%" height="15" fill="rgb(250,162,2)" fg:x="2950" fg:w="1"/><text x="99.7777%" y="991.50"></text></g><g><title>`0x7FFE4124201D (1 samples, 0.03%)</title><rect x="99.5614%" y="933" width="0.0337%" height="15" fill="rgb(220,13,41)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="943.50"></text></g><g><title>`0x7FFE412425C7 (1 samples, 0.03%)</title><rect x="99.5614%" y="917" width="0.0337%" height="15" fill="rgb(249,221,25)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="927.50"></text></g><g><title>`0x7FFE4124173C (1 samples, 0.03%)</title><rect x="99.5614%" y="901" width="0.0337%" height="15" fill="rgb(215,208,19)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="911.50"></text></g><g><title>`0x7FFE412411E8 (1 samples, 0.03%)</title><rect x="99.5614%" y="885" width="0.0337%" height="15" fill="rgb(236,175,2)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="895.50"></text></g><g><title>`0x7FFE4124134B (1 samples, 0.03%)</title><rect x="99.5614%" y="869" width="0.0337%" height="15" fill="rgb(241,52,2)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="879.50"></text></g><g><title>`0x7FFE4124152D (1 samples, 0.03%)</title><rect x="99.5614%" y="853" width="0.0337%" height="15" fill="rgb(248,140,14)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="863.50"></text></g><g><title>`0x7FFE412416E8 (1 samples, 0.03%)</title><rect x="99.5614%" y="837" width="0.0337%" height="15" fill="rgb(253,22,42)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="847.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.03%)</title><rect x="99.5614%" y="821" width="0.0337%" height="15" fill="rgb(234,61,47)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="831.50"></text></g><g><title>`0x7FFE4394FBF8 (1 samples, 0.03%)</title><rect x="99.5614%" y="805" width="0.0337%" height="15" fill="rgb(208,226,15)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="815.50"></text></g><g><title>`0x7FFE43955C9B (1 samples, 0.03%)</title><rect x="99.5614%" y="789" width="0.0337%" height="15" fill="rgb(217,221,4)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="799.50"></text></g><g><title>`0x7FFE43956019 (1 samples, 0.03%)</title><rect x="99.5614%" y="773" width="0.0337%" height="15" fill="rgb(212,174,34)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="783.50"></text></g><g><title>`0x7FFE439B03D4 (1 samples, 0.03%)</title><rect x="99.5614%" y="757" width="0.0337%" height="15" fill="rgb(253,83,4)" fg:x="2951" fg:w="1"/><text x="99.8114%" y="767.50"></text></g><g><title>`0x7FFE4124208D (1 samples, 0.03%)</title><rect x="99.5951%" y="933" width="0.0337%" height="15" fill="rgb(250,195,49)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="943.50"></text></g><g><title>`0x7FFE41242C1D (1 samples, 0.03%)</title><rect x="99.5951%" y="917" width="0.0337%" height="15" fill="rgb(241,192,25)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="927.50"></text></g><g><title>`0x7FFE412B4D64 (1 samples, 0.03%)</title><rect x="99.5951%" y="901" width="0.0337%" height="15" fill="rgb(208,124,10)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="911.50"></text></g><g><title>`0x7FFE41241B31 (1 samples, 0.03%)</title><rect x="99.5951%" y="885" width="0.0337%" height="15" fill="rgb(222,33,0)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="895.50"></text></g><g><title>`0x7FFE41241E84 (1 samples, 0.03%)</title><rect x="99.5951%" y="869" width="0.0337%" height="15" fill="rgb(234,209,28)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="879.50"></text></g><g><title>`0x7FFE4124390D (1 samples, 0.03%)</title><rect x="99.5951%" y="853" width="0.0337%" height="15" fill="rgb(224,11,23)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="863.50"></text></g><g><title>`0x7FFE412439F1 (1 samples, 0.03%)</title><rect x="99.5951%" y="837" width="0.0337%" height="15" fill="rgb(232,99,1)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="847.50"></text></g><g><title>`0x7FFE41243B22 (1 samples, 0.03%)</title><rect x="99.5951%" y="821" width="0.0337%" height="15" fill="rgb(237,95,45)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="831.50"></text></g><g><title>`0x7FFE41244869 (1 samples, 0.03%)</title><rect x="99.5951%" y="805" width="0.0337%" height="15" fill="rgb(208,109,11)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="815.50"></text></g><g><title>`0x7FFE439B2744 (1 samples, 0.03%)</title><rect x="99.5951%" y="789" width="0.0337%" height="15" fill="rgb(216,190,48)" fg:x="2952" fg:w="1"/><text x="99.8451%" y="799.50"></text></g><g><title>`0x7FFE41242097 (1 samples, 0.03%)</title><rect x="99.6289%" y="933" width="0.0337%" height="15" fill="rgb(251,171,36)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="943.50"></text></g><g><title>`0x7FFE412428B4 (1 samples, 0.03%)</title><rect x="99.6289%" y="917" width="0.0337%" height="15" fill="rgb(230,62,22)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="927.50"></text></g><g><title>`0x7FFE41242976 (1 samples, 0.03%)</title><rect x="99.6289%" y="901" width="0.0337%" height="15" fill="rgb(225,114,35)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="911.50"></text></g><g><title>`0x7FFE412BEA85 (1 samples, 0.03%)</title><rect x="99.6289%" y="885" width="0.0337%" height="15" fill="rgb(215,118,42)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="895.50"></text></g><g><title>`0x7FFE412C988B (1 samples, 0.03%)</title><rect x="99.6289%" y="869" width="0.0337%" height="15" fill="rgb(243,119,21)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="879.50"></text></g><g><title>`0x7FFE412D0B0B (1 samples, 0.03%)</title><rect x="99.6289%" y="853" width="0.0337%" height="15" fill="rgb(252,177,53)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="863.50"></text></g><g><title>`0x7FFE412CB370 (1 samples, 0.03%)</title><rect x="99.6289%" y="837" width="0.0337%" height="15" fill="rgb(237,209,29)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="847.50"></text></g><g><title>`0x7FFE412CB61A (1 samples, 0.03%)</title><rect x="99.6289%" y="821" width="0.0337%" height="15" fill="rgb(212,65,23)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="831.50"></text></g><g><title>`0x7FFE412839C0 (1 samples, 0.03%)</title><rect x="99.6289%" y="805" width="0.0337%" height="15" fill="rgb(230,222,46)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="815.50"></text></g><g><title>`0x7FFE41283A7D (1 samples, 0.03%)</title><rect x="99.6289%" y="789" width="0.0337%" height="15" fill="rgb(215,135,32)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="799.50"></text></g><g><title>`0x7FFE41316017 (1 samples, 0.03%)</title><rect x="99.6289%" y="773" width="0.0337%" height="15" fill="rgb(246,101,22)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="783.50"></text></g><g><title>`0x7FFE412E4B66 (1 samples, 0.03%)</title><rect x="99.6289%" y="757" width="0.0337%" height="15" fill="rgb(206,107,13)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="767.50"></text></g><g><title>`0x7FFE43980F6B (1 samples, 0.03%)</title><rect x="99.6289%" y="741" width="0.0337%" height="15" fill="rgb(250,100,44)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="751.50"></text></g><g><title>`0x7FFE439810D4 (1 samples, 0.03%)</title><rect x="99.6289%" y="725" width="0.0337%" height="15" fill="rgb(231,147,38)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="735.50"></text></g><g><title>`0x7FFE439812EC (1 samples, 0.03%)</title><rect x="99.6289%" y="709" width="0.0337%" height="15" fill="rgb(229,8,40)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="719.50"></text></g><g><title>`0x7FFE439B2E44 (1 samples, 0.03%)</title><rect x="99.6289%" y="693" width="0.0337%" height="15" fill="rgb(221,135,30)" fg:x="2953" fg:w="1"/><text x="99.8789%" y="703.50"></text></g><g><title>`0x7FFE439EE843 (9 samples, 0.30%)</title><rect x="99.3927%" y="1077" width="0.3036%" height="15" fill="rgb(249,193,18)" fg:x="2946" fg:w="9"/><text x="99.6427%" y="1087.50"></text></g><g><title>`0x7FFE4393A71A (9 samples, 0.30%)</title><rect x="99.3927%" y="1061" width="0.3036%" height="15" fill="rgb(209,133,39)" fg:x="2946" fg:w="9"/><text x="99.6427%" y="1071.50"></text></g><g><title>`0x7FFE4392909C (9 samples, 0.30%)</title><rect x="99.3927%" y="1045" width="0.3036%" height="15" fill="rgb(232,100,14)" fg:x="2946" fg:w="9"/><text x="99.6427%" y="1055.50"></text></g><g><title>`0x7FFE43938E00 (4 samples, 0.13%)</title><rect x="99.5614%" y="1029" width="0.1350%" height="15" fill="rgb(224,185,1)" fg:x="2951" fg:w="4"/><text x="99.8114%" y="1039.50"></text></g><g><title>`0x7FFE4393DAED (4 samples, 0.13%)</title><rect x="99.5614%" y="1013" width="0.1350%" height="15" fill="rgb(223,139,8)" fg:x="2951" fg:w="4"/><text x="99.8114%" y="1023.50"></text></g><g><title>`0x7FFE4397D320 (4 samples, 0.13%)</title><rect x="99.5614%" y="997" width="0.1350%" height="15" fill="rgb(232,213,38)" fg:x="2951" fg:w="4"/><text x="99.8114%" y="1007.50"></text></g><g><title>`0x7FFE4397D2AE (4 samples, 0.13%)</title><rect x="99.5614%" y="981" width="0.1350%" height="15" fill="rgb(207,94,22)" fg:x="2951" fg:w="4"/><text x="99.8114%" y="991.50"></text></g><g><title>`0x7FFE4397D4FD (4 samples, 0.13%)</title><rect x="99.5614%" y="965" width="0.1350%" height="15" fill="rgb(219,183,54)" fg:x="2951" fg:w="4"/><text x="99.8114%" y="975.50"></text></g><g><title>`0x7FFE43938B5F (4 samples, 0.13%)</title><rect x="99.5614%" y="949" width="0.1350%" height="15" fill="rgb(216,185,54)" fg:x="2951" fg:w="4"/><text x="99.8114%" y="959.50"></text></g><g><title>`0x7FFE412420BB (1 samples, 0.03%)</title><rect x="99.6626%" y="933" width="0.0337%" height="15" fill="rgb(254,217,39)" fg:x="2954" fg:w="1"/><text x="99.9126%" y="943.50"></text></g><g><title>`0x7FFE412428EA (1 samples, 0.03%)</title><rect x="99.6626%" y="917" width="0.0337%" height="15" fill="rgb(240,178,23)" fg:x="2954" fg:w="1"/><text x="99.9126%" y="927.50"></text></g><g><title>`0x7FFE41277228 (1 samples, 0.03%)</title><rect x="99.6626%" y="901" width="0.0337%" height="15" fill="rgb(218,11,47)" fg:x="2954" fg:w="1"/><text x="99.9126%" y="911.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.03%)</title><rect x="99.6626%" y="885" width="0.0337%" height="15" fill="rgb(218,51,51)" fg:x="2954" fg:w="1"/><text x="99.9126%" y="895.50"></text></g><g><title>`0x7FFE4394268A (1 samples, 0.03%)</title><rect x="99.6626%" y="869" width="0.0337%" height="15" fill="rgb(238,126,27)" fg:x="2954" fg:w="1"/><text x="99.9126%" y="879.50"></text></g><g><title>`0x7FFE43942517 (1 samples, 0.03%)</title><rect x="99.6626%" y="853" width="0.0337%" height="15" fill="rgb(249,202,22)" fg:x="2954" fg:w="1"/><text x="99.9126%" y="863.50"></text></g><g><title>`0x7FFE439B3B24 (1 samples, 0.03%)</title><rect x="99.6626%" y="837" width="0.0337%" height="15" fill="rgb(254,195,49)" fg:x="2954" fg:w="1"/><text x="99.9126%" y="847.50"></text></g><g><title>`0x7FFE439EE8ED (1 samples, 0.03%)</title><rect x="99.6964%" y="1077" width="0.0337%" height="15" fill="rgb(208,123,14)" fg:x="2955" fg:w="1"/><text x="99.9464%" y="1087.50"></text></g><g><title>`0x7FFE43928912 (1 samples, 0.03%)</title><rect x="99.6964%" y="1061" width="0.0337%" height="15" fill="rgb(224,200,8)" fg:x="2955" fg:w="1"/><text x="99.9464%" y="1071.50"></text></g><g><title>`0x7FFE43934F42 (1 samples, 0.03%)</title><rect x="99.6964%" y="1045" width="0.0337%" height="15" fill="rgb(217,61,36)" fg:x="2955" fg:w="1"/><text x="99.9464%" y="1055.50"></text></g><g><title>`0x7FFE439EEB0D (1 samples, 0.03%)</title><rect x="99.7301%" y="1077" width="0.0337%" height="15" fill="rgb(206,35,45)" fg:x="2956" fg:w="1"/><text x="99.9801%" y="1087.50"></text></g><g><title>`0x7FFE4395B5CD (1 samples, 0.03%)</title><rect x="99.7301%" y="1061" width="0.0337%" height="15" fill="rgb(217,65,33)" fg:x="2956" fg:w="1"/><text x="99.9801%" y="1071.50"></text></g><g><title>`0x7FFE4395C2DB (1 samples, 0.03%)</title><rect x="99.7301%" y="1045" width="0.0337%" height="15" fill="rgb(222,158,48)" fg:x="2956" fg:w="1"/><text x="99.9801%" y="1055.50"></text></g><g><title>`0x7FFE4395D005 (1 samples, 0.03%)</title><rect x="99.7301%" y="1029" width="0.0337%" height="15" fill="rgb(254,2,54)" fg:x="2956" fg:w="1"/><text x="99.9801%" y="1039.50"></text></g><g><title>`0x7FFE4395D0AE (1 samples, 0.03%)</title><rect x="99.7301%" y="1013" width="0.0337%" height="15" fill="rgb(250,143,38)" fg:x="2956" fg:w="1"/><text x="99.9801%" y="1023.50"></text></g><g><title>`0x7FFE439B1AC4 (1 samples, 0.03%)</title><rect x="99.7301%" y="997" width="0.0337%" height="15" fill="rgb(248,25,0)" fg:x="2956" fg:w="1"/><text x="99.9801%" y="1007.50"></text></g><g><title>`0x7FFE43935A04 (1 samples, 0.03%)</title><rect x="99.7638%" y="949" width="0.0337%" height="15" fill="rgb(206,152,27)" fg:x="2957" fg:w="1"/><text x="100.0138%" y="959.50"></text></g><g><title>`0x7FFE43934B7B (2 samples, 0.07%)</title><rect x="99.7638%" y="981" width="0.0675%" height="15" fill="rgb(240,77,30)" fg:x="2957" fg:w="2"/><text x="100.0138%" y="991.50"></text></g><g><title>`0x7FFE43934DC6 (2 samples, 0.07%)</title><rect x="99.7638%" y="965" width="0.0675%" height="15" fill="rgb(231,5,3)" fg:x="2957" fg:w="2"/><text x="100.0138%" y="975.50"></text></g><g><title>`0x7FFE43935D84 (1 samples, 0.03%)</title><rect x="99.7976%" y="949" width="0.0337%" height="15" fill="rgb(207,226,32)" fg:x="2958" fg:w="1"/><text x="100.0476%" y="959.50"></text></g><g><title>`0x7FFE4393D2E9 (1 samples, 0.03%)</title><rect x="99.7976%" y="933" width="0.0337%" height="15" fill="rgb(222,207,47)" fg:x="2958" fg:w="1"/><text x="100.0476%" y="943.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.03%)</title><rect x="99.7976%" y="917" width="0.0337%" height="15" fill="rgb(229,115,45)" fg:x="2958" fg:w="1"/><text x="100.0476%" y="927.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.03%)</title><rect x="99.7976%" y="901" width="0.0337%" height="15" fill="rgb(224,191,6)" fg:x="2958" fg:w="1"/><text x="100.0476%" y="911.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.03%)</title><rect x="99.7976%" y="885" width="0.0337%" height="15" fill="rgb(230,227,24)" fg:x="2958" fg:w="1"/><text x="100.0476%" y="895.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.03%)</title><rect x="99.7976%" y="869" width="0.0337%" height="15" fill="rgb(228,80,19)" fg:x="2958" fg:w="1"/><text x="100.0476%" y="879.50"></text></g><g><title>`0x7FFE439EEB73 (3 samples, 0.10%)</title><rect x="99.7638%" y="1077" width="0.1012%" height="15" fill="rgb(247,229,0)" fg:x="2957" fg:w="3"/><text x="100.0138%" y="1087.50"></text></g><g><title>`0x7FFE43934B7B (3 samples, 0.10%)</title><rect x="99.7638%" y="1061" width="0.1012%" height="15" fill="rgb(237,194,15)" fg:x="2957" fg:w="3"/><text x="100.0138%" y="1071.50"></text></g><g><title>`0x7FFE43934DC6 (3 samples, 0.10%)</title><rect x="99.7638%" y="1045" width="0.1012%" height="15" fill="rgb(219,203,20)" fg:x="2957" fg:w="3"/><text x="100.0138%" y="1055.50"></text></g><g><title>`0x7FFE43935D84 (3 samples, 0.10%)</title><rect x="99.7638%" y="1029" width="0.1012%" height="15" fill="rgb(234,128,8)" fg:x="2957" fg:w="3"/><text x="100.0138%" y="1039.50"></text></g><g><title>`0x7FFE4393D2E9 (3 samples, 0.10%)</title><rect x="99.7638%" y="1013" width="0.1012%" height="15" fill="rgb(248,202,8)" fg:x="2957" fg:w="3"/><text x="100.0138%" y="1023.50"></text></g><g><title>`0x7FFE4393C8B8 (3 samples, 0.10%)</title><rect x="99.7638%" y="997" width="0.1012%" height="15" fill="rgb(206,104,37)" fg:x="2957" fg:w="3"/><text x="100.0138%" y="1007.50"></text></g><g><title>`0x7FFE43934C09 (1 samples, 0.03%)</title><rect x="99.8313%" y="981" width="0.0337%" height="15" fill="rgb(223,8,27)" fg:x="2959" fg:w="1"/><text x="100.0813%" y="991.50"></text></g><g><title>`0x7FFE439833DF (1 samples, 0.03%)</title><rect x="99.8313%" y="965" width="0.0337%" height="15" fill="rgb(216,217,28)" fg:x="2959" fg:w="1"/><text x="100.0813%" y="975.50"></text></g><g><title>`0x7FFE43945204 (1 samples, 0.03%)</title><rect x="99.8313%" y="949" width="0.0337%" height="15" fill="rgb(249,199,1)" fg:x="2959" fg:w="1"/><text x="100.0813%" y="959.50"></text></g><g><title>`0x7FFE439453A6 (1 samples, 0.03%)</title><rect x="99.8313%" y="933" width="0.0337%" height="15" fill="rgb(240,85,17)" fg:x="2959" fg:w="1"/><text x="100.0813%" y="943.50"></text></g><g><title>`0x7FFE439B3044 (1 samples, 0.03%)</title><rect x="99.8313%" y="917" width="0.0337%" height="15" fill="rgb(206,108,45)" fg:x="2959" fg:w="1"/><text x="100.0813%" y="927.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.03%)</title><rect x="99.8650%" y="1045" width="0.0337%" height="15" fill="rgb(245,210,41)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="1055.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.03%)</title><rect x="99.8650%" y="1029" width="0.0337%" height="15" fill="rgb(206,13,37)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="1039.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.03%)</title><rect x="99.8650%" y="1013" width="0.0337%" height="15" fill="rgb(250,61,18)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="1023.50"></text></g><g><title>`0x7FFE415F0B2A (1 samples, 0.03%)</title><rect x="99.8650%" y="997" width="0.0337%" height="15" fill="rgb(235,172,48)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="1007.50"></text></g><g><title>`0x7FFE415E1540 (1 samples, 0.03%)</title><rect x="99.8650%" y="981" width="0.0337%" height="15" fill="rgb(249,201,17)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="991.50"></text></g><g><title>`0x7FFE415FA53D (1 samples, 0.03%)</title><rect x="99.8650%" y="965" width="0.0337%" height="15" fill="rgb(219,208,6)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="975.50"></text></g><g><title>`0x7FFE4122FA19 (1 samples, 0.03%)</title><rect x="99.8650%" y="949" width="0.0337%" height="15" fill="rgb(248,31,23)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="959.50"></text></g><g><title>`0x7FFE4122FB00 (1 samples, 0.03%)</title><rect x="99.8650%" y="933" width="0.0337%" height="15" fill="rgb(245,15,42)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="943.50"></text></g><g><title>`0x7FFE41230268 (1 samples, 0.03%)</title><rect x="99.8650%" y="917" width="0.0337%" height="15" fill="rgb(222,217,39)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="927.50"></text></g><g><title>`0x7FFE4122EB00 (1 samples, 0.03%)</title><rect x="99.8650%" y="901" width="0.0337%" height="15" fill="rgb(210,219,27)" fg:x="2960" fg:w="1"/><text x="100.1150%" y="911.50"></text></g><g><title>`0x7FFE4101516D (1 samples, 0.03%)</title><rect x="99.8988%" y="949" width="0.0337%" height="15" fill="rgb(252,166,36)" fg:x="2961" fg:w="1"/><text x="100.1488%" y="959.50"></text></g><g><title>`0x7FFE40FF3BEA (1 samples, 0.03%)</title><rect x="99.8988%" y="933" width="0.0337%" height="15" fill="rgb(245,132,34)" fg:x="2961" fg:w="1"/><text x="100.1488%" y="943.50"></text></g><g><title>`0x7FFE410033AE (1 samples, 0.03%)</title><rect x="99.8988%" y="917" width="0.0337%" height="15" fill="rgb(236,54,3)" fg:x="2961" fg:w="1"/><text x="100.1488%" y="927.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.03%)</title><rect x="99.8988%" y="901" width="0.0337%" height="15" fill="rgb(241,173,43)" fg:x="2961" fg:w="1"/><text x="100.1488%" y="911.50"></text></g><g><title>`0x7FFE4394F936 (1 samples, 0.03%)</title><rect x="99.8988%" y="885" width="0.0337%" height="15" fill="rgb(215,190,9)" fg:x="2961" fg:w="1"/><text x="100.1488%" y="895.50"></text></g><g><title>`0x7FFE439B6FE4 (1 samples, 0.03%)</title><rect x="99.8988%" y="869" width="0.0337%" height="15" fill="rgb(242,101,16)" fg:x="2961" fg:w="1"/><text x="100.1488%" y="879.50"></text></g><g><title>`0x7FFE439843A3 (21 samples, 0.71%)</title><rect x="99.2578%" y="1109" width="0.7085%" height="15" fill="rgb(223,190,21)" fg:x="2942" fg:w="21"/><text x="99.5078%" y="1119.50"></text></g><g><title>`0x7FFE439DA99A (21 samples, 0.71%)</title><rect x="99.2578%" y="1093" width="0.7085%" height="15" fill="rgb(215,228,25)" fg:x="2942" fg:w="21"/><text x="99.5078%" y="1103.50"></text></g><g><title>`0x7FFE439EECF9 (3 samples, 0.10%)</title><rect x="99.8650%" y="1077" width="0.1012%" height="15" fill="rgb(225,36,22)" fg:x="2960" fg:w="3"/><text x="100.1150%" y="1087.50"></text></g><g><title>`0x7FFE4397D320 (3 samples, 0.10%)</title><rect x="99.8650%" y="1061" width="0.1012%" height="15" fill="rgb(251,106,46)" fg:x="2960" fg:w="3"/><text x="100.1150%" y="1071.50"></text></g><g><title>`0x7FFE4397D320 (2 samples, 0.07%)</title><rect x="99.8988%" y="1045" width="0.0675%" height="15" fill="rgb(208,90,1)" fg:x="2961" fg:w="2"/><text x="100.1488%" y="1055.50"></text></g><g><title>`0x7FFE4397D2AE (2 samples, 0.07%)</title><rect x="99.8988%" y="1029" width="0.0675%" height="15" fill="rgb(243,10,4)" fg:x="2961" fg:w="2"/><text x="100.1488%" y="1039.50"></text></g><g><title>`0x7FFE4397D4FD (2 samples, 0.07%)</title><rect x="99.8988%" y="1013" width="0.0675%" height="15" fill="rgb(212,137,27)" fg:x="2961" fg:w="2"/><text x="100.1488%" y="1023.50"></text></g><g><title>`0x7FFE43938B5F (2 samples, 0.07%)</title><rect x="99.8988%" y="997" width="0.0675%" height="15" fill="rgb(231,220,49)" fg:x="2961" fg:w="2"/><text x="100.1488%" y="1007.50"></text></g><g><title>`0x7FFE410076B3 (2 samples, 0.07%)</title><rect x="99.8988%" y="981" width="0.0675%" height="15" fill="rgb(237,96,20)" fg:x="2961" fg:w="2"/><text x="100.1488%" y="991.50"></text></g><g><title>`0x7FFE41007FCA (2 samples, 0.07%)</title><rect x="99.8988%" y="965" width="0.0675%" height="15" fill="rgb(239,229,30)" fg:x="2961" fg:w="2"/><text x="100.1488%" y="975.50"></text></g><g><title>`0x7FFE410181D0 (1 samples, 0.03%)</title><rect x="99.9325%" y="949" width="0.0337%" height="15" fill="rgb(219,65,33)" fg:x="2962" fg:w="1"/><text x="100.1825%" y="959.50"></text></g><g><title>all (2,964 samples, 100%)</title><rect x="0.0000%" y="1141" width="100.0000%" height="15" fill="rgb(243,134,7)" fg:x="0" fg:w="2964"/><text x="0.2500%" y="1151.50"></text></g><g><title>`0x7FFE439842CE (22 samples, 0.74%)</title><rect x="99.2578%" y="1125" width="0.7422%" height="15" fill="rgb(216,177,54)" fg:x="2942" fg:w="22"/><text x="99.5078%" y="1135.50"></text></g><g><title>`0x7FFE439BE133 (1 samples, 0.03%)</title><rect x="99.9663%" y="1109" width="0.0337%" height="15" fill="rgb(211,160,20)" fg:x="2963" fg:w="1"/><text x="100.2163%" y="1119.50"></text></g><g><title>`0x7FFE439BE8AD (1 samples, 0.03%)</title><rect x="99.9663%" y="1093" width="0.0337%" height="15" fill="rgb(239,85,39)" fg:x="2963" fg:w="1"/><text x="100.2163%" y="1103.50"></text></g><g><title>`0x7FFE4393B572 (1 samples, 0.03%)</title><rect x="99.9663%" y="1077" width="0.0337%" height="15" fill="rgb(232,125,22)" fg:x="2963" fg:w="1"/><text x="100.2163%" y="1087.50"></text></g><g><title>`0x7FFE4393C087 (1 samples, 0.03%)</title><rect x="99.9663%" y="1061" width="0.0337%" height="15" fill="rgb(244,57,34)" fg:x="2963" fg:w="1"/><text x="100.2163%" y="1071.50"></text></g></svg></svg>