<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="2465"><g><title>`0x7FFE4396AEE0 (6 samples, 0.24%)</title><rect x="0.0000%" y="917" width="0.2434%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="927.50"></text></g><g><title>`0x7FFE4394583E (1 samples, 0.04%)</title><rect x="0.2434%" y="885" width="0.0406%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="1"/><text x="0.4934%" y="895.50"></text></g><g><title>`0x7FFE439B3D24 (1 samples, 0.04%)</title><rect x="0.2434%" y="869" width="0.0406%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="1"/><text x="0.4934%" y="879.50"></text></g><g><title>`0x7FFE43934117 (1 samples, 0.04%)</title><rect x="0.2840%" y="821" width="0.0406%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="1"/><text x="0.5340%" y="831.50"></text></g><g><title>`0x7FFE43934126 (2 samples, 0.08%)</title><rect x="0.3245%" y="821" width="0.0811%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="2"/><text x="0.5745%" y="831.50"></text></g><g><title>`0x7FFE4392127B (4 samples, 0.16%)</title><rect x="0.2840%" y="837" width="0.1623%" height="15" fill="rgb(232,128,0)" fg:x="7" fg:w="4"/><text x="0.5340%" y="847.50"></text></g><g><title>`0x7FFE43934706 (1 samples, 0.04%)</title><rect x="0.4057%" y="821" width="0.0406%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="1"/><text x="0.6557%" y="831.50"></text></g><g><title>`0x7FFE439144C4 (1 samples, 0.04%)</title><rect x="0.4057%" y="805" width="0.0406%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="1"/><text x="0.6557%" y="815.50"></text></g><g><title>`0x7FFE43914629 (1 samples, 0.04%)</title><rect x="0.4057%" y="789" width="0.0406%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="1"/><text x="0.6557%" y="799.50"></text></g><g><title>`0x7FFE43914AD6 (1 samples, 0.04%)</title><rect x="0.4057%" y="773" width="0.0406%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="1"/><text x="0.6557%" y="783.50"></text></g><g><title>`0x7FFE43920EEE (1 samples, 0.04%)</title><rect x="0.4462%" y="821" width="0.0406%" height="15" fill="rgb(250,228,42)" fg:x="11" fg:w="1"/><text x="0.6962%" y="831.50"></text></g><g><title>`0x7FFE4393DEFC (1 samples, 0.04%)</title><rect x="0.4462%" y="805" width="0.0406%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="1"/><text x="0.6962%" y="815.50"></text></g><g><title>`0x7FFE43945E46 (6 samples, 0.24%)</title><rect x="0.2840%" y="885" width="0.2434%" height="15" fill="rgb(216,20,37)" fg:x="7" fg:w="6"/><text x="0.5340%" y="895.50"></text></g><g><title>`0x7FFE4397287A (6 samples, 0.24%)</title><rect x="0.2840%" y="869" width="0.2434%" height="15" fill="rgb(206,188,39)" fg:x="7" fg:w="6"/><text x="0.5340%" y="879.50"></text></g><g><title>`0x7FFE439211BB (6 samples, 0.24%)</title><rect x="0.2840%" y="853" width="0.2434%" height="15" fill="rgb(217,207,13)" fg:x="7" fg:w="6"/><text x="0.5340%" y="863.50"></text></g><g><title>`0x7FFE43921380 (2 samples, 0.08%)</title><rect x="0.4462%" y="837" width="0.0811%" height="15" fill="rgb(231,73,38)" fg:x="11" fg:w="2"/><text x="0.6962%" y="847.50"></text></g><g><title>`0x7FFE43920FB8 (1 samples, 0.04%)</title><rect x="0.4868%" y="821" width="0.0406%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="1"/><text x="0.7368%" y="831.50"></text></g><g><title>`0x7FFE43920AA6 (1 samples, 0.04%)</title><rect x="0.4868%" y="805" width="0.0406%" height="15" fill="rgb(210,31,41)" fg:x="12" fg:w="1"/><text x="0.7368%" y="815.50"></text></g><g><title>`0x7FFE439B0A14 (1 samples, 0.04%)</title><rect x="0.4868%" y="789" width="0.0406%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="1"/><text x="0.7368%" y="799.50"></text></g><g><title>`0x7FFE41018F93 (1 samples, 0.04%)</title><rect x="0.5274%" y="837" width="0.0406%" height="15" fill="rgb(226,26,5)" fg:x="13" fg:w="1"/><text x="0.7774%" y="847.50"></text></g><g><title>`0x7FFE4127E8A5 (1 samples, 0.04%)</title><rect x="0.5274%" y="821" width="0.0406%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="1"/><text x="0.7774%" y="831.50"></text></g><g><title>`0x7FFE4127E8F8 (1 samples, 0.04%)</title><rect x="0.5274%" y="805" width="0.0406%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="1"/><text x="0.7774%" y="815.50"></text></g><g><title>`0x7FFE4127A7EE (1 samples, 0.04%)</title><rect x="0.5274%" y="789" width="0.0406%" height="15" fill="rgb(221,5,38)" fg:x="13" fg:w="1"/><text x="0.7774%" y="799.50"></text></g><g><title>`0x7FFE4397E3EC (1 samples, 0.04%)</title><rect x="0.5274%" y="773" width="0.0406%" height="15" fill="rgb(247,18,42)" fg:x="13" fg:w="1"/><text x="0.7774%" y="783.50"></text></g><g><title>`0x7FFE4397E4FB (1 samples, 0.04%)</title><rect x="0.5274%" y="757" width="0.0406%" height="15" fill="rgb(241,131,45)" fg:x="13" fg:w="1"/><text x="0.7774%" y="767.50"></text></g><g><title>`0x7FFE43921472 (1 samples, 0.04%)</title><rect x="0.5680%" y="725" width="0.0406%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="0.8180%" y="735.50"></text></g><g><title>`0x7FFE4393A8C7 (1 samples, 0.04%)</title><rect x="0.5680%" y="709" width="0.0406%" height="15" fill="rgb(225,111,53)" fg:x="14" fg:w="1"/><text x="0.8180%" y="719.50"></text></g><g><title>`0x7FFE4393B109 (1 samples, 0.04%)</title><rect x="0.5680%" y="693" width="0.0406%" height="15" fill="rgb(238,160,17)" fg:x="14" fg:w="1"/><text x="0.8180%" y="703.50"></text></g><g><title>`0x7FFE439B0874 (1 samples, 0.04%)</title><rect x="0.5680%" y="677" width="0.0406%" height="15" fill="rgb(214,148,48)" fg:x="14" fg:w="1"/><text x="0.8180%" y="687.50"></text></g><g><title>`0x7FFE43920A4C (1 samples, 0.04%)</title><rect x="0.6085%" y="709" width="0.0406%" height="15" fill="rgb(232,36,49)" fg:x="15" fg:w="1"/><text x="0.8585%" y="719.50"></text></g><g><title>`0x7FFE439B0734 (1 samples, 0.04%)</title><rect x="0.6085%" y="693" width="0.0406%" height="15" fill="rgb(209,103,24)" fg:x="15" fg:w="1"/><text x="0.8585%" y="703.50"></text></g><g><title>`0x7FFE4393B406 (1 samples, 0.04%)</title><rect x="0.6491%" y="677" width="0.0406%" height="15" fill="rgb(229,88,8)" fg:x="16" fg:w="1"/><text x="0.8991%" y="687.50"></text></g><g><title>`0x7FFE4393B663 (1 samples, 0.04%)</title><rect x="0.6491%" y="661" width="0.0406%" height="15" fill="rgb(213,181,19)" fg:x="16" fg:w="1"/><text x="0.8991%" y="671.50"></text></g><g><title>`0x7FFE4393C859 (2 samples, 0.08%)</title><rect x="0.6491%" y="693" width="0.0811%" height="15" fill="rgb(254,191,54)" fg:x="16" fg:w="2"/><text x="0.8991%" y="703.50"></text></g><g><title>`0x7FFE4393B445 (1 samples, 0.04%)</title><rect x="0.6897%" y="677" width="0.0406%" height="15" fill="rgb(241,83,37)" fg:x="17" fg:w="1"/><text x="0.9397%" y="687.50"></text></g><g><title>`0x7FFE4393B975 (1 samples, 0.04%)</title><rect x="0.6897%" y="661" width="0.0406%" height="15" fill="rgb(233,36,39)" fg:x="17" fg:w="1"/><text x="0.9397%" y="671.50"></text></g><g><title>`0x7FFE4393D971 (1 samples, 0.04%)</title><rect x="0.6897%" y="645" width="0.0406%" height="15" fill="rgb(226,3,54)" fg:x="17" fg:w="1"/><text x="0.9397%" y="655.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.04%)</title><rect x="0.7302%" y="677" width="0.0406%" height="15" fill="rgb(245,192,40)" fg:x="18" fg:w="1"/><text x="0.9802%" y="687.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.04%)</title><rect x="0.7302%" y="661" width="0.0406%" height="15" fill="rgb(238,167,29)" fg:x="18" fg:w="1"/><text x="0.9802%" y="671.50"></text></g><g><title>`0x7FFE43935D84 (1 samples, 0.04%)</title><rect x="0.7302%" y="645" width="0.0406%" height="15" fill="rgb(232,182,51)" fg:x="18" fg:w="1"/><text x="0.9802%" y="655.50"></text></g><g><title>`0x7FFE4393D2E9 (1 samples, 0.04%)</title><rect x="0.7302%" y="629" width="0.0406%" height="15" fill="rgb(231,60,39)" fg:x="18" fg:w="1"/><text x="0.9802%" y="639.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.04%)</title><rect x="0.7302%" y="613" width="0.0406%" height="15" fill="rgb(208,69,12)" fg:x="18" fg:w="1"/><text x="0.9802%" y="623.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.04%)</title><rect x="0.7302%" y="597" width="0.0406%" height="15" fill="rgb(235,93,37)" fg:x="18" fg:w="1"/><text x="0.9802%" y="607.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.04%)</title><rect x="0.7302%" y="581" width="0.0406%" height="15" fill="rgb(213,116,39)" fg:x="18" fg:w="1"/><text x="0.9802%" y="591.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.04%)</title><rect x="0.7302%" y="565" width="0.0406%" height="15" fill="rgb(222,207,29)" fg:x="18" fg:w="1"/><text x="0.9802%" y="575.50"></text></g><g><title>`0x7FFE43934126 (1 samples, 0.04%)</title><rect x="0.7708%" y="661" width="0.0406%" height="15" fill="rgb(206,96,30)" fg:x="19" fg:w="1"/><text x="1.0208%" y="671.50"></text></g><g><title>`0x7FFE43920AFF (5 samples, 0.20%)</title><rect x="0.6491%" y="709" width="0.2028%" height="15" fill="rgb(218,138,4)" fg:x="16" fg:w="5"/><text x="0.8991%" y="719.50"></text></g><g><title>`0x7FFE4393C8B8 (3 samples, 0.12%)</title><rect x="0.7302%" y="693" width="0.1217%" height="15" fill="rgb(250,191,14)" fg:x="18" fg:w="3"/><text x="0.9802%" y="703.50"></text></g><g><title>`0x7FFE43934C34 (2 samples, 0.08%)</title><rect x="0.7708%" y="677" width="0.0811%" height="15" fill="rgb(239,60,40)" fg:x="19" fg:w="2"/><text x="1.0208%" y="687.50"></text></g><g><title>`0x7FFE4393419B (1 samples, 0.04%)</title><rect x="0.8114%" y="661" width="0.0406%" height="15" fill="rgb(206,27,48)" fg:x="20" fg:w="1"/><text x="1.0614%" y="671.50"></text></g><g><title>`0x7FFE43938D94 (8 samples, 0.32%)</title><rect x="0.5680%" y="757" width="0.3245%" height="15" fill="rgb(225,35,8)" fg:x="14" fg:w="8"/><text x="0.8180%" y="767.50"></text></g><g><title>`0x7FFE439212AF (8 samples, 0.32%)</title><rect x="0.5680%" y="741" width="0.3245%" height="15" fill="rgb(250,213,24)" fg:x="14" fg:w="8"/><text x="0.8180%" y="751.50"></text></g><g><title>`0x7FFE439214E0 (7 samples, 0.28%)</title><rect x="0.6085%" y="725" width="0.2840%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="7"/><text x="0.8585%" y="735.50"></text></g><g><title>`0x7FFE43920B1D (1 samples, 0.04%)</title><rect x="0.8519%" y="709" width="0.0406%" height="15" fill="rgb(231,138,38)" fg:x="21" fg:w="1"/><text x="1.1019%" y="719.50"></text></g><g><title>`0x7FFE439B02B4 (1 samples, 0.04%)</title><rect x="0.8519%" y="693" width="0.0406%" height="15" fill="rgb(231,145,46)" fg:x="21" fg:w="1"/><text x="1.1019%" y="703.50"></text></g><g><title>`0x7FFE4100BEA8 (10 samples, 0.41%)</title><rect x="0.5274%" y="853" width="0.4057%" height="15" fill="rgb(251,118,11)" fg:x="13" fg:w="10"/><text x="0.7774%" y="863.50"></text></g><g><title>`0x7FFE41018FB1 (9 samples, 0.37%)</title><rect x="0.5680%" y="837" width="0.3651%" height="15" fill="rgb(217,147,25)" fg:x="14" fg:w="9"/><text x="0.8180%" y="847.50"></text></g><g><title>`0x7FFE41011C03 (9 samples, 0.37%)</title><rect x="0.5680%" y="821" width="0.3651%" height="15" fill="rgb(247,81,37)" fg:x="14" fg:w="9"/><text x="0.8180%" y="831.50"></text></g><g><title>`0x7FFE4122B662 (9 samples, 0.37%)</title><rect x="0.5680%" y="805" width="0.3651%" height="15" fill="rgb(209,12,38)" fg:x="14" fg:w="9"/><text x="0.8180%" y="815.50"></text></g><g><title>`0x7FFE4393A71A (9 samples, 0.37%)</title><rect x="0.5680%" y="789" width="0.3651%" height="15" fill="rgb(227,1,9)" fg:x="14" fg:w="9"/><text x="0.8180%" y="799.50"></text></g><g><title>`0x7FFE4392909C (9 samples, 0.37%)</title><rect x="0.5680%" y="773" width="0.3651%" height="15" fill="rgb(248,47,43)" fg:x="14" fg:w="9"/><text x="0.8180%" y="783.50"></text></g><g><title>`0x7FFE43938E00 (1 samples, 0.04%)</title><rect x="0.8925%" y="757" width="0.0406%" height="15" fill="rgb(221,10,30)" fg:x="22" fg:w="1"/><text x="1.1425%" y="767.50"></text></g><g><title>`0x7FFE4393DAED (1 samples, 0.04%)</title><rect x="0.8925%" y="741" width="0.0406%" height="15" fill="rgb(210,229,1)" fg:x="22" fg:w="1"/><text x="1.1425%" y="751.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.04%)</title><rect x="0.8925%" y="725" width="0.0406%" height="15" fill="rgb(222,148,37)" fg:x="22" fg:w="1"/><text x="1.1425%" y="735.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.04%)</title><rect x="0.8925%" y="709" width="0.0406%" height="15" fill="rgb(234,67,33)" fg:x="22" fg:w="1"/><text x="1.1425%" y="719.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.04%)</title><rect x="0.8925%" y="693" width="0.0406%" height="15" fill="rgb(247,98,35)" fg:x="22" fg:w="1"/><text x="1.1425%" y="703.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.04%)</title><rect x="0.8925%" y="677" width="0.0406%" height="15" fill="rgb(247,138,52)" fg:x="22" fg:w="1"/><text x="1.1425%" y="687.50"></text></g><g><title>`0x7FFE42CD7C2F (1 samples, 0.04%)</title><rect x="0.8925%" y="661" width="0.0406%" height="15" fill="rgb(213,79,30)" fg:x="22" fg:w="1"/><text x="1.1425%" y="671.50"></text></g><g><title>`0x7FFE42CF39A2 (1 samples, 0.04%)</title><rect x="0.8925%" y="645" width="0.0406%" height="15" fill="rgb(246,177,23)" fg:x="22" fg:w="1"/><text x="1.1425%" y="655.50"></text></g><g><title>`0x7FFE42CF3B20 (1 samples, 0.04%)</title><rect x="0.8925%" y="629" width="0.0406%" height="15" fill="rgb(230,62,27)" fg:x="22" fg:w="1"/><text x="1.1425%" y="639.50"></text></g><g><title>`0x7FFE42CECD6B (1 samples, 0.04%)</title><rect x="0.8925%" y="613" width="0.0406%" height="15" fill="rgb(216,154,8)" fg:x="22" fg:w="1"/><text x="1.1425%" y="623.50"></text></g><g><title>`0x7FFE42CECB80 (1 samples, 0.04%)</title><rect x="0.8925%" y="597" width="0.0406%" height="15" fill="rgb(244,35,45)" fg:x="22" fg:w="1"/><text x="1.1425%" y="607.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.04%)</title><rect x="0.8925%" y="581" width="0.0406%" height="15" fill="rgb(251,115,12)" fg:x="22" fg:w="1"/><text x="1.1425%" y="591.50"></text></g><g><title>`0x7FFE4394FEF8 (1 samples, 0.04%)</title><rect x="0.8925%" y="565" width="0.0406%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="1"/><text x="1.1425%" y="575.50"></text></g><g><title>`0x7FFE4395A49B (1 samples, 0.04%)</title><rect x="0.8925%" y="549" width="0.0406%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="1"/><text x="1.1425%" y="559.50"></text></g><g><title>`0x7FFE439599B8 (1 samples, 0.04%)</title><rect x="0.8925%" y="533" width="0.0406%" height="15" fill="rgb(207,117,47)" fg:x="22" fg:w="1"/><text x="1.1425%" y="543.50"></text></g><g><title>`0x7FFE4395A5D6 (1 samples, 0.04%)</title><rect x="0.8925%" y="517" width="0.0406%" height="15" fill="rgb(249,43,39)" fg:x="22" fg:w="1"/><text x="1.1425%" y="527.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.04%)</title><rect x="0.8925%" y="501" width="0.0406%" height="15" fill="rgb(209,38,44)" fg:x="22" fg:w="1"/><text x="1.1425%" y="511.50"></text></g><g><title>`0x7FFE4394FBF8 (1 samples, 0.04%)</title><rect x="0.8925%" y="485" width="0.0406%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="1"/><text x="1.1425%" y="495.50"></text></g><g><title>`0x7FFE43955C9B (1 samples, 0.04%)</title><rect x="0.8925%" y="469" width="0.0406%" height="15" fill="rgb(242,79,21)" fg:x="22" fg:w="1"/><text x="1.1425%" y="479.50"></text></g><g><title>`0x7FFE439560E5 (1 samples, 0.04%)</title><rect x="0.8925%" y="453" width="0.0406%" height="15" fill="rgb(211,96,35)" fg:x="22" fg:w="1"/><text x="1.1425%" y="463.50"></text></g><g><title>`0x7FFE43956235 (1 samples, 0.04%)</title><rect x="0.8925%" y="437" width="0.0406%" height="15" fill="rgb(253,215,40)" fg:x="22" fg:w="1"/><text x="1.1425%" y="447.50"></text></g><g><title>`0x7FFE4100C099 (11 samples, 0.45%)</title><rect x="0.5274%" y="869" width="0.4462%" height="15" fill="rgb(211,81,21)" fg:x="13" fg:w="11"/><text x="0.7774%" y="879.50"></text></g><g><title>`0x7FFE4100BED8 (1 samples, 0.04%)</title><rect x="0.9331%" y="853" width="0.0406%" height="15" fill="rgb(208,190,38)" fg:x="23" fg:w="1"/><text x="1.1831%" y="863.50"></text></g><g><title>`0x7FFE42BA7FAB (1 samples, 0.04%)</title><rect x="0.9331%" y="837" width="0.0406%" height="15" fill="rgb(235,213,38)" fg:x="23" fg:w="1"/><text x="1.1831%" y="847.50"></text></g><g><title>`0x7FFE4396115D (1 samples, 0.04%)</title><rect x="0.9331%" y="821" width="0.0406%" height="15" fill="rgb(237,122,38)" fg:x="23" fg:w="1"/><text x="1.1831%" y="831.50"></text></g><g><title>`0x7FFE43961566 (1 samples, 0.04%)</title><rect x="0.9331%" y="805" width="0.0406%" height="15" fill="rgb(244,218,35)" fg:x="23" fg:w="1"/><text x="1.1831%" y="815.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.04%)</title><rect x="0.9331%" y="789" width="0.0406%" height="15" fill="rgb(240,68,47)" fg:x="23" fg:w="1"/><text x="1.1831%" y="799.50"></text></g><g><title>`0x7FFE41242101 (1 samples, 0.04%)</title><rect x="0.9331%" y="773" width="0.0406%" height="15" fill="rgb(210,16,53)" fg:x="23" fg:w="1"/><text x="1.1831%" y="783.50"></text></g><g><title>`0x7FFE41242C5E (1 samples, 0.04%)</title><rect x="0.9331%" y="757" width="0.0406%" height="15" fill="rgb(235,124,12)" fg:x="23" fg:w="1"/><text x="1.1831%" y="767.50"></text></g><g><title>`0x7FFE4128022E (1 samples, 0.04%)</title><rect x="0.9331%" y="741" width="0.0406%" height="15" fill="rgb(224,169,11)" fg:x="23" fg:w="1"/><text x="1.1831%" y="751.50"></text></g><g><title>`0x7FFE41280264 (1 samples, 0.04%)</title><rect x="0.9331%" y="725" width="0.0406%" height="15" fill="rgb(250,166,2)" fg:x="23" fg:w="1"/><text x="1.1831%" y="735.50"></text></g><g><title>`0x7FFE41273096 (1 samples, 0.04%)</title><rect x="0.9331%" y="709" width="0.0406%" height="15" fill="rgb(242,216,29)" fg:x="23" fg:w="1"/><text x="1.1831%" y="719.50"></text></g><g><title>`0x7FFE412731D8 (1 samples, 0.04%)</title><rect x="0.9331%" y="693" width="0.0406%" height="15" fill="rgb(230,116,27)" fg:x="23" fg:w="1"/><text x="1.1831%" y="703.50"></text></g><g><title>`0x7FFE41273264 (1 samples, 0.04%)</title><rect x="0.9331%" y="677" width="0.0406%" height="15" fill="rgb(228,99,48)" fg:x="23" fg:w="1"/><text x="1.1831%" y="687.50"></text></g><g><title>`0x7FFE412433DF (1 samples, 0.04%)</title><rect x="0.9331%" y="661" width="0.0406%" height="15" fill="rgb(253,11,6)" fg:x="23" fg:w="1"/><text x="1.1831%" y="671.50"></text></g><g><title>`0x7FFE412434AC (1 samples, 0.04%)</title><rect x="0.9331%" y="645" width="0.0406%" height="15" fill="rgb(247,143,39)" fg:x="23" fg:w="1"/><text x="1.1831%" y="655.50"></text></g><g><title>`0x7FFE412434F7 (1 samples, 0.04%)</title><rect x="0.9331%" y="629" width="0.0406%" height="15" fill="rgb(236,97,10)" fg:x="23" fg:w="1"/><text x="1.1831%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches (1 samples, 0.04%)</title><rect x="0.9736%" y="773" width="0.0406%" height="15" fill="rgb(233,208,19)" fg:x="24" fg:w="1"/><text x="1.2236%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches_from (1 samples, 0.04%)</title><rect x="0.9736%" y="757" width="0.0406%" height="15" fill="rgb(216,164,2)" fg:x="24" fg:w="1"/><text x="1.2236%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.04%)</title><rect x="0.9736%" y="741" width="0.0406%" height="15" fill="rgb(220,129,5)" fg:x="24" fg:w="1"/><text x="1.2236%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_lex::RawArgs::new (1 samples, 0.04%)</title><rect x="0.9736%" y="725" width="0.0406%" height="15" fill="rgb(242,17,10)" fg:x="24" fg:w="1"/><text x="1.2236%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_lex::impl$1::from (1 samples, 0.04%)</title><rect x="0.9736%" y="709" width="0.0406%" height="15" fill="rgb(242,107,0)" fg:x="24" fg:w="1"/><text x="1.2236%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;std::env::ArgsOs,clap_lex::impl$1::from::closure_env$0 (1 samples, 0.04%)</title><rect x="0.9736%" y="693" width="0.0406%" height="15" fill="rgb(251,28,31)" fg:x="24" fg:w="1"/><text x="1.2236%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;std::env::ArgsOs,clap_lex::impl$1::from::closure_env$0 (1 samples, 0.04%)</title><rect x="0.9736%" y="677" width="0.0406%" height="15" fill="rgb(233,223,10)" fg:x="24" fg:w="1"/><text x="1.2236%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;std::env::ArgsOs,clap_lex::impl$1::from::closure_env$0 (1 samples, 0.04%)</title><rect x="0.9736%" y="661" width="0.0406%" height="15" fill="rgb(215,21,27)" fg:x="24" fg:w="1"/><text x="1.2236%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;std::env::ArgsOs,clap_lex::impl$1::from::closure_env$0 (1 samples, 0.04%)</title><rect x="0.9736%" y="645" width="0.0406%" height="15" fill="rgb(232,23,21)" fg:x="24" fg:w="1"/><text x="1.2236%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;::with_capacity (1 samples, 0.04%)</title><rect x="0.9736%" y="629" width="0.0406%" height="15" fill="rgb(244,5,23)" fg:x="24" fg:w="1"/><text x="1.2236%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="0.9736%" y="613" width="0.0406%" height="15" fill="rgb(226,81,46)" fg:x="24" fg:w="1"/><text x="1.2236%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="0.9736%" y="597" width="0.0406%" height="15" fill="rgb(247,70,30)" fg:x="24" fg:w="1"/><text x="1.2236%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="0.9736%" y="581" width="0.0406%" height="15" fill="rgb(212,68,19)" fg:x="24" fg:w="1"/><text x="1.2236%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (1 samples, 0.04%)</title><rect x="0.9736%" y="565" width="0.0406%" height="15" fill="rgb(240,187,13)" fg:x="24" fg:w="1"/><text x="1.2236%" y="575.50"></text></g><g><title>`0x7FFE4394CC7A (1 samples, 0.04%)</title><rect x="0.9736%" y="549" width="0.0406%" height="15" fill="rgb(223,113,26)" fg:x="24" fg:w="1"/><text x="1.2236%" y="559.50"></text></g><g><title>`0x7FFE4394D6A7 (1 samples, 0.04%)</title><rect x="0.9736%" y="533" width="0.0406%" height="15" fill="rgb(206,192,2)" fg:x="24" fg:w="1"/><text x="1.2236%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::final_summary (2 samples, 0.08%)</title><rect x="0.9736%" y="805" width="0.0811%" height="15" fill="rgb(241,108,4)" fg:x="24" fg:w="2"/><text x="1.2236%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (2 samples, 0.08%)</title><rect x="0.9736%" y="789" width="0.0811%" height="15" fill="rgb(247,173,49)" fg:x="24" fg:w="2"/><text x="1.2236%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;clap_builder::parser::matches::arg_matches::ArgMatches&gt; (1 samples, 0.04%)</title><rect x="1.0142%" y="773" width="0.0406%" height="15" fill="rgb(224,114,35)" fg:x="25" fg:w="1"/><text x="1.2642%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::boxed::Box (1 samples, 0.04%)</title><rect x="1.0142%" y="757" width="0.0406%" height="15" fill="rgb(245,159,27)" fg:x="25" fg:w="1"/><text x="1.2642%" y="767.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.04%)</title><rect x="1.0142%" y="741" width="0.0406%" height="15" fill="rgb(245,172,44)" fg:x="25" fg:w="1"/><text x="1.2642%" y="751.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.04%)</title><rect x="1.0142%" y="725" width="0.0406%" height="15" fill="rgb(236,23,11)" fg:x="25" fg:w="1"/><text x="1.2642%" y="735.50"></text></g><g><title>`0x7FFE43949BE8 (1 samples, 0.04%)</title><rect x="1.0142%" y="709" width="0.0406%" height="15" fill="rgb(205,117,38)" fg:x="25" fg:w="1"/><text x="1.2642%" y="719.50"></text></g><g><title>`0x7FFE43954FDB (1 samples, 0.04%)</title><rect x="1.0142%" y="693" width="0.0406%" height="15" fill="rgb(237,72,25)" fg:x="25" fg:w="1"/><text x="1.2642%" y="703.50"></text></g><g><title>`0x7FFE439568BA (1 samples, 0.04%)</title><rect x="1.0142%" y="677" width="0.0406%" height="15" fill="rgb(244,70,9)" fg:x="25" fg:w="1"/><text x="1.2642%" y="687.50"></text></g><g><title>`0x7FFE43956968 (1 samples, 0.04%)</title><rect x="1.0142%" y="661" width="0.0406%" height="15" fill="rgb(217,125,39)" fg:x="25" fg:w="1"/><text x="1.2642%" y="671.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.04%)</title><rect x="1.0142%" y="645" width="0.0406%" height="15" fill="rgb(235,36,10)" fg:x="25" fg:w="1"/><text x="1.2642%" y="655.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.04%)</title><rect x="1.0142%" y="629" width="0.0406%" height="15" fill="rgb(251,123,47)" fg:x="25" fg:w="1"/><text x="1.2642%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::impl$4::default (1 samples, 0.04%)</title><rect x="1.0548%" y="805" width="0.0406%" height="15" fill="rgb(221,13,13)" fg:x="26" fg:w="1"/><text x="1.3048%" y="815.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (1 samples, 0.04%)</title><rect x="1.0548%" y="789" width="0.0406%" height="15" fill="rgb(238,131,9)" fg:x="26" fg:w="1"/><text x="1.3048%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::html::Html::new(alloc::boxed::Box&lt;dyn$ (1 samples, 0.04%)</title><rect x="1.0548%" y="773" width="0.0406%" height="15" fill="rgb(211,50,8)" fg:x="26" fg:w="1"/><text x="1.3048%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;, ref$ (1 samples, 0.04%)</title><rect x="1.0548%" y="757" width="0.0406%" height="15" fill="rgb(245,182,24)" fg:x="26" fg:w="1"/><text x="1.3048%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::TinyTemplate::add_template(ref$&lt;str$&gt;, ref$ (1 samples, 0.04%)</title><rect x="1.0548%" y="741" width="0.0406%" height="15" fill="rgb(242,14,37)" fg:x="26" fg:w="1"/><text x="1.3048%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::template::Template::compile(ref$ (1 samples, 0.04%)</title><rect x="1.0548%" y="725" width="0.0406%" height="15" fill="rgb(246,228,12)" fg:x="26" fg:w="1"/><text x="1.3048%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::compile (1 samples, 0.04%)</title><rect x="1.0548%" y="709" width="0.0406%" height="15" fill="rgb(213,55,15)" fg:x="26" fg:w="1"/><text x="1.3048%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;enum2$&lt;tinytemplate::instruction::Instruction&gt;,alloc::alloc::Global&gt;::push(enum2$ (1 samples, 0.04%)</title><rect x="1.0548%" y="693" width="0.0406%" height="15" fill="rgb(209,9,3)" fg:x="26" fg:w="1"/><text x="1.3048%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;regex_syntax::hir::Hir,alloc::alloc::Global&gt;::grow_one&lt;regex_syntax::hir::Hir,alloc::alloc::Global&gt; (1 samples, 0.04%)</title><rect x="1.0548%" y="677" width="0.0406%" height="15" fill="rgb(230,59,30)" fg:x="26" fg:w="1"/><text x="1.3048%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (1 samples, 0.04%)</title><rect x="1.0548%" y="661" width="0.0406%" height="15" fill="rgb(209,121,21)" fg:x="26" fg:w="1"/><text x="1.3048%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="1.0548%" y="645" width="0.0406%" height="15" fill="rgb(220,109,13)" fg:x="26" fg:w="1"/><text x="1.3048%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.04%)</title><rect x="1.0548%" y="629" width="0.0406%" height="15" fill="rgb(232,18,1)" fg:x="26" fg:w="1"/><text x="1.3048%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.04%)</title><rect x="1.0548%" y="613" width="0.0406%" height="15" fill="rgb(215,41,42)" fg:x="26" fg:w="1"/><text x="1.3048%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.04%)</title><rect x="1.0548%" y="597" width="0.0406%" height="15" fill="rgb(224,123,36)" fg:x="26" fg:w="1"/><text x="1.3048%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (1 samples, 0.04%)</title><rect x="1.0548%" y="581" width="0.0406%" height="15" fill="rgb(240,125,3)" fg:x="26" fg:w="1"/><text x="1.3048%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (1 samples, 0.04%)</title><rect x="1.0548%" y="565" width="0.0406%" height="15" fill="rgb(205,98,50)" fg:x="26" fg:w="1"/><text x="1.3048%" y="575.50"></text></g><g><title>`0x7FFE4395216A (1 samples, 0.04%)</title><rect x="1.0548%" y="549" width="0.0406%" height="15" fill="rgb(205,185,37)" fg:x="26" fg:w="1"/><text x="1.3048%" y="559.50"></text></g><g><title>`0x7FFE439522A7 (1 samples, 0.04%)</title><rect x="1.0548%" y="533" width="0.0406%" height="15" fill="rgb(238,207,15)" fg:x="26" fg:w="1"/><text x="1.3048%" y="543.50"></text></g><g><title>`0x7FFE4395299F (1 samples, 0.04%)</title><rect x="1.0548%" y="517" width="0.0406%" height="15" fill="rgb(213,199,42)" fg:x="26" fg:w="1"/><text x="1.3048%" y="527.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.04%)</title><rect x="1.0548%" y="501" width="0.0406%" height="15" fill="rgb(235,201,11)" fg:x="26" fg:w="1"/><text x="1.3048%" y="511.50"></text></g><g><title>`0x7FFE4394F798 (1 samples, 0.04%)</title><rect x="1.0548%" y="485" width="0.0406%" height="15" fill="rgb(207,46,11)" fg:x="26" fg:w="1"/><text x="1.3048%" y="495.50"></text></g><g><title>`0x7FFE43954D0B (1 samples, 0.04%)</title><rect x="1.0548%" y="469" width="0.0406%" height="15" fill="rgb(241,35,35)" fg:x="26" fg:w="1"/><text x="1.3048%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt; &gt;(criterion::benchmark_group::BenchmarkGroup (1 samples, 0.04%)</title><rect x="1.0953%" y="789" width="0.0406%" height="15" fill="rgb(243,32,47)" fg:x="27" fg:w="1"/><text x="1.3453%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::impl$0::contains (1 samples, 0.04%)</title><rect x="1.1359%" y="549" width="0.0406%" height="15" fill="rgb(247,202,23)" fg:x="28" fg:w="1"/><text x="1.3859%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::cmp::impl$11::slice_contains (1 samples, 0.04%)</title><rect x="1.1359%" y="533" width="0.0406%" height="15" fill="rgb(219,102,11)" fg:x="28" fg:w="1"/><text x="1.3859%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::option::Option::is_some (1 samples, 0.04%)</title><rect x="1.1359%" y="517" width="0.0406%" height="15" fill="rgb(243,110,44)" fg:x="28" fg:w="1"/><text x="1.3859%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::path::PathBuf::_push (1 samples, 0.04%)</title><rect x="1.1359%" y="501" width="0.0406%" height="15" fill="rgb(222,74,54)" fg:x="28" fg:w="1"/><text x="1.3859%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::ffi::os_str::OsString::push (1 samples, 0.04%)</title><rect x="1.1359%" y="485" width="0.0406%" height="15" fill="rgb(216,99,12)" fg:x="28" fg:w="1"/><text x="1.3859%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::os_str::wtf8::Buf::push_slice (1 samples, 0.04%)</title><rect x="1.1359%" y="469" width="0.0406%" height="15" fill="rgb(226,22,26)" fg:x="28" fg:w="1"/><text x="1.3859%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::Wtf8Buf::push_wtf8 (1 samples, 0.04%)</title><rect x="1.1359%" y="453" width="0.0406%" height="15" fill="rgb(217,163,10)" fg:x="28" fg:w="1"/><text x="1.3859%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::extend_from_slice (1 samples, 0.04%)</title><rect x="1.1359%" y="437" width="0.0406%" height="15" fill="rgb(213,25,53)" fg:x="28" fg:w="1"/><text x="1.3859%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$4::spec_extend (1 samples, 0.04%)</title><rect x="1.1359%" y="421" width="0.0406%" height="15" fill="rgb(252,105,26)" fg:x="28" fg:w="1"/><text x="1.3859%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::append_elements (1 samples, 0.04%)</title><rect x="1.1359%" y="405" width="0.0406%" height="15" fill="rgb(220,39,43)" fg:x="28" fg:w="1"/><text x="1.3859%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::reserve (1 samples, 0.04%)</title><rect x="1.1359%" y="389" width="0.0406%" height="15" fill="rgb(229,68,48)" fg:x="28" fg:w="1"/><text x="1.3859%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::reserve (1 samples, 0.04%)</title><rect x="1.1359%" y="373" width="0.0406%" height="15" fill="rgb(252,8,32)" fg:x="28" fg:w="1"/><text x="1.3859%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::reserve (1 samples, 0.04%)</title><rect x="1.1359%" y="357" width="0.0406%" height="15" fill="rgb(223,20,43)" fg:x="28" fg:w="1"/><text x="1.3859%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (1 samples, 0.04%)</title><rect x="1.1359%" y="341" width="0.0406%" height="15" fill="rgb(229,81,49)" fg:x="28" fg:w="1"/><text x="1.3859%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.04%)</title><rect x="1.1359%" y="325" width="0.0406%" height="15" fill="rgb(236,28,36)" fg:x="28" fg:w="1"/><text x="1.3859%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.04%)</title><rect x="1.1359%" y="309" width="0.0406%" height="15" fill="rgb(249,185,26)" fg:x="28" fg:w="1"/><text x="1.3859%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.04%)</title><rect x="1.1359%" y="293" width="0.0406%" height="15" fill="rgb(249,174,33)" fg:x="28" fg:w="1"/><text x="1.3859%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::grow (1 samples, 0.04%)</title><rect x="1.1359%" y="277" width="0.0406%" height="15" fill="rgb(233,201,37)" fg:x="28" fg:w="1"/><text x="1.3859%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="1.1359%" y="261" width="0.0406%" height="15" fill="rgb(221,78,26)" fg:x="28" fg:w="1"/><text x="1.3859%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.04%)</title><rect x="1.1359%" y="245" width="0.0406%" height="15" fill="rgb(250,127,30)" fg:x="28" fg:w="1"/><text x="1.3859%" y="255.50"></text></g><g><title>`0x7FFE4395216A (1 samples, 0.04%)</title><rect x="1.1359%" y="229" width="0.0406%" height="15" fill="rgb(230,49,44)" fg:x="28" fg:w="1"/><text x="1.3859%" y="239.50"></text></g><g><title>`0x7FFE439522A7 (1 samples, 0.04%)</title><rect x="1.1359%" y="213" width="0.0406%" height="15" fill="rgb(229,67,23)" fg:x="28" fg:w="1"/><text x="1.3859%" y="223.50"></text></g><g><title>`0x7FFE43953530 (1 samples, 0.04%)</title><rect x="1.1359%" y="197" width="0.0406%" height="15" fill="rgb(249,83,47)" fg:x="28" fg:w="1"/><text x="1.3859%" y="207.50"></text></g><g><title>`0x7FFE439B6CF4 (1 samples, 0.04%)</title><rect x="1.1359%" y="181" width="0.0406%" height="15" fill="rgb(215,43,3)" fg:x="28" fg:w="1"/><text x="1.3859%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fill_utf16_buf (1 samples, 0.04%)</title><rect x="1.1765%" y="533" width="0.0406%" height="15" fill="rgb(238,154,13)" fg:x="29" fg:w="1"/><text x="1.4265%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::search_paths::closure$4 (1 samples, 0.04%)</title><rect x="1.1765%" y="517" width="0.0406%" height="15" fill="rgb(219,56,2)" fg:x="29" fg:w="1"/><text x="1.4265%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe::closure$0 (1 samples, 0.04%)</title><rect x="1.1765%" y="501" width="0.0406%" height="15" fill="rgb(233,0,4)" fg:x="29" fg:w="1"/><text x="1.4265%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="1.1765%" y="485" width="0.0406%" height="15" fill="rgb(235,30,7)" fg:x="29" fg:w="1"/><text x="1.4265%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="1.1765%" y="469" width="0.0406%" height="15" fill="rgb(250,79,13)" fg:x="29" fg:w="1"/><text x="1.4265%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="1.1765%" y="453" width="0.0406%" height="15" fill="rgb(211,146,34)" fg:x="29" fg:w="1"/><text x="1.4265%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="1.1765%" y="437" width="0.0406%" height="15" fill="rgb(228,22,38)" fg:x="29" fg:w="1"/><text x="1.4265%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="1.1765%" y="421" width="0.0406%" height="15" fill="rgb(235,168,5)" fg:x="29" fg:w="1"/><text x="1.4265%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="1.1765%" y="405" width="0.0406%" height="15" fill="rgb(221,155,16)" fg:x="29" fg:w="1"/><text x="1.4265%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop (1 samples, 0.04%)</title><rect x="1.1765%" y="389" width="0.0406%" height="15" fill="rgb(215,215,53)" fg:x="29" fg:w="1"/><text x="1.4265%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::deallocate (1 samples, 0.04%)</title><rect x="1.1765%" y="373" width="0.0406%" height="15" fill="rgb(223,4,10)" fg:x="29" fg:w="1"/><text x="1.4265%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::current_memory (1 samples, 0.04%)</title><rect x="1.1765%" y="357" width="0.0406%" height="15" fill="rgb(234,103,6)" fg:x="29" fg:w="1"/><text x="1.4265%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::program_exists (1 samples, 0.04%)</title><rect x="1.1765%" y="341" width="0.0406%" height="15" fill="rgb(227,97,0)" fg:x="29" fg:w="1"/><text x="1.4265%" y="351.50"></text></g><g><title>`0x7FFE41232291 (1 samples, 0.04%)</title><rect x="1.1765%" y="325" width="0.0406%" height="15" fill="rgb(234,150,53)" fg:x="29" fg:w="1"/><text x="1.4265%" y="335.50"></text></g><g><title>`0x7FFE439B0874 (1 samples, 0.04%)</title><rect x="1.1765%" y="309" width="0.0406%" height="15" fill="rgb(228,201,54)" fg:x="29" fg:w="1"/><text x="1.4265%" y="319.50"></text></g><g><title>`0x7FFE41232291 (7 samples, 0.28%)</title><rect x="1.2170%" y="357" width="0.2840%" height="15" fill="rgb(222,22,37)" fg:x="30" fg:w="7"/><text x="1.4670%" y="367.50"></text></g><g><title>`0x7FFE439B0874 (7 samples, 0.28%)</title><rect x="1.2170%" y="341" width="0.2840%" height="15" fill="rgb(237,53,32)" fg:x="30" fg:w="7"/><text x="1.4670%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;criterion::PlottingBackend&gt;::initialize&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (10 samples, 0.41%)</title><rect x="1.1359%" y="773" width="0.4057%" height="15" fill="rgb(233,25,53)" fg:x="28" fg:w="10"/><text x="1.3859%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (10 samples, 0.41%)</title><rect x="1.1359%" y="757" width="0.4057%" height="15" fill="rgb(210,40,34)" fg:x="28" fg:w="10"/><text x="1.3859%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$ (10 samples, 0.41%)</title><rect x="1.1359%" y="741" width="0.4057%" height="15" fill="rgb(241,220,44)" fg:x="28" fg:w="10"/><text x="1.3859%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_PLOTTING_BACKEND::closure_env$0,tuple$&lt;&gt; &gt; (10 samples, 0.41%)</title><rect x="1.1359%" y="725" width="0.4057%" height="15" fill="rgb(235,28,35)" fg:x="28" fg:w="10"/><text x="1.3859%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_PLOTTING_BACKEND::closure$0 (10 samples, 0.41%)</title><rect x="1.1359%" y="709" width="0.4057%" height="15" fill="rgb(210,56,17)" fg:x="28" fg:w="10"/><text x="1.3859%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; &gt;::initialize&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*) (10 samples, 0.41%)</title><rect x="1.1359%" y="693" width="0.4057%" height="15" fill="rgb(224,130,29)" fg:x="28" fg:w="10"/><text x="1.3859%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (10 samples, 0.41%)</title><rect x="1.1359%" y="677" width="0.4057%" height="15" fill="rgb(235,212,8)" fg:x="28" fg:w="10"/><text x="1.3859%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$ (10 samples, 0.41%)</title><rect x="1.1359%" y="661" width="0.4057%" height="15" fill="rgb(223,33,50)" fg:x="28" fg:w="10"/><text x="1.3859%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion_plot::version (10 samples, 0.41%)</title><rect x="1.1359%" y="645" width="0.4057%" height="15" fill="rgb(219,149,13)" fg:x="28" fg:w="10"/><text x="1.3859%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;, enum2$&lt;criterion_plot::VersionError&gt; (*) (10 samples, 0.41%)</title><rect x="1.1359%" y="629" width="0.4057%" height="15" fill="rgb(250,156,29)" fg:x="28" fg:w="10"/><text x="1.3859%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (10 samples, 0.41%)</title><rect x="1.1359%" y="613" width="0.4057%" height="15" fill="rgb(216,193,19)" fg:x="28" fg:w="10"/><text x="1.3859%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (10 samples, 0.41%)</title><rect x="1.1359%" y="597" width="0.4057%" height="15" fill="rgb(216,135,14)" fg:x="28" fg:w="10"/><text x="1.3859%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (10 samples, 0.41%)</title><rect x="1.1359%" y="581" width="0.4057%" height="15" fill="rgb(241,47,5)" fg:x="28" fg:w="10"/><text x="1.3859%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe (10 samples, 0.41%)</title><rect x="1.1359%" y="565" width="0.4057%" height="15" fill="rgb(233,42,35)" fg:x="28" fg:w="10"/><text x="1.3859%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::search_paths (9 samples, 0.37%)</title><rect x="1.1765%" y="549" width="0.3651%" height="15" fill="rgb(231,13,6)" fg:x="29" fg:w="9"/><text x="1.4265%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe::closure$0 (8 samples, 0.32%)</title><rect x="1.2170%" y="533" width="0.3245%" height="15" fill="rgb(207,181,40)" fg:x="30" fg:w="8"/><text x="1.4670%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.32%)</title><rect x="1.2170%" y="517" width="0.3245%" height="15" fill="rgb(254,173,49)" fg:x="30" fg:w="8"/><text x="1.4670%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.32%)</title><rect x="1.2170%" y="501" width="0.3245%" height="15" fill="rgb(221,1,38)" fg:x="30" fg:w="8"/><text x="1.4670%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.32%)</title><rect x="1.2170%" y="485" width="0.3245%" height="15" fill="rgb(206,124,46)" fg:x="30" fg:w="8"/><text x="1.4670%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.32%)</title><rect x="1.2170%" y="469" width="0.3245%" height="15" fill="rgb(249,21,11)" fg:x="30" fg:w="8"/><text x="1.4670%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.32%)</title><rect x="1.2170%" y="453" width="0.3245%" height="15" fill="rgb(222,201,40)" fg:x="30" fg:w="8"/><text x="1.4670%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (8 samples, 0.32%)</title><rect x="1.2170%" y="437" width="0.3245%" height="15" fill="rgb(235,61,29)" fg:x="30" fg:w="8"/><text x="1.4670%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop (8 samples, 0.32%)</title><rect x="1.2170%" y="421" width="0.3245%" height="15" fill="rgb(219,207,3)" fg:x="30" fg:w="8"/><text x="1.4670%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::deallocate (8 samples, 0.32%)</title><rect x="1.2170%" y="405" width="0.3245%" height="15" fill="rgb(222,56,46)" fg:x="30" fg:w="8"/><text x="1.4670%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::current_memory (8 samples, 0.32%)</title><rect x="1.2170%" y="389" width="0.3245%" height="15" fill="rgb(239,76,54)" fg:x="30" fg:w="8"/><text x="1.4670%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::program_exists (8 samples, 0.32%)</title><rect x="1.2170%" y="373" width="0.3245%" height="15" fill="rgb(231,124,27)" fg:x="30" fg:w="8"/><text x="1.4670%" y="383.50"></text></g><g><title>`0x7FFE412322B1 (1 samples, 0.04%)</title><rect x="1.5010%" y="357" width="0.0406%" height="15" fill="rgb(249,195,6)" fg:x="37" fg:w="1"/><text x="1.7510%" y="367.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.04%)</title><rect x="1.5010%" y="341" width="0.0406%" height="15" fill="rgb(237,174,47)" fg:x="37" fg:w="1"/><text x="1.7510%" y="351.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.04%)</title><rect x="1.5010%" y="325" width="0.0406%" height="15" fill="rgb(206,201,31)" fg:x="37" fg:w="1"/><text x="1.7510%" y="335.50"></text></g><g><title>`0x7FFE439499AE (1 samples, 0.04%)</title><rect x="1.5010%" y="309" width="0.0406%" height="15" fill="rgb(231,57,52)" fg:x="37" fg:w="1"/><text x="1.7510%" y="319.50"></text></g><g><title>`0x7FFE439546FA (1 samples, 0.04%)</title><rect x="1.5010%" y="293" width="0.0406%" height="15" fill="rgb(248,177,22)" fg:x="37" fg:w="1"/><text x="1.7510%" y="303.50"></text></g><g><title>`0x7FFE43954AB3 (1 samples, 0.04%)</title><rect x="1.5010%" y="277" width="0.0406%" height="15" fill="rgb(215,211,37)" fg:x="37" fg:w="1"/><text x="1.7510%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;tinytemplate::compiler::Block&gt; &gt;,alloc::alloc::Global&gt;::push(tuple$&lt;ref$&lt;str$&gt;,enum2$ (1 samples, 0.04%)</title><rect x="1.5416%" y="677" width="0.0406%" height="15" fill="rgb(241,128,51)" fg:x="38" fg:w="1"/><text x="1.7916%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;tinytemplate::compiler::Block&gt; &gt;,alloc::alloc::Global&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="1.5416%" y="661" width="0.0406%" height="15" fill="rgb(227,165,31)" fg:x="38" fg:w="1"/><text x="1.7916%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;tinytemplate::compiler::Block&gt; &gt;,alloc::alloc::Global&gt;::ptr (1 samples, 0.04%)</title><rect x="1.5416%" y="645" width="0.0406%" height="15" fill="rgb(228,167,24)" fg:x="38" fg:w="1"/><text x="1.7916%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (1 samples, 0.04%)</title><rect x="1.5416%" y="629" width="0.0406%" height="15" fill="rgb(228,143,12)" fg:x="38" fg:w="1"/><text x="1.7916%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (1 samples, 0.04%)</title><rect x="1.5416%" y="613" width="0.0406%" height="15" fill="rgb(249,149,8)" fg:x="38" fg:w="1"/><text x="1.7916%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;enum2$&lt;clap_builder::builder::arg_predicate::ArgPredicate&gt;,clap_builder::util::id::Id&gt;,alloc::alloc::Global&gt;::grow_one&lt;tuple$&lt;enum2$&lt;clap_builder::builder::arg_predicate::ArgPredicate&gt;,clap_builder::util::id::Id&gt;,alloc::alloc::Global&gt; (1 samples, 0.04%)</title><rect x="1.5416%" y="597" width="0.0406%" height="15" fill="rgb(243,35,44)" fg:x="38" fg:w="1"/><text x="1.7916%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (2 samples, 0.08%)</title><rect x="1.5416%" y="773" width="0.0811%" height="15" fill="rgb(246,89,9)" fg:x="38" fg:w="2"/><text x="1.7916%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::html::Html::new(alloc::boxed::Box&lt;dyn$ (2 samples, 0.08%)</title><rect x="1.5416%" y="757" width="0.0811%" height="15" fill="rgb(233,213,13)" fg:x="38" fg:w="2"/><text x="1.7916%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;tinytemplate::error::Error&gt; &gt; &gt;, ref$ (2 samples, 0.08%)</title><rect x="1.5416%" y="741" width="0.0811%" height="15" fill="rgb(233,141,41)" fg:x="38" fg:w="2"/><text x="1.7916%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::TinyTemplate::add_template(ref$&lt;str$&gt;, ref$ (2 samples, 0.08%)</title><rect x="1.5416%" y="725" width="0.0811%" height="15" fill="rgb(239,167,4)" fg:x="38" fg:w="2"/><text x="1.7916%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::template::Template::compile(ref$ (2 samples, 0.08%)</title><rect x="1.5416%" y="709" width="0.0811%" height="15" fill="rgb(209,217,16)" fg:x="38" fg:w="2"/><text x="1.7916%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::compile (2 samples, 0.08%)</title><rect x="1.5416%" y="693" width="0.0811%" height="15" fill="rgb(219,88,35)" fg:x="38" fg:w="2"/><text x="1.7916%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::consume_value (1 samples, 0.04%)</title><rect x="1.5822%" y="677" width="0.0406%" height="15" fill="rgb(220,193,23)" fg:x="39" fg:w="1"/><text x="1.8322%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;enum2$&lt;tinytemplate::instruction::PathStep&gt;,alloc::alloc::Global&gt;,enum2$ (1 samples, 0.04%)</title><rect x="1.5822%" y="661" width="0.0406%" height="15" fill="rgb(230,90,52)" fg:x="39" fg:w="1"/><text x="1.8322%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`tinytemplate::compiler::TemplateCompiler::parse_path(ref$ (1 samples, 0.04%)</title><rect x="1.5822%" y="645" width="0.0406%" height="15" fill="rgb(252,106,19)" fg:x="39" fg:w="1"/><text x="1.8322%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::fmt::Arguments::new_v1(ref$ (1 samples, 0.04%)</title><rect x="1.5822%" y="629" width="0.0406%" height="15" fill="rgb(206,74,20)" fg:x="39" fg:w="1"/><text x="1.8322%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::eat_char (1 samples, 0.04%)</title><rect x="1.6227%" y="405" width="0.0406%" height="15" fill="rgb(230,138,44)" fg:x="40" fg:w="1"/><text x="1.8727%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::discard (1 samples, 0.04%)</title><rect x="1.6227%" y="389" width="0.0406%" height="15" fill="rgb(235,182,43)" fg:x="40" fg:w="1"/><text x="1.8727%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::parse_whitespace (2 samples, 0.08%)</title><rect x="1.6633%" y="405" width="0.0811%" height="15" fill="rgb(242,16,51)" fg:x="41" fg:w="2"/><text x="1.9133%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::peek (1 samples, 0.04%)</title><rect x="1.7039%" y="389" width="0.0406%" height="15" fill="rgb(248,9,4)" fg:x="42" fg:w="1"/><text x="1.9539%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::peek (1 samples, 0.04%)</title><rect x="1.7039%" y="373" width="0.0406%" height="15" fill="rgb(210,31,22)" fg:x="42" fg:w="1"/><text x="1.9539%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (9 samples, 0.37%)</title><rect x="1.6227%" y="581" width="0.3651%" height="15" fill="rgb(239,54,39)" fg:x="40" fg:w="9"/><text x="1.8727%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (9 samples, 0.37%)</title><rect x="1.6227%" y="565" width="0.3651%" height="15" fill="rgb(230,99,41)" fg:x="40" fg:w="9"/><text x="1.8727%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize(serde_json::de::Deserializer (9 samples, 0.37%)</title><rect x="1.6227%" y="549" width="0.3651%" height="15" fill="rgb(253,106,12)" fg:x="40" fg:w="9"/><text x="1.8727%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (9 samples, 0.37%)</title><rect x="1.6227%" y="533" width="0.3651%" height="15" fill="rgb(213,46,41)" fg:x="40" fg:w="9"/><text x="1.8727%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize::impl$2::visit_map(criterion::cargo_target_directory::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (9 samples, 0.37%)</title><rect x="1.6227%" y="517" width="0.3651%" height="15" fill="rgb(215,133,35)" fg:x="40" fg:w="9"/><text x="1.8727%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_value(serde_json::de::MapAccess (9 samples, 0.37%)</title><rect x="1.6227%" y="501" width="0.3651%" height="15" fill="rgb(213,28,5)" fg:x="40" fg:w="9"/><text x="1.8727%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt;*, core::marker::PhantomData (9 samples, 0.37%)</title><rect x="1.6227%" y="485" width="0.3651%" height="15" fill="rgb(215,77,49)" fg:x="40" fg:w="9"/><text x="1.8727%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;serde::de::ignored_any::IgnoredAny&gt;, serde_json::de::Deserializer (9 samples, 0.37%)</title><rect x="1.6227%" y="469" width="0.3651%" height="15" fill="rgb(248,100,22)" fg:x="40" fg:w="9"/><text x="1.8727%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::ignored_any::impl$1::deserialize(serde_json::de::Deserializer (9 samples, 0.37%)</title><rect x="1.6227%" y="453" width="0.3651%" height="15" fill="rgb(208,67,9)" fg:x="40" fg:w="9"/><text x="1.8727%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_ignored_any(serde_json::de::Deserializer (9 samples, 0.37%)</title><rect x="1.6227%" y="437" width="0.3651%" height="15" fill="rgb(219,133,21)" fg:x="40" fg:w="9"/><text x="1.8727%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::ignore_value (9 samples, 0.37%)</title><rect x="1.6227%" y="421" width="0.3651%" height="15" fill="rgb(246,46,29)" fg:x="40" fg:w="9"/><text x="1.8727%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::ignore_str (6 samples, 0.24%)</title><rect x="1.7444%" y="405" width="0.2434%" height="15" fill="rgb(246,185,52)" fg:x="43" fg:w="6"/><text x="1.9944%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="1.9878%" y="581" width="0.0406%" height="15" fill="rgb(252,136,11)" fg:x="49" fg:w="1"/><text x="2.2378%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="1.9878%" y="565" width="0.0406%" height="15" fill="rgb(219,138,53)" fg:x="49" fg:w="1"/><text x="2.2378%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="1.9878%" y="549" width="0.0406%" height="15" fill="rgb(211,51,23)" fg:x="49" fg:w="1"/><text x="2.2378%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="1.9878%" y="533" width="0.0406%" height="15" fill="rgb(247,221,28)" fg:x="49" fg:w="1"/><text x="2.2378%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.04%)</title><rect x="1.9878%" y="517" width="0.0406%" height="15" fill="rgb(251,222,45)" fg:x="49" fg:w="1"/><text x="2.2378%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (1 samples, 0.04%)</title><rect x="1.9878%" y="501" width="0.0406%" height="15" fill="rgb(217,162,53)" fg:x="49" fg:w="1"/><text x="2.2378%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="1.9878%" y="485" width="0.0406%" height="15" fill="rgb(229,93,14)" fg:x="49" fg:w="1"/><text x="2.2378%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::alloc::__default_lib_allocator::__rdl_dealloc (1 samples, 0.04%)</title><rect x="1.9878%" y="469" width="0.0406%" height="15" fill="rgb(209,67,49)" fg:x="49" fg:w="1"/><text x="2.2378%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::impl$0::dealloc (1 samples, 0.04%)</title><rect x="1.9878%" y="453" width="0.0406%" height="15" fill="rgb(213,87,29)" fg:x="49" fg:w="1"/><text x="2.2378%" y="463.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.04%)</title><rect x="1.9878%" y="437" width="0.0406%" height="15" fill="rgb(205,151,52)" fg:x="49" fg:w="1"/><text x="2.2378%" y="447.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.04%)</title><rect x="1.9878%" y="421" width="0.0406%" height="15" fill="rgb(253,215,39)" fg:x="49" fg:w="1"/><text x="2.2378%" y="431.50"></text></g><g><title>`0x7FFE4394A0EC (1 samples, 0.04%)</title><rect x="1.9878%" y="405" width="0.0406%" height="15" fill="rgb(221,220,41)" fg:x="49" fg:w="1"/><text x="2.2378%" y="415.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.04%)</title><rect x="1.9878%" y="389" width="0.0406%" height="15" fill="rgb(218,133,21)" fg:x="49" fg:w="1"/><text x="2.2378%" y="399.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.04%)</title><rect x="1.9878%" y="373" width="0.0406%" height="15" fill="rgb(221,193,43)" fg:x="49" fg:w="1"/><text x="2.2378%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.04%)</title><rect x="2.0284%" y="517" width="0.0406%" height="15" fill="rgb(240,128,52)" fg:x="50" fg:w="1"/><text x="2.2784%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Stdio::to_handle (1 samples, 0.04%)</title><rect x="2.0284%" y="501" width="0.0406%" height="15" fill="rgb(253,114,12)" fg:x="50" fg:w="1"/><text x="2.2784%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::anon_pipe (1 samples, 0.04%)</title><rect x="2.0284%" y="485" width="0.0406%" height="15" fill="rgb(215,223,47)" fg:x="50" fg:w="1"/><text x="2.2784%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.04%)</title><rect x="2.0284%" y="469" width="0.0406%" height="15" fill="rgb(248,225,23)" fg:x="50" fg:w="1"/><text x="2.2784%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.04%)</title><rect x="2.0284%" y="453" width="0.0406%" height="15" fill="rgb(250,108,0)" fg:x="50" fg:w="1"/><text x="2.2784%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.04%)</title><rect x="2.0284%" y="437" width="0.0406%" height="15" fill="rgb(228,208,7)" fg:x="50" fg:w="1"/><text x="2.2784%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.04%)</title><rect x="2.0284%" y="421" width="0.0406%" height="15" fill="rgb(244,45,10)" fg:x="50" fg:w="1"/><text x="2.2784%" y="431.50"></text></g><g><title>`0x7FFE41229EEC (1 samples, 0.04%)</title><rect x="2.0284%" y="405" width="0.0406%" height="15" fill="rgb(207,125,25)" fg:x="50" fg:w="1"/><text x="2.2784%" y="415.50"></text></g><g><title>`0x7FFE4122A580 (1 samples, 0.04%)</title><rect x="2.0284%" y="389" width="0.0406%" height="15" fill="rgb(210,195,18)" fg:x="50" fg:w="1"/><text x="2.2784%" y="399.50"></text></g><g><title>`0x7FFE439B0B74 (1 samples, 0.04%)</title><rect x="2.0284%" y="373" width="0.0406%" height="15" fill="rgb(249,80,12)" fg:x="50" fg:w="1"/><text x="2.2784%" y="383.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.04%)</title><rect x="2.0690%" y="293" width="0.0406%" height="15" fill="rgb(221,65,9)" fg:x="51" fg:w="1"/><text x="2.3190%" y="303.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.04%)</title><rect x="2.0690%" y="277" width="0.0406%" height="15" fill="rgb(235,49,36)" fg:x="51" fg:w="1"/><text x="2.3190%" y="287.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.04%)</title><rect x="2.0690%" y="261" width="0.0406%" height="15" fill="rgb(225,32,20)" fg:x="51" fg:w="1"/><text x="2.3190%" y="271.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.04%)</title><rect x="2.0690%" y="245" width="0.0406%" height="15" fill="rgb(215,141,46)" fg:x="51" fg:w="1"/><text x="2.3190%" y="255.50"></text></g><g><title>`0x7FFE43938D76 (2 samples, 0.08%)</title><rect x="2.0690%" y="341" width="0.0811%" height="15" fill="rgb(250,160,47)" fg:x="51" fg:w="2"/><text x="2.3190%" y="351.50"></text></g><g><title>`0x7FFE4393E269 (2 samples, 0.08%)</title><rect x="2.0690%" y="325" width="0.0811%" height="15" fill="rgb(216,222,40)" fg:x="51" fg:w="2"/><text x="2.3190%" y="335.50"></text></g><g><title>`0x7FFE4393D2E9 (2 samples, 0.08%)</title><rect x="2.0690%" y="309" width="0.0811%" height="15" fill="rgb(234,217,39)" fg:x="51" fg:w="2"/><text x="2.3190%" y="319.50"></text></g><g><title>`0x7FFE4393C8B8 (1 samples, 0.04%)</title><rect x="2.1095%" y="293" width="0.0406%" height="15" fill="rgb(207,178,40)" fg:x="52" fg:w="1"/><text x="2.3595%" y="303.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.04%)</title><rect x="2.1095%" y="277" width="0.0406%" height="15" fill="rgb(221,136,13)" fg:x="52" fg:w="1"/><text x="2.3595%" y="287.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.04%)</title><rect x="2.1095%" y="261" width="0.0406%" height="15" fill="rgb(249,199,10)" fg:x="52" fg:w="1"/><text x="2.3595%" y="271.50"></text></g><g><title>`0x7FFE43935D84 (1 samples, 0.04%)</title><rect x="2.1095%" y="245" width="0.0406%" height="15" fill="rgb(249,222,13)" fg:x="52" fg:w="1"/><text x="2.3595%" y="255.50"></text></g><g><title>`0x7FFE4393D2E9 (1 samples, 0.04%)</title><rect x="2.1095%" y="229" width="0.0406%" height="15" fill="rgb(244,185,38)" fg:x="52" fg:w="1"/><text x="2.3595%" y="239.50"></text></g><g><title>`0x7FFE4393C859 (1 samples, 0.04%)</title><rect x="2.1095%" y="213" width="0.0406%" height="15" fill="rgb(236,202,9)" fg:x="52" fg:w="1"/><text x="2.3595%" y="223.50"></text></g><g><title>`0x7FFE4393B406 (1 samples, 0.04%)</title><rect x="2.1095%" y="197" width="0.0406%" height="15" fill="rgb(250,229,37)" fg:x="52" fg:w="1"/><text x="2.3595%" y="207.50"></text></g><g><title>`0x7FFE4393B5E1 (1 samples, 0.04%)</title><rect x="2.1095%" y="181" width="0.0406%" height="15" fill="rgb(206,174,23)" fg:x="52" fg:w="1"/><text x="2.3595%" y="191.50"></text></g><g><title>`0x7FFE4393B721 (1 samples, 0.04%)</title><rect x="2.1095%" y="165" width="0.0406%" height="15" fill="rgb(211,33,43)" fg:x="52" fg:w="1"/><text x="2.3595%" y="175.50"></text></g><g><title>`0x7FFE4393B806 (1 samples, 0.04%)</title><rect x="2.1095%" y="149" width="0.0406%" height="15" fill="rgb(245,58,50)" fg:x="52" fg:w="1"/><text x="2.3595%" y="159.50"></text></g><g><title>`0x7FFE4393DAA1 (1 samples, 0.04%)</title><rect x="2.1501%" y="325" width="0.0406%" height="15" fill="rgb(244,68,36)" fg:x="53" fg:w="1"/><text x="2.4001%" y="335.50"></text></g><g><title>`0x7FFE4393ECC9 (1 samples, 0.04%)</title><rect x="2.1501%" y="309" width="0.0406%" height="15" fill="rgb(232,229,15)" fg:x="53" fg:w="1"/><text x="2.4001%" y="319.50"></text></g><g><title>`0x7FFE4393ECAF (1 samples, 0.04%)</title><rect x="2.1501%" y="293" width="0.0406%" height="15" fill="rgb(254,30,23)" fg:x="53" fg:w="1"/><text x="2.4001%" y="303.50"></text></g><g><title>`0x7FFE4393ED8C (1 samples, 0.04%)</title><rect x="2.1501%" y="277" width="0.0406%" height="15" fill="rgb(235,160,14)" fg:x="53" fg:w="1"/><text x="2.4001%" y="287.50"></text></g><g><title>`0x7FFE43984100 (1 samples, 0.04%)</title><rect x="2.1501%" y="261" width="0.0406%" height="15" fill="rgb(212,155,44)" fg:x="53" fg:w="1"/><text x="2.4001%" y="271.50"></text></g><g><title>`0x7FFE439B0A54 (1 samples, 0.04%)</title><rect x="2.1501%" y="245" width="0.0406%" height="15" fill="rgb(226,2,50)" fg:x="53" fg:w="1"/><text x="2.4001%" y="255.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.04%)</title><rect x="2.1907%" y="309" width="0.0406%" height="15" fill="rgb(234,177,6)" fg:x="54" fg:w="1"/><text x="2.4407%" y="319.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.04%)</title><rect x="2.1907%" y="293" width="0.0406%" height="15" fill="rgb(217,24,9)" fg:x="54" fg:w="1"/><text x="2.4407%" y="303.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.04%)</title><rect x="2.1907%" y="277" width="0.0406%" height="15" fill="rgb(220,13,46)" fg:x="54" fg:w="1"/><text x="2.4407%" y="287.50"></text></g><g><title>`0x7FFE428E79EA (1 samples, 0.04%)</title><rect x="2.1907%" y="261" width="0.0406%" height="15" fill="rgb(239,221,27)" fg:x="54" fg:w="1"/><text x="2.4407%" y="271.50"></text></g><g><title>`0x7FFE428E8705 (1 samples, 0.04%)</title><rect x="2.1907%" y="245" width="0.0406%" height="15" fill="rgb(222,198,25)" fg:x="54" fg:w="1"/><text x="2.4407%" y="255.50"></text></g><g><title>`0x7FFE428E2528 (1 samples, 0.04%)</title><rect x="2.1907%" y="229" width="0.0406%" height="15" fill="rgb(211,99,13)" fg:x="54" fg:w="1"/><text x="2.4407%" y="239.50"></text></g><g><title>`0x7FFE428E2615 (1 samples, 0.04%)</title><rect x="2.1907%" y="213" width="0.0406%" height="15" fill="rgb(232,111,31)" fg:x="54" fg:w="1"/><text x="2.4407%" y="223.50"></text></g><g><title>`0x7FFE428E30A0 (1 samples, 0.04%)</title><rect x="2.1907%" y="197" width="0.0406%" height="15" fill="rgb(245,82,37)" fg:x="54" fg:w="1"/><text x="2.4407%" y="207.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.04%)</title><rect x="2.1907%" y="181" width="0.0406%" height="15" fill="rgb(227,149,46)" fg:x="54" fg:w="1"/><text x="2.4407%" y="191.50"></text></g><g><title>`0x7FFE4394268A (1 samples, 0.04%)</title><rect x="2.1907%" y="165" width="0.0406%" height="15" fill="rgb(218,36,50)" fg:x="54" fg:w="1"/><text x="2.4407%" y="175.50"></text></g><g><title>`0x7FFE43942517 (1 samples, 0.04%)</title><rect x="2.1907%" y="149" width="0.0406%" height="15" fill="rgb(226,80,48)" fg:x="54" fg:w="1"/><text x="2.4407%" y="159.50"></text></g><g><title>`0x7FFE439B3B24 (1 samples, 0.04%)</title><rect x="2.1907%" y="133" width="0.0406%" height="15" fill="rgb(238,224,15)" fg:x="54" fg:w="1"/><text x="2.4407%" y="143.50"></text></g><g><title>`0x7FFE41246A7A (5 samples, 0.20%)</title><rect x="2.0690%" y="453" width="0.2028%" height="15" fill="rgb(241,136,10)" fg:x="51" fg:w="5"/><text x="2.3190%" y="463.50"></text></g><g><title>`0x7FFE412B4869 (5 samples, 0.20%)</title><rect x="2.0690%" y="437" width="0.2028%" height="15" fill="rgb(208,32,45)" fg:x="51" fg:w="5"/><text x="2.3190%" y="447.50"></text></g><g><title>`0x7FFE4127EE32 (5 samples, 0.20%)</title><rect x="2.0690%" y="421" width="0.2028%" height="15" fill="rgb(207,135,9)" fg:x="51" fg:w="5"/><text x="2.3190%" y="431.50"></text></g><g><title>`0x7FFE4393BEB7 (5 samples, 0.20%)</title><rect x="2.0690%" y="405" width="0.2028%" height="15" fill="rgb(206,86,44)" fg:x="51" fg:w="5"/><text x="2.3190%" y="415.50"></text></g><g><title>`0x7FFE439330F5 (5 samples, 0.20%)</title><rect x="2.0690%" y="389" width="0.2028%" height="15" fill="rgb(245,177,15)" fg:x="51" fg:w="5"/><text x="2.3190%" y="399.50"></text></g><g><title>`0x7FFE4392607E (5 samples, 0.20%)</title><rect x="2.0690%" y="373" width="0.2028%" height="15" fill="rgb(206,64,50)" fg:x="51" fg:w="5"/><text x="2.3190%" y="383.50"></text></g><g><title>`0x7FFE43928EC0 (5 samples, 0.20%)</title><rect x="2.0690%" y="357" width="0.2028%" height="15" fill="rgb(234,36,40)" fg:x="51" fg:w="5"/><text x="2.3190%" y="367.50"></text></g><g><title>`0x7FFE43938E00 (3 samples, 0.12%)</title><rect x="2.1501%" y="341" width="0.1217%" height="15" fill="rgb(213,64,8)" fg:x="53" fg:w="3"/><text x="2.4001%" y="351.50"></text></g><g><title>`0x7FFE4393DAED (2 samples, 0.08%)</title><rect x="2.1907%" y="325" width="0.0811%" height="15" fill="rgb(210,75,36)" fg:x="54" fg:w="2"/><text x="2.4407%" y="335.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.04%)</title><rect x="2.2312%" y="309" width="0.0406%" height="15" fill="rgb(229,88,21)" fg:x="55" fg:w="1"/><text x="2.4812%" y="319.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.04%)</title><rect x="2.2312%" y="293" width="0.0406%" height="15" fill="rgb(252,204,47)" fg:x="55" fg:w="1"/><text x="2.4812%" y="303.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.04%)</title><rect x="2.2312%" y="277" width="0.0406%" height="15" fill="rgb(208,77,27)" fg:x="55" fg:w="1"/><text x="2.4812%" y="287.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.04%)</title><rect x="2.2312%" y="261" width="0.0406%" height="15" fill="rgb(221,76,26)" fg:x="55" fg:w="1"/><text x="2.4812%" y="271.50"></text></g><g><title>`0x7FFE411DA067 (1 samples, 0.04%)</title><rect x="2.2312%" y="245" width="0.0406%" height="15" fill="rgb(225,139,18)" fg:x="55" fg:w="1"/><text x="2.4812%" y="255.50"></text></g><g><title>`0x7FFE411D35BC (1 samples, 0.04%)</title><rect x="2.2312%" y="229" width="0.0406%" height="15" fill="rgb(230,137,11)" fg:x="55" fg:w="1"/><text x="2.4812%" y="239.50"></text></g><g><title>`0x7FFE411D3839 (1 samples, 0.04%)</title><rect x="2.2312%" y="213" width="0.0406%" height="15" fill="rgb(212,28,1)" fg:x="55" fg:w="1"/><text x="2.4812%" y="223.50"></text></g><g><title>`0x7FFE411D3953 (1 samples, 0.04%)</title><rect x="2.2312%" y="197" width="0.0406%" height="15" fill="rgb(248,164,17)" fg:x="55" fg:w="1"/><text x="2.4812%" y="207.50"></text></g><g><title>`0x7FFE411D6413 (1 samples, 0.04%)</title><rect x="2.2312%" y="181" width="0.0406%" height="15" fill="rgb(222,171,42)" fg:x="55" fg:w="1"/><text x="2.4812%" y="191.50"></text></g><g><title>`0x7FFE439B01B4 (1 samples, 0.04%)</title><rect x="2.2312%" y="165" width="0.0406%" height="15" fill="rgb(243,84,45)" fg:x="55" fg:w="1"/><text x="2.4812%" y="175.50"></text></g><g><title>`0x7FFE4124746B (1 samples, 0.04%)</title><rect x="2.2718%" y="453" width="0.0406%" height="15" fill="rgb(252,49,23)" fg:x="56" fg:w="1"/><text x="2.5218%" y="463.50"></text></g><g><title>`0x7FFE41279E93 (1 samples, 0.04%)</title><rect x="2.2718%" y="437" width="0.0406%" height="15" fill="rgb(215,19,7)" fg:x="56" fg:w="1"/><text x="2.5218%" y="447.50"></text></g><g><title>`0x7FFE4398DD08 (1 samples, 0.04%)</title><rect x="2.2718%" y="421" width="0.0406%" height="15" fill="rgb(238,81,41)" fg:x="56" fg:w="1"/><text x="2.5218%" y="431.50"></text></g><g><title>`0x7FFE43986DA4 (1 samples, 0.04%)</title><rect x="2.2718%" y="405" width="0.0406%" height="15" fill="rgb(210,199,37)" fg:x="56" fg:w="1"/><text x="2.5218%" y="415.50"></text></g><g><title>`0x7FFE43986EA7 (1 samples, 0.04%)</title><rect x="2.2718%" y="389" width="0.0406%" height="15" fill="rgb(244,192,49)" fg:x="56" fg:w="1"/><text x="2.5218%" y="399.50"></text></g><g><title>`0x7FFE4398720A (1 samples, 0.04%)</title><rect x="2.2718%" y="373" width="0.0406%" height="15" fill="rgb(226,211,11)" fg:x="56" fg:w="1"/><text x="2.5218%" y="383.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.04%)</title><rect x="2.2718%" y="357" width="0.0406%" height="15" fill="rgb(236,162,54)" fg:x="56" fg:w="1"/><text x="2.5218%" y="367.50"></text></g><g><title>`0x7FFE41247624 (4 samples, 0.16%)</title><rect x="2.3124%" y="453" width="0.1623%" height="15" fill="rgb(220,229,9)" fg:x="57" fg:w="4"/><text x="2.5624%" y="463.50"></text></g><g><title>`0x7FFE439B1AA4 (4 samples, 0.16%)</title><rect x="2.3124%" y="437" width="0.1623%" height="15" fill="rgb(250,87,22)" fg:x="57" fg:w="4"/><text x="2.5624%" y="447.50"></text></g><g><title>`0x7FFE42B959A4 (3 samples, 0.12%)</title><rect x="2.4746%" y="437" width="0.1217%" height="15" fill="rgb(239,43,17)" fg:x="61" fg:w="3"/><text x="2.7246%" y="447.50"></text></g><g><title>`0x7FFE42B98ABB (3 samples, 0.12%)</title><rect x="2.4746%" y="421" width="0.1217%" height="15" fill="rgb(231,177,25)" fg:x="61" fg:w="3"/><text x="2.7246%" y="431.50"></text></g><g><title>`0x7FFE439B0A54 (3 samples, 0.12%)</title><rect x="2.4746%" y="405" width="0.1217%" height="15" fill="rgb(219,179,1)" fg:x="61" fg:w="3"/><text x="2.7246%" y="415.50"></text></g><g><title>`0x7FFE412486DA (4 samples, 0.16%)</title><rect x="2.4746%" y="453" width="0.1623%" height="15" fill="rgb(238,219,53)" fg:x="61" fg:w="4"/><text x="2.7246%" y="463.50"></text></g><g><title>`0x7FFE42B95A50 (1 samples, 0.04%)</title><rect x="2.5963%" y="437" width="0.0406%" height="15" fill="rgb(232,167,36)" fg:x="64" fg:w="1"/><text x="2.8463%" y="447.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.04%)</title><rect x="2.5963%" y="421" width="0.0406%" height="15" fill="rgb(244,19,51)" fg:x="64" fg:w="1"/><text x="2.8463%" y="431.50"></text></g><g><title>`0x7FFE4394268A (1 samples, 0.04%)</title><rect x="2.5963%" y="405" width="0.0406%" height="15" fill="rgb(224,6,22)" fg:x="64" fg:w="1"/><text x="2.8463%" y="415.50"></text></g><g><title>`0x7FFE43942517 (1 samples, 0.04%)</title><rect x="2.5963%" y="389" width="0.0406%" height="15" fill="rgb(224,145,5)" fg:x="64" fg:w="1"/><text x="2.8463%" y="399.50"></text></g><g><title>`0x7FFE439B3B24 (1 samples, 0.04%)</title><rect x="2.5963%" y="373" width="0.0406%" height="15" fill="rgb(234,130,49)" fg:x="64" fg:w="1"/><text x="2.8463%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (16 samples, 0.65%)</title><rect x="2.0284%" y="533" width="0.6491%" height="15" fill="rgb(254,6,2)" fg:x="50" fg:w="16"/><text x="2.2784%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (15 samples, 0.61%)</title><rect x="2.0690%" y="517" width="0.6085%" height="15" fill="rgb(208,96,46)" fg:x="51" fg:w="15"/><text x="2.3190%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (15 samples, 0.61%)</title><rect x="2.0690%" y="501" width="0.6085%" height="15" fill="rgb(239,3,39)" fg:x="51" fg:w="15"/><text x="2.3190%" y="511.50"></text></g><g><title>`0x7FFE42BA61F4 (15 samples, 0.61%)</title><rect x="2.0690%" y="485" width="0.6085%" height="15" fill="rgb(233,210,1)" fg:x="51" fg:w="15"/><text x="2.3190%" y="495.50"></text></g><g><title>`0x7FFE4127EAB6 (15 samples, 0.61%)</title><rect x="2.0690%" y="469" width="0.6085%" height="15" fill="rgb(244,137,37)" fg:x="51" fg:w="15"/><text x="2.3190%" y="479.50"></text></g><g><title>`0x7FFE41248816 (1 samples, 0.04%)</title><rect x="2.6369%" y="453" width="0.0406%" height="15" fill="rgb(240,136,2)" fg:x="65" fg:w="1"/><text x="2.8869%" y="463.50"></text></g><g><title>`0x7FFE42B99207 (1 samples, 0.04%)</title><rect x="2.6369%" y="437" width="0.0406%" height="15" fill="rgb(239,18,37)" fg:x="65" fg:w="1"/><text x="2.8869%" y="447.50"></text></g><g><title>`0x7FFE42B9A030 (1 samples, 0.04%)</title><rect x="2.6369%" y="421" width="0.0406%" height="15" fill="rgb(218,185,22)" fg:x="65" fg:w="1"/><text x="2.8869%" y="431.50"></text></g><g><title>`0x7FFE42B97BF5 (1 samples, 0.04%)</title><rect x="2.6369%" y="405" width="0.0406%" height="15" fill="rgb(225,218,4)" fg:x="65" fg:w="1"/><text x="2.8869%" y="415.50"></text></g><g><title>`0x7FFE43921BA3 (1 samples, 0.04%)</title><rect x="2.6369%" y="389" width="0.0406%" height="15" fill="rgb(230,182,32)" fg:x="65" fg:w="1"/><text x="2.8869%" y="399.50"></text></g><g><title>`0x7FFE4392F149 (1 samples, 0.04%)</title><rect x="2.6369%" y="373" width="0.0406%" height="15" fill="rgb(242,56,43)" fg:x="65" fg:w="1"/><text x="2.8869%" y="383.50"></text></g><g><title>`0x7FFE4391A5DE (1 samples, 0.04%)</title><rect x="2.6369%" y="357" width="0.0406%" height="15" fill="rgb(233,99,24)" fg:x="65" fg:w="1"/><text x="2.8869%" y="367.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.04%)</title><rect x="2.6369%" y="341" width="0.0406%" height="15" fill="rgb(234,209,42)" fg:x="65" fg:w="1"/><text x="2.8869%" y="351.50"></text></g><g><title>`0x7FFE439B6D66 (1 samples, 0.04%)</title><rect x="2.6775%" y="261" width="0.0406%" height="15" fill="rgb(227,7,12)" fg:x="66" fg:w="1"/><text x="2.9275%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::spare_capacity_mut (2 samples, 0.08%)</title><rect x="2.6775%" y="469" width="0.0811%" height="15" fill="rgb(245,203,43)" fg:x="66" fg:w="2"/><text x="2.9275%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::capacity (2 samples, 0.08%)</title><rect x="2.6775%" y="453" width="0.0811%" height="15" fill="rgb(238,205,33)" fg:x="66" fg:w="2"/><text x="2.9275%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::capacity (2 samples, 0.08%)</title><rect x="2.6775%" y="437" width="0.0811%" height="15" fill="rgb(231,56,7)" fg:x="66" fg:w="2"/><text x="2.9275%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (2 samples, 0.08%)</title><rect x="2.6775%" y="421" width="0.0811%" height="15" fill="rgb(244,186,29)" fg:x="66" fg:w="2"/><text x="2.9275%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::grow_amortized (2 samples, 0.08%)</title><rect x="2.6775%" y="405" width="0.0811%" height="15" fill="rgb(234,111,31)" fg:x="66" fg:w="2"/><text x="2.9275%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (2 samples, 0.08%)</title><rect x="2.6775%" y="389" width="0.0811%" height="15" fill="rgb(241,149,10)" fg:x="66" fg:w="2"/><text x="2.9275%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (2 samples, 0.08%)</title><rect x="2.6775%" y="373" width="0.0811%" height="15" fill="rgb(249,206,44)" fg:x="66" fg:w="2"/><text x="2.9275%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::grow (2 samples, 0.08%)</title><rect x="2.6775%" y="357" width="0.0811%" height="15" fill="rgb(251,153,30)" fg:x="66" fg:w="2"/><text x="2.9275%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::grow_impl (2 samples, 0.08%)</title><rect x="2.6775%" y="341" width="0.0811%" height="15" fill="rgb(239,152,38)" fg:x="66" fg:w="2"/><text x="2.9275%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (2 samples, 0.08%)</title><rect x="2.6775%" y="325" width="0.0811%" height="15" fill="rgb(249,139,47)" fg:x="66" fg:w="2"/><text x="2.9275%" y="335.50"></text></g><g><title>`0x7FFE4395216A (2 samples, 0.08%)</title><rect x="2.6775%" y="309" width="0.0811%" height="15" fill="rgb(244,64,35)" fg:x="66" fg:w="2"/><text x="2.9275%" y="319.50"></text></g><g><title>`0x7FFE439522A7 (2 samples, 0.08%)</title><rect x="2.6775%" y="293" width="0.0811%" height="15" fill="rgb(216,46,15)" fg:x="66" fg:w="2"/><text x="2.9275%" y="303.50"></text></g><g><title>`0x7FFE43952ADE (2 samples, 0.08%)</title><rect x="2.6775%" y="277" width="0.0811%" height="15" fill="rgb(250,74,19)" fg:x="66" fg:w="2"/><text x="2.9275%" y="287.50"></text></g><g><title>`0x7FFE439B6E27 (1 samples, 0.04%)</title><rect x="2.7181%" y="261" width="0.0406%" height="15" fill="rgb(249,42,33)" fg:x="67" fg:w="1"/><text x="2.9681%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::impl$4::default (43 samples, 1.74%)</title><rect x="1.1359%" y="789" width="1.7444%" height="15" fill="rgb(242,149,17)" fg:x="28" fg:w="43"/><text x="1.3859%" y="799.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;std::path::PathBuf,std::path::PathBuf (*) (31 samples, 1.26%)</title><rect x="1.6227%" y="773" width="1.2576%" height="15" fill="rgb(244,29,21)" fg:x="40" fg:w="31"/><text x="1.8727%" y="783.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::ffi::os_str::impl$10::clone (31 samples, 1.26%)</title><rect x="1.6227%" y="757" width="1.2576%" height="15" fill="rgb(220,130,37)" fg:x="40" fg:w="31"/><text x="1.8727%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::os_str::wtf8::impl$10::clone (31 samples, 1.26%)</title><rect x="1.6227%" y="741" width="1.2576%" height="15" fill="rgb(211,67,2)" fg:x="40" fg:w="31"/><text x="1.8727%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::impl$35::clone (31 samples, 1.26%)</title><rect x="1.6227%" y="725" width="1.2576%" height="15" fill="rgb(235,68,52)" fg:x="40" fg:w="31"/><text x="1.8727%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;std::path::PathBuf&gt;::initialize&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*) (31 samples, 1.26%)</title><rect x="1.6227%" y="709" width="1.2576%" height="15" fill="rgb(246,142,3)" fg:x="40" fg:w="31"/><text x="1.8727%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (31 samples, 1.26%)</title><rect x="1.6227%" y="693" width="1.2576%" height="15" fill="rgb(241,25,7)" fg:x="40" fg:w="31"/><text x="1.8727%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$ (31 samples, 1.26%)</title><rect x="1.6227%" y="677" width="1.2576%" height="15" fill="rgb(242,119,39)" fg:x="40" fg:w="31"/><text x="1.8727%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_OUTPUT_DIRECTORY::closure_env$0,tuple$&lt;&gt; &gt; (31 samples, 1.26%)</title><rect x="1.6227%" y="661" width="1.2576%" height="15" fill="rgb(241,98,45)" fg:x="40" fg:w="31"/><text x="1.8727%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_OUTPUT_DIRECTORY::closure$0 (31 samples, 1.26%)</title><rect x="1.6227%" y="645" width="1.2576%" height="15" fill="rgb(254,28,30)" fg:x="40" fg:w="31"/><text x="1.8727%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory (31 samples, 1.26%)</title><rect x="1.6227%" y="629" width="1.2576%" height="15" fill="rgb(241,142,54)" fg:x="40" fg:w="31"/><text x="1.8727%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;::or_else(enum2$&lt;core::option::Option (31 samples, 1.26%)</title><rect x="1.6227%" y="613" width="1.2576%" height="15" fill="rgb(222,85,15)" fg:x="40" fg:w="31"/><text x="1.8727%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::closure$0 (31 samples, 1.26%)</title><rect x="1.6227%" y="597" width="1.2576%" height="15" fill="rgb(210,85,47)" fg:x="40" fg:w="31"/><text x="1.8727%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result (21 samples, 0.85%)</title><rect x="2.0284%" y="581" width="0.8519%" height="15" fill="rgb(224,206,25)" fg:x="50" fg:w="21"/><text x="2.2784%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (21 samples, 0.85%)</title><rect x="2.0284%" y="565" width="0.8519%" height="15" fill="rgb(243,201,19)" fg:x="50" fg:w="21"/><text x="2.2784%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (21 samples, 0.85%)</title><rect x="2.0284%" y="549" width="0.8519%" height="15" fill="rgb(236,59,4)" fg:x="50" fg:w="21"/><text x="2.2784%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::process::wait_with_output (5 samples, 0.20%)</title><rect x="2.6775%" y="533" width="0.2028%" height="15" fill="rgb(254,179,45)" fg:x="66" fg:w="5"/><text x="2.9275%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::unwrap (5 samples, 0.20%)</title><rect x="2.6775%" y="517" width="0.2028%" height="15" fill="rgb(226,14,10)" fg:x="66" fg:w="5"/><text x="2.9275%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::read2 (5 samples, 0.20%)</title><rect x="2.6775%" y="501" width="0.2028%" height="15" fill="rgb(244,27,41)" fg:x="66" fg:w="5"/><text x="2.9275%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (5 samples, 0.20%)</title><rect x="2.6775%" y="485" width="0.2028%" height="15" fill="rgb(235,35,32)" fg:x="66" fg:w="5"/><text x="2.9275%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read_overlapped (3 samples, 0.12%)</title><rect x="2.7586%" y="469" width="0.1217%" height="15" fill="rgb(218,68,31)" fg:x="68" fg:w="3"/><text x="3.0086%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (3 samples, 0.12%)</title><rect x="2.7586%" y="453" width="0.1217%" height="15" fill="rgb(207,120,37)" fg:x="68" fg:w="3"/><text x="3.0086%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (3 samples, 0.12%)</title><rect x="2.7586%" y="437" width="0.1217%" height="15" fill="rgb(227,98,0)" fg:x="68" fg:w="3"/><text x="3.0086%" y="447.50"></text></g><g><title>`0x7FFE4122BDC8 (3 samples, 0.12%)</title><rect x="2.7586%" y="421" width="0.1217%" height="15" fill="rgb(207,7,3)" fg:x="68" fg:w="3"/><text x="3.0086%" y="431.50"></text></g><g><title>`0x7FFE439B0194 (3 samples, 0.12%)</title><rect x="2.7586%" y="405" width="0.1217%" height="15" fill="rgb(206,98,19)" fg:x="68" fg:w="3"/><text x="3.0086%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::arg::Arg::help(clap_builder::builder::arg::Arg, ref$ (1 samples, 0.04%)</title><rect x="2.8803%" y="469" width="0.0406%" height="15" fill="rgb(217,5,26)" fg:x="71" fg:w="1"/><text x="3.1303%" y="479.50"></text></g><g><title>`0x7FFE26C13010 (1 samples, 0.04%)</title><rect x="2.8803%" y="453" width="0.0406%" height="15" fill="rgb(235,190,38)" fg:x="71" fg:w="1"/><text x="3.1303%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches (1 samples, 0.04%)</title><rect x="2.9209%" y="469" width="0.0406%" height="15" fill="rgb(247,86,24)" fg:x="72" fg:w="1"/><text x="3.1709%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::get_matches_from (1 samples, 0.04%)</title><rect x="2.9209%" y="453" width="0.0406%" height="15" fill="rgb(205,101,16)" fg:x="72" fg:w="1"/><text x="3.1709%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::try_get_matches_from_mut (1 samples, 0.04%)</title><rect x="2.9209%" y="437" width="0.0406%" height="15" fill="rgb(246,168,33)" fg:x="72" fg:w="1"/><text x="3.1709%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="2.9209%" y="421" width="0.0406%" height="15" fill="rgb(231,114,1)" fg:x="72" fg:w="1"/><text x="3.1709%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="2.9209%" y="405" width="0.0406%" height="15" fill="rgb(207,184,53)" fg:x="72" fg:w="1"/><text x="3.1709%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::_do_parse (1 samples, 0.04%)</title><rect x="2.9209%" y="389" width="0.0406%" height="15" fill="rgb(224,95,51)" fg:x="72" fg:w="1"/><text x="3.1709%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::parser::Parser::get_matches_with (1 samples, 0.04%)</title><rect x="2.9209%" y="373" width="0.0406%" height="15" fill="rgb(212,188,45)" fg:x="72" fg:w="1"/><text x="3.1709%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1 samples, 0.04%)</title><rect x="2.9209%" y="357" width="0.0406%" height="15" fill="rgb(223,154,38)" fg:x="72" fg:w="1"/><text x="3.1709%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::validator::Validator::validate(enum2$ (1 samples, 0.04%)</title><rect x="2.9209%" y="341" width="0.0406%" height="15" fill="rgb(251,22,52)" fg:x="72" fg:w="1"/><text x="3.1709%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::parser::validator::Validator::validate_required (1 samples, 0.04%)</title><rect x="2.9209%" y="325" width="0.0406%" height="15" fill="rgb(229,209,22)" fg:x="72" fg:w="1"/><text x="3.1709%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::is_allow_missing_positional_set (1 samples, 0.04%)</title><rect x="2.9209%" y="309" width="0.0406%" height="15" fill="rgb(234,138,34)" fg:x="72" fg:w="1"/><text x="3.1709%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`clap_builder::builder::command::Command::is_set (1 samples, 0.04%)</title><rect x="2.9209%" y="293" width="0.0406%" height="15" fill="rgb(212,95,11)" fg:x="72" fg:w="1"/><text x="3.1709%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::benchmark_group(ref$ (3 samples, 0.12%)</title><rect x="2.8803%" y="757" width="0.1217%" height="15" fill="rgb(240,179,47)" fg:x="71" fg:w="3"/><text x="3.1303%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::convert::impl$3::into(ref$ (3 samples, 0.12%)</title><rect x="2.8803%" y="741" width="0.1217%" height="15" fill="rgb(240,163,11)" fg:x="71" fg:w="3"/><text x="3.1303%" y="751.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.12%)</title><rect x="2.8803%" y="725" width="0.1217%" height="15" fill="rgb(236,37,12)" fg:x="71" fg:w="3"/><text x="3.1303%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.12%)</title><rect x="2.8803%" y="709" width="0.1217%" height="15" fill="rgb(232,164,16)" fg:x="71" fg:w="3"/><text x="3.1303%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.12%)</title><rect x="2.8803%" y="693" width="0.1217%" height="15" fill="rgb(244,205,15)" fg:x="71" fg:w="3"/><text x="3.1303%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.12%)</title><rect x="2.8803%" y="677" width="0.1217%" height="15" fill="rgb(223,117,47)" fg:x="71" fg:w="3"/><text x="3.1303%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.12%)</title><rect x="2.8803%" y="661" width="0.1217%" height="15" fill="rgb(244,107,35)" fg:x="71" fg:w="3"/><text x="3.1303%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.12%)</title><rect x="2.8803%" y="645" width="0.1217%" height="15" fill="rgb(205,140,8)" fg:x="71" fg:w="3"/><text x="3.1303%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.12%)</title><rect x="2.8803%" y="629" width="0.1217%" height="15" fill="rgb(228,84,46)" fg:x="71" fg:w="3"/><text x="3.1303%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="2.8803%" y="613" width="0.1217%" height="15" fill="rgb(254,188,9)" fg:x="71" fg:w="3"/><text x="3.1303%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="2.8803%" y="597" width="0.1217%" height="15" fill="rgb(206,112,54)" fg:x="71" fg:w="3"/><text x="3.1303%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="2.8803%" y="581" width="0.1217%" height="15" fill="rgb(216,84,49)" fg:x="71" fg:w="3"/><text x="3.1303%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.12%)</title><rect x="2.8803%" y="565" width="0.1217%" height="15" fill="rgb(214,194,35)" fg:x="71" fg:w="3"/><text x="3.1303%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::allocate (3 samples, 0.12%)</title><rect x="2.8803%" y="549" width="0.1217%" height="15" fill="rgb(249,28,3)" fg:x="71" fg:w="3"/><text x="3.1303%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.12%)</title><rect x="2.8803%" y="533" width="0.1217%" height="15" fill="rgb(222,56,52)" fg:x="71" fg:w="3"/><text x="3.1303%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::alloc (3 samples, 0.12%)</title><rect x="2.8803%" y="517" width="0.1217%" height="15" fill="rgb(245,217,50)" fg:x="71" fg:w="3"/><text x="3.1303%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::read_volatile (3 samples, 0.12%)</title><rect x="2.8803%" y="501" width="0.1217%" height="15" fill="rgb(213,201,24)" fg:x="71" fg:w="3"/><text x="3.1303%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (3 samples, 0.12%)</title><rect x="2.8803%" y="485" width="0.1217%" height="15" fill="rgb(248,116,28)" fg:x="71" fg:w="3"/><text x="3.1303%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;std::sync::mutex::MutexGuard&lt;criterion::connection::Connection&gt; &gt; &gt;::is_some (1 samples, 0.04%)</title><rect x="2.9615%" y="469" width="0.0406%" height="15" fill="rgb(219,72,43)" fg:x="73" fg:w="1"/><text x="3.2115%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;clap_builder::builder::command::Command&gt; (1 samples, 0.04%)</title><rect x="2.9615%" y="453" width="0.0406%" height="15" fill="rgb(209,138,14)" fg:x="73" fg:w="1"/><text x="3.2115%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="2.9615%" y="437" width="0.0406%" height="15" fill="rgb(222,18,33)" fg:x="73" fg:w="1"/><text x="3.2115%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="2.9615%" y="421" width="0.0406%" height="15" fill="rgb(213,199,7)" fg:x="73" fg:w="1"/><text x="3.2115%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="2.9615%" y="405" width="0.0406%" height="15" fill="rgb(250,110,10)" fg:x="73" fg:w="1"/><text x="3.2115%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="2.9615%" y="389" width="0.0406%" height="15" fill="rgb(248,123,6)" fg:x="73" fg:w="1"/><text x="3.2115%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.04%)</title><rect x="2.9615%" y="373" width="0.0406%" height="15" fill="rgb(206,91,31)" fg:x="73" fg:w="1"/><text x="3.2115%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.04%)</title><rect x="2.9615%" y="357" width="0.0406%" height="15" fill="rgb(211,154,13)" fg:x="73" fg:w="1"/><text x="3.2115%" y="367.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.04%)</title><rect x="2.9615%" y="341" width="0.0406%" height="15" fill="rgb(225,148,7)" fg:x="73" fg:w="1"/><text x="3.2115%" y="351.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.04%)</title><rect x="2.9615%" y="325" width="0.0406%" height="15" fill="rgb(220,160,43)" fg:x="73" fg:w="1"/><text x="3.2115%" y="335.50"></text></g><g><title>`0x7FFE43949BE8 (1 samples, 0.04%)</title><rect x="2.9615%" y="309" width="0.0406%" height="15" fill="rgb(213,52,39)" fg:x="73" fg:w="1"/><text x="3.2115%" y="319.50"></text></g><g><title>`0x7FFE43954FDB (1 samples, 0.04%)</title><rect x="2.9615%" y="293" width="0.0406%" height="15" fill="rgb(243,137,7)" fg:x="73" fg:w="1"/><text x="3.2115%" y="303.50"></text></g><g><title>`0x7FFE439568BA (1 samples, 0.04%)</title><rect x="2.9615%" y="277" width="0.0406%" height="15" fill="rgb(230,79,13)" fg:x="73" fg:w="1"/><text x="3.2115%" y="287.50"></text></g><g><title>`0x7FFE43956968 (1 samples, 0.04%)</title><rect x="2.9615%" y="261" width="0.0406%" height="15" fill="rgb(247,105,23)" fg:x="73" fg:w="1"/><text x="3.2115%" y="271.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.04%)</title><rect x="2.9615%" y="245" width="0.0406%" height="15" fill="rgb(223,179,41)" fg:x="73" fg:w="1"/><text x="3.2115%" y="255.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.04%)</title><rect x="2.9615%" y="229" width="0.0406%" height="15" fill="rgb(218,9,34)" fg:x="73" fg:w="1"/><text x="3.2115%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::measurement::impl$2::end (1 samples, 0.04%)</title><rect x="3.0020%" y="405" width="0.0406%" height="15" fill="rgb(222,106,8)" fg:x="74" fg:w="1"/><text x="3.2520%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::time::Instant::elapsed (1 samples, 0.04%)</title><rect x="3.0020%" y="389" width="0.0406%" height="15" fill="rgb(211,220,0)" fg:x="74" fg:w="1"/><text x="3.2520%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::time::Instant::now (1 samples, 0.04%)</title><rect x="3.0020%" y="373" width="0.0406%" height="15" fill="rgb(229,52,16)" fg:x="74" fg:w="1"/><text x="3.2520%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::time::Instant::now (1 samples, 0.04%)</title><rect x="3.0020%" y="357" width="0.0406%" height="15" fill="rgb(212,155,18)" fg:x="74" fg:w="1"/><text x="3.2520%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::convert::impl$3::into (1 samples, 0.04%)</title><rect x="3.0020%" y="341" width="0.0406%" height="15" fill="rgb(242,21,14)" fg:x="74" fg:w="1"/><text x="3.2520%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::time::perf_counter::impl$1::from (1 samples, 0.04%)</title><rect x="3.0020%" y="325" width="0.0406%" height="15" fill="rgb(222,19,48)" fg:x="74" fg:w="1"/><text x="3.2520%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (161 samples, 6.53%)</title><rect x="3.0426%" y="373" width="6.5314%" height="15" fill="rgb(232,45,27)" fg:x="75" fg:w="161"/><text x="3.2926%" y="383.50">my_benchm..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (161 samples, 6.53%)</title><rect x="3.0426%" y="357" width="6.5314%" height="15" fill="rgb(249,103,42)" fg:x="75" fg:w="161"/><text x="3.2926%" y="367.50">my_benchm..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$76::lt (127 samples, 5.15%)</title><rect x="4.4219%" y="341" width="5.1521%" height="15" fill="rgb(246,81,33)" fg:x="109" fg:w="127"/><text x="4.6719%" y="351.50">my_ben..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$0::write_ram&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::ReadOnlyMemoryCartridge (56 samples, 2.27%)</title><rect x="7.3022%" y="325" width="2.2718%" height="15" fill="rgb(252,33,42)" fg:x="180" fg:w="56"/><text x="7.5522%" y="335.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt; &gt;(gb_core::gameboy::GameBoy (1 samples, 0.04%)</title><rect x="9.5740%" y="373" width="0.0406%" height="15" fill="rgb(209,212,41)" fg:x="236" fg:w="1"/><text x="9.8240%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="9.5740%" y="357" width="0.0406%" height="15" fill="rgb(207,154,6)" fg:x="236" fg:w="1"/><text x="9.8240%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="9.5740%" y="341" width="0.0406%" height="15" fill="rgb(223,64,47)" fg:x="236" fg:w="1"/><text x="9.8240%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (1 samples, 0.04%)</title><rect x="9.5740%" y="325" width="0.0406%" height="15" fill="rgb(211,161,38)" fg:x="236" fg:w="1"/><text x="9.8240%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (1 samples, 0.04%)</title><rect x="9.5740%" y="309" width="0.0406%" height="15" fill="rgb(219,138,40)" fg:x="236" fg:w="1"/><text x="9.8240%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place&lt;gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt; &gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.04%)</title><rect x="9.5740%" y="293" width="0.0406%" height="15" fill="rgb(241,228,46)" fg:x="236" fg:w="1"/><text x="9.8240%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(gb_core::hardware::rom::Rom (1 samples, 0.04%)</title><rect x="9.5740%" y="277" width="0.0406%" height="15" fill="rgb(223,209,38)" fg:x="236" fg:w="1"/><text x="9.8240%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (1 samples, 0.04%)</title><rect x="9.5740%" y="261" width="0.0406%" height="15" fill="rgb(236,164,45)" fg:x="236" fg:w="1"/><text x="9.8240%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.04%)</title><rect x="9.5740%" y="245" width="0.0406%" height="15" fill="rgb(231,15,5)" fg:x="236" fg:w="1"/><text x="9.8240%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="9.5740%" y="229" width="0.0406%" height="15" fill="rgb(252,35,15)" fg:x="236" fg:w="1"/><text x="9.8240%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (1 samples, 0.04%)</title><rect x="9.5740%" y="213" width="0.0406%" height="15" fill="rgb(248,181,18)" fg:x="236" fg:w="1"/><text x="9.8240%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (1 samples, 0.04%)</title><rect x="9.5740%" y="197" width="0.0406%" height="15" fill="rgb(233,39,42)" fg:x="236" fg:w="1"/><text x="9.8240%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (1 samples, 0.04%)</title><rect x="9.5740%" y="181" width="0.0406%" height="15" fill="rgb(238,110,33)" fg:x="236" fg:w="1"/><text x="9.8240%" y="191.50"></text></g><g><title>`0x7FFE4394AFD1 (1 samples, 0.04%)</title><rect x="9.5740%" y="165" width="0.0406%" height="15" fill="rgb(233,195,10)" fg:x="236" fg:w="1"/><text x="9.8240%" y="175.50"></text></g><g><title>`0x7FFE4394C304 (1 samples, 0.04%)</title><rect x="9.5740%" y="149" width="0.0406%" height="15" fill="rgb(254,105,3)" fg:x="236" fg:w="1"/><text x="9.8240%" y="159.50"></text></g><g><title>`0x7FFE4394A0EC (1 samples, 0.04%)</title><rect x="9.5740%" y="133" width="0.0406%" height="15" fill="rgb(221,225,9)" fg:x="236" fg:w="1"/><text x="9.8240%" y="143.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.04%)</title><rect x="9.5740%" y="117" width="0.0406%" height="15" fill="rgb(224,227,45)" fg:x="236" fg:w="1"/><text x="9.8240%" y="127.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.04%)</title><rect x="9.5740%" y="101" width="0.0406%" height="15" fill="rgb(229,198,43)" fg:x="236" fg:w="1"/><text x="9.8240%" y="111.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::impl$8::read_to_end (1 samples, 0.04%)</title><rect x="9.6146%" y="341" width="0.0406%" height="15" fill="rgb(206,209,35)" fg:x="237" fg:w="1"/><text x="9.8646%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::impl$5::read_to_end (1 samples, 0.04%)</title><rect x="9.6146%" y="325" width="0.0406%" height="15" fill="rgb(245,195,53)" fg:x="237" fg:w="1"/><text x="9.8646%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::option::Option::unwrap_or (1 samples, 0.04%)</title><rect x="9.6146%" y="309" width="0.0406%" height="15" fill="rgb(240,92,26)" fg:x="237" fg:w="1"/><text x="9.8646%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::try_reserve (1 samples, 0.04%)</title><rect x="9.6146%" y="293" width="0.0406%" height="15" fill="rgb(207,40,23)" fg:x="237" fg:w="1"/><text x="9.8646%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::try_reserve (1 samples, 0.04%)</title><rect x="9.6146%" y="277" width="0.0406%" height="15" fill="rgb(223,111,35)" fg:x="237" fg:w="1"/><text x="9.8646%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::grow_amortized (1 samples, 0.04%)</title><rect x="9.6146%" y="261" width="0.0406%" height="15" fill="rgb(229,147,28)" fg:x="237" fg:w="1"/><text x="9.8646%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.04%)</title><rect x="9.6146%" y="245" width="0.0406%" height="15" fill="rgb(211,29,28)" fg:x="237" fg:w="1"/><text x="9.8646%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (1 samples, 0.04%)</title><rect x="9.6146%" y="229" width="0.0406%" height="15" fill="rgb(228,72,33)" fg:x="237" fg:w="1"/><text x="9.8646%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::grow (1 samples, 0.04%)</title><rect x="9.6146%" y="213" width="0.0406%" height="15" fill="rgb(205,214,31)" fg:x="237" fg:w="1"/><text x="9.8646%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="9.6146%" y="197" width="0.0406%" height="15" fill="rgb(224,111,15)" fg:x="237" fg:w="1"/><text x="9.8646%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="9.6146%" y="181" width="0.0406%" height="15" fill="rgb(253,21,26)" fg:x="237" fg:w="1"/><text x="9.8646%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="9.6146%" y="165" width="0.0406%" height="15" fill="rgb(245,139,43)" fg:x="237" fg:w="1"/><text x="9.8646%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::alloc::__default_lib_allocator::__rdl_alloc (1 samples, 0.04%)</title><rect x="9.6146%" y="149" width="0.0406%" height="15" fill="rgb(252,170,7)" fg:x="237" fg:w="1"/><text x="9.8646%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::impl$0::alloc (1 samples, 0.04%)</title><rect x="9.6146%" y="133" width="0.0406%" height="15" fill="rgb(231,118,14)" fg:x="237" fg:w="1"/><text x="9.8646%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::alloc::windows::allocate (1 samples, 0.04%)</title><rect x="9.6146%" y="117" width="0.0406%" height="15" fill="rgb(238,83,0)" fg:x="237" fg:w="1"/><text x="9.8646%" y="127.50"></text></g><g><title>`0x7FFE4394D219 (1 samples, 0.04%)</title><rect x="9.6146%" y="101" width="0.0406%" height="15" fill="rgb(221,39,39)" fg:x="237" fg:w="1"/><text x="9.8646%" y="111.50"></text></g><g><title>`0x7FFE43950094 (1 samples, 0.04%)</title><rect x="9.6146%" y="85" width="0.0406%" height="15" fill="rgb(222,119,46)" fg:x="237" fg:w="1"/><text x="9.8646%" y="95.50"></text></g><g><title>`0x7FFE43992BEF (1 samples, 0.04%)</title><rect x="9.6146%" y="69" width="0.0406%" height="15" fill="rgb(222,165,49)" fg:x="237" fg:w="1"/><text x="9.8646%" y="79.50"></text></g><g><title>`0x7FFE43956AA6 (1 samples, 0.04%)</title><rect x="9.6146%" y="53" width="0.0406%" height="15" fill="rgb(219,113,52)" fg:x="237" fg:w="1"/><text x="9.8646%" y="63.50"></text></g><g><title>`0x7FFE439B0494 (1 samples, 0.04%)</title><rect x="9.6146%" y="37" width="0.0406%" height="15" fill="rgb(214,7,15)" fg:x="237" fg:w="1"/><text x="9.8646%" y="47.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;::and_then(enum2$&lt;core::result::Result (3 samples, 0.12%)</title><rect x="9.6146%" y="373" width="0.1217%" height="15" fill="rgb(235,32,4)" fg:x="237" fg:w="3"/><text x="9.8646%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci::closure$0 (3 samples, 0.12%)</title><rect x="9.6146%" y="357" width="0.1217%" height="15" fill="rgb(238,90,54)" fg:x="237" fg:w="3"/><text x="9.8646%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::default_read_to_end&lt;ref$&lt;std::fs::File&gt; &gt; (2 samples, 0.08%)</title><rect x="9.6552%" y="341" width="0.0811%" height="15" fill="rgb(213,208,19)" fg:x="238" fg:w="2"/><text x="9.9052%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::impl$5::read_buf (2 samples, 0.08%)</title><rect x="9.6552%" y="325" width="0.0811%" height="15" fill="rgb(233,156,4)" fg:x="238" fg:w="2"/><text x="9.9052%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::read_buf (2 samples, 0.08%)</title><rect x="9.6552%" y="309" width="0.0811%" height="15" fill="rgb(207,194,5)" fg:x="238" fg:w="2"/><text x="9.9052%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read_buf (2 samples, 0.08%)</title><rect x="9.6552%" y="293" width="0.0811%" height="15" fill="rgb(206,111,30)" fg:x="238" fg:w="2"/><text x="9.9052%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::synchronous_read (2 samples, 0.08%)</title><rect x="9.6552%" y="277" width="0.0811%" height="15" fill="rgb(243,70,54)" fg:x="238" fg:w="2"/><text x="9.9052%" y="287.50"></text></g><g><title>`0x7FFE439B0194 (2 samples, 0.08%)</title><rect x="9.6552%" y="261" width="0.0811%" height="15" fill="rgb(242,28,8)" fg:x="238" fg:w="2"/><text x="9.9052%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (3 samples, 0.12%)</title><rect x="18.4584%" y="325" width="0.1217%" height="15" fill="rgb(219,106,18)" fg:x="455" fg:w="3"/><text x="18.7084%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (15 samples, 0.61%)</title><rect x="18.5801%" y="325" width="0.6085%" height="15" fill="rgb(244,222,10)" fg:x="458" fg:w="15"/><text x="18.8301%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (4 samples, 0.16%)</title><rect x="19.0264%" y="309" width="0.1623%" height="15" fill="rgb(236,179,52)" fg:x="469" fg:w="4"/><text x="19.2764%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_sub (3 samples, 0.12%)</title><rect x="19.5132%" y="277" width="0.1217%" height="15" fill="rgb(213,23,39)" fg:x="481" fg:w="3"/><text x="19.7632%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_call&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (16 samples, 0.65%)</title><rect x="19.3103%" y="309" width="0.6491%" height="15" fill="rgb(238,48,10)" fg:x="476" fg:w="16"/><text x="19.5603%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (11 samples, 0.45%)</title><rect x="19.5132%" y="293" width="0.4462%" height="15" fill="rgb(251,196,23)" fg:x="481" fg:w="11"/><text x="19.7632%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte(gb_core::hardware::Hardware (8 samples, 0.32%)</title><rect x="19.6349%" y="277" width="0.3245%" height="15" fill="rgb(250,152,24)" fg:x="484" fg:w="8"/><text x="19.8849%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::write (3 samples, 0.12%)</title><rect x="19.8377%" y="261" width="0.1217%" height="15" fill="rgb(209,150,17)" fg:x="489" fg:w="3"/><text x="20.0877%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="20.2028%" y="293" width="0.0811%" height="15" fill="rgb(234,202,34)" fg:x="498" fg:w="2"/><text x="20.4528%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (12 samples, 0.49%)</title><rect x="19.9594%" y="309" width="0.4868%" height="15" fill="rgb(253,148,53)" fg:x="492" fg:w="12"/><text x="20.2094%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.16%)</title><rect x="20.2840%" y="293" width="0.1623%" height="15" fill="rgb(218,129,16)" fg:x="500" fg:w="4"/><text x="20.5340%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.08%)</title><rect x="20.3651%" y="277" width="0.0811%" height="15" fill="rgb(216,85,19)" fg:x="502" fg:w="2"/><text x="20.6151%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (2 samples, 0.08%)</title><rect x="20.6085%" y="293" width="0.0811%" height="15" fill="rgb(235,228,7)" fg:x="508" fg:w="2"/><text x="20.8585%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (2 samples, 0.08%)</title><rect x="20.6085%" y="277" width="0.0811%" height="15" fill="rgb(245,175,0)" fg:x="508" fg:w="2"/><text x="20.8585%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="20.6085%" y="261" width="0.0811%" height="15" fill="rgb(208,168,36)" fg:x="508" fg:w="2"/><text x="20.8585%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (1 samples, 0.04%)</title><rect x="20.6897%" y="277" width="0.0406%" height="15" fill="rgb(246,171,24)" fg:x="510" fg:w="1"/><text x="20.9397%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.04%)</title><rect x="20.6897%" y="261" width="0.0406%" height="15" fill="rgb(215,142,24)" fg:x="510" fg:w="1"/><text x="20.9397%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (3 samples, 0.12%)</title><rect x="20.7708%" y="261" width="0.1217%" height="15" fill="rgb(250,187,7)" fg:x="512" fg:w="3"/><text x="21.0208%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::call (48 samples, 1.95%)</title><rect x="19.1886%" y="325" width="1.9473%" height="15" fill="rgb(228,66,33)" fg:x="473" fg:w="48"/><text x="19.4386%" y="335.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (17 samples, 0.69%)</title><rect x="20.4462%" y="309" width="0.6897%" height="15" fill="rgb(234,215,21)" fg:x="504" fg:w="17"/><text x="20.6962%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (11 samples, 0.45%)</title><rect x="20.6897%" y="293" width="0.4462%" height="15" fill="rgb(222,191,20)" fg:x="510" fg:w="11"/><text x="20.9397%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (10 samples, 0.41%)</title><rect x="20.7302%" y="277" width="0.4057%" height="15" fill="rgb(245,79,54)" fg:x="511" fg:w="10"/><text x="20.9802%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (6 samples, 0.24%)</title><rect x="20.8925%" y="261" width="0.2434%" height="15" fill="rgb(240,10,37)" fg:x="515" fg:w="6"/><text x="21.1425%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.08%)</title><rect x="21.0548%" y="245" width="0.0811%" height="15" fill="rgb(214,192,32)" fg:x="519" fg:w="2"/><text x="21.3048%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::bit (4 samples, 0.16%)</title><rect x="21.2576%" y="309" width="0.1623%" height="15" fill="rgb(209,36,54)" fg:x="524" fg:w="4"/><text x="21.5076%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (4 samples, 0.16%)</title><rect x="21.2576%" y="293" width="0.1623%" height="15" fill="rgb(220,10,11)" fg:x="524" fg:w="4"/><text x="21.5076%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (1 samples, 0.04%)</title><rect x="21.4199%" y="309" width="0.0406%" height="15" fill="rgb(221,106,17)" fg:x="528" fg:w="1"/><text x="21.6699%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::sla&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.04%)</title><rect x="21.4604%" y="309" width="0.0406%" height="15" fill="rgb(251,142,44)" fg:x="529" fg:w="1"/><text x="21.7104%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="21.4604%" y="293" width="0.0406%" height="15" fill="rgb(238,13,15)" fg:x="529" fg:w="1"/><text x="21.7104%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_decode_execute&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (10 samples, 0.41%)</title><rect x="21.1359%" y="325" width="0.4057%" height="15" fill="rgb(208,107,27)" fg:x="521" fg:w="10"/><text x="21.3859%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::swap&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.04%)</title><rect x="21.5010%" y="309" width="0.0406%" height="15" fill="rgb(205,136,37)" fg:x="530" fg:w="1"/><text x="21.7510%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="21.5010%" y="293" width="0.0406%" height="15" fill="rgb(250,205,27)" fg:x="530" fg:w="1"/><text x="21.7510%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_prefix&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (11 samples, 0.45%)</title><rect x="21.5416%" y="325" width="0.4462%" height="15" fill="rgb(210,80,43)" fg:x="531" fg:w="11"/><text x="21.7916%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (7 samples, 0.28%)</title><rect x="21.7039%" y="309" width="0.2840%" height="15" fill="rgb(247,160,36)" fg:x="535" fg:w="7"/><text x="21.9539%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (7 samples, 0.28%)</title><rect x="21.7039%" y="293" width="0.2840%" height="15" fill="rgb(234,13,49)" fg:x="535" fg:w="7"/><text x="21.9539%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (7 samples, 0.28%)</title><rect x="21.7039%" y="277" width="0.2840%" height="15" fill="rgb(234,122,0)" fg:x="535" fg:w="7"/><text x="21.9539%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (3 samples, 0.12%)</title><rect x="21.8661%" y="261" width="0.1217%" height="15" fill="rgb(207,146,38)" fg:x="539" fg:w="3"/><text x="22.1161%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (10 samples, 0.41%)</title><rect x="22.4341%" y="293" width="0.4057%" height="15" fill="rgb(207,177,25)" fg:x="553" fg:w="10"/><text x="22.6841%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (9 samples, 0.37%)</title><rect x="22.8398%" y="293" width="0.3651%" height="15" fill="rgb(211,178,42)" fg:x="563" fg:w="9"/><text x="23.0898%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (4 samples, 0.16%)</title><rect x="23.0426%" y="277" width="0.1623%" height="15" fill="rgb(230,69,54)" fg:x="568" fg:w="4"/><text x="23.2926%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (30 samples, 1.22%)</title><rect x="22.0690%" y="309" width="1.2170%" height="15" fill="rgb(214,135,41)" fg:x="544" fg:w="30"/><text x="22.3190%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.08%)</title><rect x="23.2049%" y="293" width="0.0811%" height="15" fill="rgb(237,67,25)" fg:x="572" fg:w="2"/><text x="23.4549%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (1 samples, 0.04%)</title><rect x="23.3671%" y="261" width="0.0406%" height="15" fill="rgb(222,189,50)" fg:x="576" fg:w="1"/><text x="23.6171%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (1 samples, 0.04%)</title><rect x="23.3671%" y="245" width="0.0406%" height="15" fill="rgb(245,148,34)" fg:x="576" fg:w="1"/><text x="23.6171%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (4 samples, 0.16%)</title><rect x="23.2860%" y="309" width="0.1623%" height="15" fill="rgb(222,29,6)" fg:x="574" fg:w="4"/><text x="23.5360%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (4 samples, 0.16%)</title><rect x="23.2860%" y="293" width="0.1623%" height="15" fill="rgb(221,189,43)" fg:x="574" fg:w="4"/><text x="23.5360%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (4 samples, 0.16%)</title><rect x="23.2860%" y="277" width="0.1623%" height="15" fill="rgb(207,36,27)" fg:x="574" fg:w="4"/><text x="23.5360%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (1 samples, 0.04%)</title><rect x="23.4077%" y="261" width="0.0406%" height="15" fill="rgb(217,90,24)" fg:x="577" fg:w="1"/><text x="23.6577%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="23.4077%" y="245" width="0.0406%" height="15" fill="rgb(224,66,35)" fg:x="577" fg:w="1"/><text x="23.6577%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.04%)</title><rect x="23.4077%" y="229" width="0.0406%" height="15" fill="rgb(221,13,50)" fg:x="577" fg:w="1"/><text x="23.6577%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (1 samples, 0.04%)</title><rect x="23.6511%" y="293" width="0.0406%" height="15" fill="rgb(236,68,49)" fg:x="583" fg:w="1"/><text x="23.9011%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctrl_jr (7 samples, 0.28%)</title><rect x="23.6917%" y="293" width="0.2840%" height="15" fill="rgb(229,146,28)" fg:x="584" fg:w="7"/><text x="23.9417%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (6 samples, 0.24%)</title><rect x="24.0162%" y="261" width="0.2434%" height="15" fill="rgb(225,31,38)" fg:x="592" fg:w="6"/><text x="24.2662%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (68 samples, 2.76%)</title><rect x="21.9878%" y="325" width="2.7586%" height="15" fill="rgb(250,208,3)" fg:x="542" fg:w="68"/><text x="22.2378%" y="335.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jr_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (32 samples, 1.30%)</title><rect x="23.4483%" y="309" width="1.2982%" height="15" fill="rgb(246,54,23)" fg:x="578" fg:w="32"/><text x="23.6983%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (19 samples, 0.77%)</title><rect x="23.9757%" y="293" width="0.7708%" height="15" fill="rgb(243,76,11)" fg:x="591" fg:w="19"/><text x="24.2257%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (19 samples, 0.77%)</title><rect x="23.9757%" y="277" width="0.7708%" height="15" fill="rgb(245,21,50)" fg:x="591" fg:w="19"/><text x="24.2257%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (12 samples, 0.49%)</title><rect x="24.2596%" y="261" width="0.4868%" height="15" fill="rgb(228,9,43)" fg:x="598" fg:w="12"/><text x="24.5096%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.08%)</title><rect x="24.6653%" y="245" width="0.0811%" height="15" fill="rgb(208,100,47)" fg:x="608" fg:w="2"/><text x="24.9153%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cp&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (12 samples, 0.49%)</title><rect x="24.7465%" y="325" width="0.4868%" height="15" fill="rgb(232,26,8)" fg:x="610" fg:w="12"/><text x="24.9965%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::alu_sub (2 samples, 0.08%)</title><rect x="25.1521%" y="309" width="0.0811%" height="15" fill="rgb(216,166,38)" fg:x="620" fg:w="2"/><text x="25.4021%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.08%)</title><rect x="25.1521%" y="293" width="0.0811%" height="15" fill="rgb(251,202,51)" fg:x="620" fg:w="2"/><text x="25.4021%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::dec&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (1 samples, 0.04%)</title><rect x="25.2333%" y="325" width="0.0406%" height="15" fill="rgb(254,216,34)" fg:x="622" fg:w="1"/><text x="25.4833%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="25.2333%" y="309" width="0.0406%" height="15" fill="rgb(251,32,27)" fg:x="622" fg:w="1"/><text x="25.4833%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (38 samples, 1.54%)</title><rect x="27.8702%" y="309" width="1.5416%" height="15" fill="rgb(208,127,28)" fg:x="687" fg:w="38"/><text x="28.1202%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (54 samples, 2.19%)</title><rect x="29.4118%" y="309" width="2.1907%" height="15" fill="rgb(224,137,22)" fg:x="725" fg:w="54"/><text x="29.6618%" y="319.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (21 samples, 0.85%)</title><rect x="30.7505%" y="293" width="0.8519%" height="15" fill="rgb(254,70,32)" fg:x="758" fg:w="21"/><text x="31.0005%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (14 samples, 0.57%)</title><rect x="31.6024%" y="309" width="0.5680%" height="15" fill="rgb(229,75,37)" fg:x="779" fg:w="14"/><text x="31.8524%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (171 samples, 6.94%)</title><rect x="25.2738%" y="325" width="6.9371%" height="15" fill="rgb(252,64,23)" fg:x="623" fg:w="171"/><text x="25.5238%" y="335.50">my_benchm..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="32.1704%" y="309" width="0.0406%" height="15" fill="rgb(232,162,48)" fg:x="793" fg:w="1"/><text x="32.4204%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (1 samples, 0.04%)</title><rect x="32.1704%" y="293" width="0.0406%" height="15" fill="rgb(246,160,12)" fg:x="793" fg:w="1"/><text x="32.4204%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::inc16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (1 samples, 0.04%)</title><rect x="32.2110%" y="325" width="0.0406%" height="15" fill="rgb(247,166,0)" fg:x="794" fg:w="1"/><text x="32.4610%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$3::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="32.2110%" y="309" width="0.0406%" height="15" fill="rgb(249,219,21)" fg:x="794" fg:w="1"/><text x="32.4610%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_add (1 samples, 0.04%)</title><rect x="32.2515%" y="309" width="0.0406%" height="15" fill="rgb(205,209,3)" fg:x="795" fg:w="1"/><text x="32.5015%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::inc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (2 samples, 0.08%)</title><rect x="32.2515%" y="325" width="0.0811%" height="15" fill="rgb(243,44,1)" fg:x="795" fg:w="2"/><text x="32.5015%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="32.2921%" y="309" width="0.0406%" height="15" fill="rgb(206,159,16)" fg:x="796" fg:w="1"/><text x="32.5421%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp (2 samples, 0.08%)</title><rect x="32.3327%" y="325" width="0.0811%" height="15" fill="rgb(244,77,30)" fg:x="797" fg:w="2"/><text x="32.5827%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (2 samples, 0.08%)</title><rect x="32.4138%" y="277" width="0.0811%" height="15" fill="rgb(218,69,12)" fg:x="799" fg:w="2"/><text x="32.6638%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (2 samples, 0.08%)</title><rect x="32.4138%" y="261" width="0.0811%" height="15" fill="rgb(212,87,7)" fg:x="799" fg:w="2"/><text x="32.6638%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="32.4138%" y="245" width="0.0811%" height="15" fill="rgb(245,114,25)" fg:x="799" fg:w="2"/><text x="32.6638%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="32.4949%" y="245" width="0.0811%" height="15" fill="rgb(210,61,42)" fg:x="801" fg:w="2"/><text x="32.7449%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (5 samples, 0.20%)</title><rect x="32.4138%" y="293" width="0.2028%" height="15" fill="rgb(211,52,33)" fg:x="799" fg:w="5"/><text x="32.6638%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (3 samples, 0.12%)</title><rect x="32.4949%" y="277" width="0.1217%" height="15" fill="rgb(234,58,33)" fg:x="801" fg:w="3"/><text x="32.7449%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (3 samples, 0.12%)</title><rect x="32.4949%" y="261" width="0.1217%" height="15" fill="rgb(220,115,36)" fg:x="801" fg:w="3"/><text x="32.7449%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.04%)</title><rect x="32.5761%" y="245" width="0.0406%" height="15" fill="rgb(243,153,54)" fg:x="803" fg:w="1"/><text x="32.8261%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate16,gb_core::cpu::registers::Reg16&gt; (6 samples, 0.24%)</title><rect x="32.4138%" y="325" width="0.2434%" height="15" fill="rgb(251,47,18)" fg:x="799" fg:w="6"/><text x="32.6638%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (6 samples, 0.24%)</title><rect x="32.4138%" y="309" width="0.2434%" height="15" fill="rgb(242,102,42)" fg:x="799" fg:w="6"/><text x="32.6638%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_bc (1 samples, 0.04%)</title><rect x="32.6166%" y="293" width="0.0406%" height="15" fill="rgb(234,31,38)" fg:x="804" fg:w="1"/><text x="32.8666%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_a (5 samples, 0.20%)</title><rect x="32.6572%" y="293" width="0.2028%" height="15" fill="rgb(221,117,51)" fg:x="805" fg:w="5"/><text x="32.9072%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_b (3 samples, 0.12%)</title><rect x="32.8600%" y="293" width="0.1217%" height="15" fill="rgb(212,20,18)" fg:x="810" fg:w="3"/><text x="33.1100%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_e (5 samples, 0.20%)</title><rect x="32.9817%" y="293" width="0.2028%" height="15" fill="rgb(245,133,36)" fg:x="813" fg:w="5"/><text x="33.2317%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (1 samples, 0.04%)</title><rect x="33.5497%" y="261" width="0.0406%" height="15" fill="rgb(212,6,19)" fg:x="827" fg:w="1"/><text x="33.7997%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (6 samples, 0.24%)</title><rect x="33.5903%" y="261" width="0.2434%" height="15" fill="rgb(218,1,36)" fg:x="828" fg:w="6"/><text x="33.8403%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (9 samples, 0.37%)</title><rect x="33.8337%" y="261" width="0.3651%" height="15" fill="rgb(246,84,54)" fg:x="834" fg:w="9"/><text x="34.0837%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8 (41 samples, 1.66%)</title><rect x="32.6572%" y="325" width="1.6633%" height="15" fill="rgb(242,110,6)" fg:x="805" fg:w="41"/><text x="32.9072%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (41 samples, 1.66%)</title><rect x="32.6572%" y="309" width="1.6633%" height="15" fill="rgb(214,47,5)" fg:x="805" fg:w="41"/><text x="32.9072%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_l (28 samples, 1.14%)</title><rect x="33.1846%" y="293" width="1.1359%" height="15" fill="rgb(218,159,25)" fg:x="818" fg:w="28"/><text x="33.4346%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (25 samples, 1.01%)</title><rect x="33.3063%" y="277" width="1.0142%" height="15" fill="rgb(215,211,28)" fg:x="821" fg:w="25"/><text x="33.5563%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (3 samples, 0.12%)</title><rect x="34.1988%" y="261" width="0.1217%" height="15" fill="rgb(238,59,32)" fg:x="843" fg:w="3"/><text x="34.4488%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="36.1055%" y="245" width="0.0811%" height="15" fill="rgb(226,82,3)" fg:x="890" fg:w="2"/><text x="36.3555%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (7 samples, 0.28%)</title><rect x="36.1055%" y="277" width="0.2840%" height="15" fill="rgb(240,164,32)" fg:x="890" fg:w="7"/><text x="36.3555%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (7 samples, 0.28%)</title><rect x="36.1055%" y="261" width="0.2840%" height="15" fill="rgb(232,46,7)" fg:x="890" fg:w="7"/><text x="36.3555%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.20%)</title><rect x="36.1866%" y="245" width="0.2028%" height="15" fill="rgb(229,129,53)" fg:x="892" fg:w="5"/><text x="36.4366%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.04%)</title><rect x="36.4300%" y="245" width="0.0406%" height="15" fill="rgb(234,188,29)" fg:x="898" fg:w="1"/><text x="36.6800%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (14 samples, 0.57%)</title><rect x="36.0649%" y="293" width="0.5680%" height="15" fill="rgb(246,141,4)" fg:x="889" fg:w="14"/><text x="36.3149%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (6 samples, 0.24%)</title><rect x="36.3895%" y="277" width="0.2434%" height="15" fill="rgb(229,23,39)" fg:x="897" fg:w="6"/><text x="36.6395%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (6 samples, 0.24%)</title><rect x="36.3895%" y="261" width="0.2434%" height="15" fill="rgb(206,12,3)" fg:x="897" fg:w="6"/><text x="36.6395%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.16%)</title><rect x="36.4706%" y="245" width="0.1623%" height="15" fill="rgb(252,226,20)" fg:x="899" fg:w="4"/><text x="36.7206%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (3 samples, 0.12%)</title><rect x="36.6329%" y="261" width="0.1217%" height="15" fill="rgb(216,123,35)" fg:x="903" fg:w="3"/><text x="36.8829%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (1 samples, 0.04%)</title><rect x="36.7546%" y="261" width="0.0406%" height="15" fill="rgb(212,68,40)" fg:x="906" fg:w="1"/><text x="37.0046%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (5 samples, 0.20%)</title><rect x="36.6329%" y="293" width="0.2028%" height="15" fill="rgb(254,125,32)" fg:x="903" fg:w="5"/><text x="36.8829%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (5 samples, 0.20%)</title><rect x="36.6329%" y="277" width="0.2028%" height="15" fill="rgb(253,97,22)" fg:x="903" fg:w="5"/><text x="36.8829%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="36.7951%" y="261" width="0.0406%" height="15" fill="rgb(241,101,14)" fg:x="907" fg:w="1"/><text x="37.0451%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (6 samples, 0.24%)</title><rect x="36.8357%" y="293" width="0.2434%" height="15" fill="rgb(238,103,29)" fg:x="908" fg:w="6"/><text x="37.0857%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (13 samples, 0.53%)</title><rect x="37.0791%" y="293" width="0.5274%" height="15" fill="rgb(233,195,47)" fg:x="914" fg:w="13"/><text x="37.3291%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.04%)</title><rect x="37.5659%" y="277" width="0.0406%" height="15" fill="rgb(246,218,30)" fg:x="926" fg:w="1"/><text x="37.8159%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$10::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (76 samples, 3.08%)</title><rect x="35.0913%" y="309" width="3.0832%" height="15" fill="rgb(219,145,47)" fg:x="865" fg:w="76"/><text x="35.3413%" y="319.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (14 samples, 0.57%)</title><rect x="37.6065%" y="293" width="0.5680%" height="15" fill="rgb(243,12,26)" fg:x="927" fg:w="14"/><text x="37.8565%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt;,gb_core::cpu::registers::Reg8&gt;(gb_core::cpu::registers::Reg8, enum2$ (104 samples, 4.22%)</title><rect x="34.3205%" y="325" width="4.2191%" height="15" fill="rgb(214,87,16)" fg:x="846" fg:w="104"/><text x="34.5705%" y="335.50">my_be..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (9 samples, 0.37%)</title><rect x="38.1744%" y="309" width="0.3651%" height="15" fill="rgb(208,99,42)" fg:x="941" fg:w="9"/><text x="38.4244%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_a (1 samples, 0.04%)</title><rect x="38.4990%" y="293" width="0.0406%" height="15" fill="rgb(253,99,2)" fg:x="949" fg:w="1"/><text x="38.7490%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (2 samples, 0.08%)</title><rect x="38.7018%" y="293" width="0.0811%" height="15" fill="rgb(220,168,23)" fg:x="954" fg:w="2"/><text x="38.9518%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (2 samples, 0.08%)</title><rect x="38.7018%" y="277" width="0.0811%" height="15" fill="rgb(242,38,24)" fg:x="954" fg:w="2"/><text x="38.9518%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.08%)</title><rect x="38.7018%" y="261" width="0.0811%" height="15" fill="rgb(225,182,9)" fg:x="954" fg:w="2"/><text x="38.9518%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8,gb_core::cpu::registers::Reg8&gt; (8 samples, 0.32%)</title><rect x="38.5396%" y="325" width="0.3245%" height="15" fill="rgb(243,178,37)" fg:x="950" fg:w="8"/><text x="38.7896%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (6 samples, 0.24%)</title><rect x="38.6207%" y="309" width="0.2434%" height="15" fill="rgb(232,139,19)" fg:x="952" fg:w="6"/><text x="38.8707%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="38.7830%" y="293" width="0.0811%" height="15" fill="rgb(225,201,24)" fg:x="956" fg:w="2"/><text x="39.0330%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.04%)</title><rect x="38.8235%" y="277" width="0.0406%" height="15" fill="rgb(221,47,46)" fg:x="957" fg:w="1"/><text x="39.0735%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (2 samples, 0.08%)</title><rect x="39.5943%" y="261" width="0.0811%" height="15" fill="rgb(249,23,13)" fg:x="976" fg:w="2"/><text x="39.8443%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="39.7566%" y="245" width="0.0811%" height="15" fill="rgb(219,9,5)" fg:x="980" fg:w="2"/><text x="40.0066%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (16 samples, 0.65%)</title><rect x="39.5943%" y="293" width="0.6491%" height="15" fill="rgb(254,171,16)" fg:x="976" fg:w="16"/><text x="39.8443%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (16 samples, 0.65%)</title><rect x="39.5943%" y="277" width="0.6491%" height="15" fill="rgb(230,171,20)" fg:x="976" fg:w="16"/><text x="39.8443%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (14 samples, 0.57%)</title><rect x="39.6755%" y="261" width="0.5680%" height="15" fill="rgb(210,71,41)" fg:x="978" fg:w="14"/><text x="39.9255%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (10 samples, 0.41%)</title><rect x="39.8377%" y="245" width="0.4057%" height="15" fill="rgb(206,173,20)" fg:x="982" fg:w="10"/><text x="40.0877%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.04%)</title><rect x="40.2028%" y="229" width="0.0406%" height="15" fill="rgb(233,88,34)" fg:x="991" fg:w="1"/><text x="40.4528%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_hl (1 samples, 0.04%)</title><rect x="40.2434%" y="293" width="0.0406%" height="15" fill="rgb(223,209,46)" fg:x="992" fg:w="1"/><text x="40.4934%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="40.9331%" y="229" width="0.0811%" height="15" fill="rgb(250,43,18)" fg:x="1009" fg:w="2"/><text x="41.1831%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (7 samples, 0.28%)</title><rect x="40.9331%" y="261" width="0.2840%" height="15" fill="rgb(208,13,10)" fg:x="1009" fg:w="7"/><text x="41.1831%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (7 samples, 0.28%)</title><rect x="40.9331%" y="245" width="0.2840%" height="15" fill="rgb(212,200,36)" fg:x="1009" fg:w="7"/><text x="41.1831%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.20%)</title><rect x="41.0142%" y="229" width="0.2028%" height="15" fill="rgb(225,90,30)" fg:x="1011" fg:w="5"/><text x="41.2642%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (2 samples, 0.08%)</title><rect x="41.1359%" y="213" width="0.0811%" height="15" fill="rgb(236,182,39)" fg:x="1014" fg:w="2"/><text x="41.3859%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (3 samples, 0.12%)</title><rect x="41.2170%" y="229" width="0.1217%" height="15" fill="rgb(212,144,35)" fg:x="1016" fg:w="3"/><text x="41.4670%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (14 samples, 0.57%)</title><rect x="40.9331%" y="277" width="0.5680%" height="15" fill="rgb(228,63,44)" fg:x="1009" fg:w="14"/><text x="41.1831%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (7 samples, 0.28%)</title><rect x="41.2170%" y="261" width="0.2840%" height="15" fill="rgb(228,109,6)" fg:x="1016" fg:w="7"/><text x="41.4670%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (7 samples, 0.28%)</title><rect x="41.2170%" y="245" width="0.2840%" height="15" fill="rgb(238,117,24)" fg:x="1016" fg:w="7"/><text x="41.4670%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.16%)</title><rect x="41.3387%" y="229" width="0.1623%" height="15" fill="rgb(242,26,26)" fg:x="1019" fg:w="4"/><text x="41.5887%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (1 samples, 0.04%)</title><rect x="41.4604%" y="213" width="0.0406%" height="15" fill="rgb(221,92,48)" fg:x="1022" fg:w="1"/><text x="41.7104%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (2 samples, 0.08%)</title><rect x="41.5010%" y="261" width="0.0811%" height="15" fill="rgb(209,209,32)" fg:x="1023" fg:w="2"/><text x="41.7510%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (1 samples, 0.04%)</title><rect x="41.5416%" y="245" width="0.0406%" height="15" fill="rgb(221,70,22)" fg:x="1024" fg:w="1"/><text x="41.7916%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;::transfer_dma&lt;my_benchmark::DummyScreen&gt; (4 samples, 0.16%)</title><rect x="41.5010%" y="277" width="0.1623%" height="15" fill="rgb(248,145,5)" fg:x="1023" fg:w="4"/><text x="41.7510%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::write_oam (2 samples, 0.08%)</title><rect x="41.5822%" y="261" width="0.0811%" height="15" fill="rgb(226,116,26)" fg:x="1025" fg:w="2"/><text x="41.8322%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::write_ram&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.16%)</title><rect x="41.6633%" y="277" width="0.1623%" height="15" fill="rgb(244,5,17)" fg:x="1027" fg:w="4"/><text x="41.9133%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::set_byte(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.04%)</title><rect x="41.7850%" y="261" width="0.0406%" height="15" fill="rgb(252,159,33)" fg:x="1030" fg:w="1"/><text x="42.0350%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(enum2$ (74 samples, 3.00%)</title><rect x="38.8641%" y="325" width="3.0020%" height="15" fill="rgb(206,71,0)" fg:x="958" fg:w="74"/><text x="39.1141%" y="335.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$9::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (64 samples, 2.60%)</title><rect x="39.2698%" y="309" width="2.5963%" height="15" fill="rgb(233,118,54)" fg:x="968" fg:w="64"/><text x="39.5198%" y="319.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte(gb_core::hardware::Hardware (39 samples, 1.58%)</title><rect x="40.2840%" y="293" width="1.5822%" height="15" fill="rgb(234,83,48)" fg:x="993" fg:w="39"/><text x="40.5340%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::impl$3::set_byte (1 samples, 0.04%)</title><rect x="41.8256%" y="277" width="0.0406%" height="15" fill="rgb(228,3,54)" fg:x="1031" fg:w="1"/><text x="42.0756%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (7 samples, 0.28%)</title><rect x="42.1095%" y="309" width="0.2840%" height="15" fill="rgb(226,155,13)" fg:x="1038" fg:w="7"/><text x="42.3595%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (4 samples, 0.16%)</title><rect x="42.2312%" y="293" width="0.1623%" height="15" fill="rgb(241,28,37)" fg:x="1041" fg:w="4"/><text x="42.4812%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (2 samples, 0.08%)</title><rect x="42.3124%" y="277" width="0.0811%" height="15" fill="rgb(233,93,10)" fg:x="1043" fg:w="2"/><text x="42.5624%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (18 samples, 0.73%)</title><rect x="41.8661%" y="325" width="0.7302%" height="15" fill="rgb(225,113,19)" fg:x="1032" fg:w="18"/><text x="42.1161%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (5 samples, 0.20%)</title><rect x="42.3935%" y="309" width="0.2028%" height="15" fill="rgb(241,2,18)" fg:x="1045" fg:w="5"/><text x="42.6435%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_af (3 samples, 0.12%)</title><rect x="42.4746%" y="293" width="0.1217%" height="15" fill="rgb(228,207,21)" fg:x="1047" fg:w="3"/><text x="42.7246%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::flags::Flags::set_value (2 samples, 0.08%)</title><rect x="42.5152%" y="277" width="0.0811%" height="15" fill="rgb(213,211,35)" fg:x="1048" fg:w="2"/><text x="42.7652%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_sub (2 samples, 0.08%)</title><rect x="42.6775%" y="293" width="0.0811%" height="15" fill="rgb(209,83,10)" fg:x="1052" fg:w="2"/><text x="42.9275%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (9 samples, 0.37%)</title><rect x="42.6369%" y="309" width="0.3651%" height="15" fill="rgb(209,164,1)" fg:x="1051" fg:w="9"/><text x="42.8869%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte(gb_core::hardware::Hardware (6 samples, 0.24%)</title><rect x="42.7586%" y="293" width="0.2434%" height="15" fill="rgb(213,184,43)" fg:x="1054" fg:w="6"/><text x="43.0086%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::write (2 samples, 0.08%)</title><rect x="42.9209%" y="277" width="0.0811%" height="15" fill="rgb(231,61,34)" fg:x="1058" fg:w="2"/><text x="43.1709%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (11 samples, 0.45%)</title><rect x="42.5963%" y="325" width="0.4462%" height="15" fill="rgb(235,75,3)" fg:x="1050" fg:w="11"/><text x="42.8463%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$3::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (1 samples, 0.04%)</title><rect x="43.0020%" y="309" width="0.0406%" height="15" fill="rgb(220,106,47)" fg:x="1060" fg:w="1"/><text x="43.2520%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_af (1 samples, 0.04%)</title><rect x="43.0020%" y="293" width="0.0406%" height="15" fill="rgb(210,196,33)" fg:x="1060" fg:w="1"/><text x="43.2520%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::flags::Flags::read_value (1 samples, 0.04%)</title><rect x="43.0020%" y="277" width="0.0406%" height="15" fill="rgb(229,154,42)" fg:x="1060" fg:w="1"/><text x="43.2520%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (1 samples, 0.04%)</title><rect x="43.4888%" y="277" width="0.0406%" height="15" fill="rgb(228,114,26)" fg:x="1072" fg:w="1"/><text x="43.7388%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (1 samples, 0.04%)</title><rect x="43.4888%" y="261" width="0.0406%" height="15" fill="rgb(208,144,1)" fg:x="1072" fg:w="1"/><text x="43.7388%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret (18 samples, 0.73%)</title><rect x="43.0426%" y="325" width="0.7302%" height="15" fill="rgb(239,112,37)" fg:x="1061" fg:w="18"/><text x="43.2926%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (18 samples, 0.73%)</title><rect x="43.0426%" y="309" width="0.7302%" height="15" fill="rgb(210,96,50)" fg:x="1061" fg:w="18"/><text x="43.2926%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (14 samples, 0.57%)</title><rect x="43.2049%" y="293" width="0.5680%" height="15" fill="rgb(222,178,2)" fg:x="1065" fg:w="14"/><text x="43.4549%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (6 samples, 0.24%)</title><rect x="43.5294%" y="277" width="0.2434%" height="15" fill="rgb(226,74,18)" fg:x="1073" fg:w="6"/><text x="43.7794%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (5 samples, 0.20%)</title><rect x="43.5700%" y="261" width="0.2028%" height="15" fill="rgb(225,67,54)" fg:x="1074" fg:w="5"/><text x="43.8200%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (2 samples, 0.08%)</title><rect x="43.8945%" y="309" width="0.0811%" height="15" fill="rgb(251,92,32)" fg:x="1082" fg:w="2"/><text x="44.1445%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (10 samples, 0.41%)</title><rect x="43.7728%" y="325" width="0.4057%" height="15" fill="rgb(228,149,22)" fg:x="1079" fg:w="10"/><text x="44.0228%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (5 samples, 0.20%)</title><rect x="43.9757%" y="309" width="0.2028%" height="15" fill="rgb(243,54,13)" fg:x="1084" fg:w="5"/><text x="44.2257%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (5 samples, 0.20%)</title><rect x="43.9757%" y="293" width="0.2028%" height="15" fill="rgb(243,180,28)" fg:x="1084" fg:w="5"/><text x="44.2257%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte(gb_core::hardware::Hardware (3 samples, 0.12%)</title><rect x="44.0568%" y="277" width="0.1217%" height="15" fill="rgb(208,167,24)" fg:x="1086" fg:w="3"/><text x="44.3068%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::work_ram::WorkRam::read (1 samples, 0.04%)</title><rect x="44.1379%" y="261" width="0.0406%" height="15" fill="rgb(245,73,45)" fg:x="1088" fg:w="1"/><text x="44.3879%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::read_rom&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (1 samples, 0.04%)</title><rect x="44.3002%" y="293" width="0.0406%" height="15" fill="rgb(237,203,48)" fg:x="1092" fg:w="1"/><text x="44.5502%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rst (6 samples, 0.24%)</title><rect x="44.1785%" y="325" width="0.2434%" height="15" fill="rgb(211,197,16)" fg:x="1089" fg:w="6"/><text x="44.4285%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (6 samples, 0.24%)</title><rect x="44.1785%" y="309" width="0.2434%" height="15" fill="rgb(243,99,51)" fg:x="1089" fg:w="6"/><text x="44.4285%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (2 samples, 0.08%)</title><rect x="44.3408%" y="293" width="0.0811%" height="15" fill="rgb(215,123,29)" fg:x="1093" fg:w="2"/><text x="44.5908%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::step (818 samples, 33.18%)</title><rect x="11.4402%" y="357" width="33.1846%" height="15" fill="rgb(239,186,37)" fg:x="282" fg:w="818"/><text x="11.6902%" y="367.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::addres..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::decode&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (776 samples, 31.48%)</title><rect x="13.1440%" y="341" width="31.4807%" height="15" fill="rgb(252,136,39)" fg:x="324" fg:w="776"/><text x="13.3940%" y="351.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::add..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::xor&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (5 samples, 0.20%)</title><rect x="44.4219%" y="325" width="0.2028%" height="15" fill="rgb(223,213,32)" fg:x="1095" fg:w="5"/><text x="44.6719%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::InputController::update_state (14 samples, 0.57%)</title><rect x="44.6247%" y="357" width="0.5680%" height="15" fill="rgb(233,115,5)" fg:x="1100" fg:w="14"/><text x="44.8747%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::impl$9::clone (10 samples, 0.41%)</title><rect x="44.7870%" y="341" width="0.4057%" height="15" fill="rgb(207,226,44)" fg:x="1104" fg:w="10"/><text x="45.0370%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_mul (1 samples, 0.04%)</title><rect x="49.2901%" y="261" width="0.0406%" height="15" fill="rgb(208,126,0)" fg:x="1215" fg:w="1"/><text x="49.5401%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (3 samples, 0.12%)</title><rect x="49.3306%" y="261" width="0.1217%" height="15" fill="rgb(244,66,21)" fg:x="1216" fg:w="3"/><text x="49.5806%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::request (8 samples, 0.32%)</title><rect x="49.2901%" y="341" width="0.3245%" height="15" fill="rgb(222,97,12)" fg:x="1215" fg:w="8"/><text x="49.5401%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptLine::insert (8 samples, 0.32%)</title><rect x="49.2901%" y="325" width="0.3245%" height="15" fill="rgb(219,213,19)" fg:x="1215" fg:w="8"/><text x="49.5401%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::_::InternalBitFlags::insert (8 samples, 0.32%)</title><rect x="49.2901%" y="309" width="0.3245%" height="15" fill="rgb(252,169,30)" fg:x="1215" fg:w="8"/><text x="49.5401%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (8 samples, 0.32%)</title><rect x="49.2901%" y="293" width="0.3245%" height="15" fill="rgb(206,32,51)" fg:x="1215" fg:w="8"/><text x="49.5401%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_window_pixel (8 samples, 0.32%)</title><rect x="49.2901%" y="277" width="0.3245%" height="15" fill="rgb(250,172,42)" fg:x="1215" fg:w="8"/><text x="49.5401%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (4 samples, 0.16%)</title><rect x="49.4523%" y="261" width="0.1623%" height="15" fill="rgb(209,34,43)" fg:x="1219" fg:w="4"/><text x="49.7023%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (33 samples, 1.34%)</title><rect x="52.7789%" y="325" width="1.3387%" height="15" fill="rgb(223,11,35)" fg:x="1301" fg:w="33"/><text x="53.0289%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (33 samples, 1.34%)</title><rect x="52.7789%" y="309" width="1.3387%" height="15" fill="rgb(251,219,26)" fg:x="1301" fg:w="33"/><text x="53.0289%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$58::lt (33 samples, 1.34%)</title><rect x="52.7789%" y="293" width="1.3387%" height="15" fill="rgb(231,119,3)" fg:x="1301" fg:w="33"/><text x="53.0289%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::saturating_sub (2 samples, 0.08%)</title><rect x="54.1176%" y="325" width="0.0811%" height="15" fill="rgb(216,97,11)" fg:x="1334" fg:w="2"/><text x="54.3676%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_pixel (81 samples, 3.29%)</title><rect x="54.1988%" y="325" width="3.2860%" height="15" fill="rgb(223,59,9)" fg:x="1336" fg:w="81"/><text x="54.4488%" y="335.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;gb_core::hardware::color_palette::ColorPalette&gt;::background (81 samples, 3.29%)</title><rect x="54.1988%" y="309" width="3.2860%" height="15" fill="rgb(233,93,31)" fg:x="1336" fg:w="81"/><text x="54.4488%" y="319.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_mul (10 samples, 0.41%)</title><rect x="59.1481%" y="309" width="0.4057%" height="15" fill="rgb(239,81,33)" fg:x="1458" fg:w="10"/><text x="59.3981%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;gb_core::hardware::color_palette::ColorPalette&gt;::window (44 samples, 1.78%)</title><rect x="59.5538%" y="309" width="1.7850%" height="15" fill="rgb(213,120,34)" fg:x="1468" fg:w="44"/><text x="59.8038%" y="319.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;gb_core::hardware::color_palette::ColorPalette&gt;::background (44 samples, 1.78%)</title><rect x="59.5538%" y="293" width="1.7850%" height="15" fill="rgb(243,49,53)" fg:x="1468" fg:w="44"/><text x="59.8038%" y="303.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (100 samples, 4.06%)</title><rect x="61.3387%" y="309" width="4.0568%" height="15" fill="rgb(247,216,33)" fg:x="1512" fg:w="100"/><text x="61.5887%" y="319.50">my_b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (100 samples, 4.06%)</title><rect x="61.3387%" y="293" width="4.0568%" height="15" fill="rgb(226,26,14)" fg:x="1512" fg:w="100"/><text x="61.5887%" y="303.50">my_b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::bits (100 samples, 4.06%)</title><rect x="61.3387%" y="277" width="4.0568%" height="15" fill="rgb(215,49,53)" fg:x="1512" fg:w="100"/><text x="61.5887%" y="287.50">my_b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (113 samples, 4.58%)</title><rect x="65.3955%" y="309" width="4.5842%" height="15" fill="rgb(245,162,40)" fg:x="1612" fg:w="113"/><text x="65.6455%" y="319.50">my_be..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (10 samples, 0.41%)</title><rect x="69.5740%" y="293" width="0.4057%" height="15" fill="rgb(229,68,17)" fg:x="1715" fg:w="10"/><text x="69.8240%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (10 samples, 0.41%)</title><rect x="69.5740%" y="277" width="0.4057%" height="15" fill="rgb(213,182,10)" fg:x="1715" fg:w="10"/><text x="69.8240%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_window_pixel (934 samples, 37.89%)</title><rect x="57.4848%" y="325" width="37.8905%" height="15" fill="rgb(245,125,30)" fg:x="1417" fg:w="934"/><text x="57.7348%" y="335.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (626 samples, 25.40%)</title><rect x="69.9797%" y="309" width="25.3955%" height="15" fill="rgb(232,202,2)" fg:x="1725" fg:w="626"/><text x="70.2297%" y="319.50">my_benchmark-c9a97925f9d084bf.exe`gb_core..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::bit (5 samples, 0.20%)</title><rect x="95.1724%" y="293" width="0.2028%" height="15" fill="rgb(237,140,51)" fg:x="2346" fg:w="5"/><text x="95.4224%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$779::shr (5 samples, 0.20%)</title><rect x="95.1724%" y="277" width="0.2028%" height="15" fill="rgb(236,157,25)" fg:x="2346" fg:w="5"/><text x="95.4224%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.45%)</title><rect x="95.4158%" y="245" width="0.4462%" height="15" fill="rgb(219,209,0)" fg:x="2352" fg:w="11"/><text x="95.6658%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.45%)</title><rect x="95.4158%" y="229" width="0.4462%" height="15" fill="rgb(240,116,54)" fg:x="2352" fg:w="11"/><text x="95.6658%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.45%)</title><rect x="95.4158%" y="213" width="0.4462%" height="15" fill="rgb(216,10,36)" fg:x="2352" fg:w="11"/><text x="95.6658%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::find(core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;*, gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (11 samples, 0.45%)</title><rect x="95.4158%" y="197" width="0.4462%" height="15" fill="rgb(222,72,44)" fg:x="2352" fg:w="11"/><text x="95.6658%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::impls::impl$3::call_mut(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (5 samples, 0.20%)</title><rect x="95.6592%" y="181" width="0.2028%" height="15" fill="rgb(232,159,9)" fg:x="2358" fg:w="5"/><text x="95.9092%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::impl$1::draw_sprites::closure$0(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (5 samples, 0.20%)</title><rect x="95.6592%" y="165" width="0.2028%" height="15" fill="rgb(210,39,32)" fg:x="2358" fg:w="5"/><text x="95.9092%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_sub (2 samples, 0.08%)</title><rect x="95.7809%" y="149" width="0.0811%" height="15" fill="rgb(216,194,45)" fg:x="2361" fg:w="2"/><text x="96.0309%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (1,141 samples, 46.29%)</title><rect x="49.6146%" y="341" width="46.2880%" height="15" fill="rgb(218,18,35)" fg:x="1223" fg:w="1141"/><text x="49.8646%" y="351.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_sprites (13 samples, 0.53%)</title><rect x="95.3753%" y="325" width="0.5274%" height="15" fill="rgb(207,83,51)" fg:x="2351" fg:w="13"/><text x="95.6253%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.49%)</title><rect x="95.4158%" y="309" width="0.4868%" height="15" fill="rgb(225,63,43)" fg:x="2352" fg:w="12"/><text x="95.6658%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$26::from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.49%)</title><rect x="95.4158%" y="293" width="0.4868%" height="15" fill="rgb(207,57,36)" fg:x="2352" fg:w="12"/><text x="95.6658%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$24::extend(arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;*, core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.49%)</title><rect x="95.4158%" y="277" width="0.4868%" height="15" fill="rgb(216,99,33)" fg:x="2352" fg:w="12"/><text x="95.6658%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;::extend_from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (12 samples, 0.49%)</title><rect x="95.4158%" y="261" width="0.4868%" height="15" fill="rgb(225,42,16)" fg:x="2352" fg:w="12"/><text x="95.6658%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;*, tuple$&lt;usize,ref$ (1 samples, 0.04%)</title><rect x="95.8621%" y="245" width="0.0406%" height="15" fill="rgb(220,201,45)" fg:x="2363" fg:w="1"/><text x="96.1121%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::write(tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;*, tuple$&lt;usize,ref$ (1 samples, 0.04%)</title><rect x="95.8621%" y="229" width="0.0406%" height="15" fill="rgb(225,33,4)" fg:x="2363" fg:w="1"/><text x="96.1121%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_to_screen (1 samples, 0.04%)</title><rect x="95.9026%" y="341" width="0.0406%" height="15" fill="rgb(224,33,50)" fg:x="2364" fg:w="1"/><text x="96.1526%" y="351.50"></text></g><g><title>`0x7FFE4102F220 (1 samples, 0.04%)</title><rect x="95.9026%" y="325" width="0.0406%" height="15" fill="rgb(246,198,51)" fg:x="2364" fg:w="1"/><text x="96.1526%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_current_mode_sec (1 samples, 0.04%)</title><rect x="96.7546%" y="325" width="0.0406%" height="15" fill="rgb(205,22,4)" fg:x="2385" fg:w="1"/><text x="97.0046%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::step (1,280 samples, 51.93%)</title><rect x="45.1927%" y="357" width="51.9270%" height="15" fill="rgb(206,3,8)" fg:x="1114" fg:w="1280"/><text x="45.4427%" y="367.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScree..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_lcd_stat_interrupts (29 samples, 1.18%)</title><rect x="95.9432%" y="341" width="1.1765%" height="15" fill="rgb(251,23,15)" fg:x="2365" fg:w="29"/><text x="96.1932%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Stat::contains (8 samples, 0.32%)</title><rect x="96.7951%" y="325" width="0.3245%" height="15" fill="rgb(252,88,28)" fg:x="2386" fg:w="8"/><text x="97.0451%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (8 samples, 0.32%)</title><rect x="96.7951%" y="309" width="0.3245%" height="15" fill="rgb(212,127,14)" fg:x="2386" fg:w="8"/><text x="97.0451%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::do_cycle (5 samples, 0.20%)</title><rect x="97.1197%" y="357" width="0.2028%" height="15" fill="rgb(247,145,37)" fg:x="2394" fg:w="5"/><text x="97.3697%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick (2,193 samples, 88.97%)</title><rect x="9.7363%" y="373" width="88.9655%" height="15" fill="rgb(209,117,53)" fg:x="240" fg:w="2193"/><text x="9.9863%" y="383.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::timer::Timer::do_cycle (34 samples, 1.38%)</title><rect x="97.3225%" y="357" width="1.3793%" height="15" fill="rgb(212,90,42)" fg:x="2399" fg:w="34"/><text x="97.5725%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::rom::Rom&lt;my_benchmark::ByteRomManager&gt;::into_cartridge(gb_core::hardware::rom::Rom (1 samples, 0.04%)</title><rect x="98.7018%" y="373" width="0.0406%" height="15" fill="rgb(218,164,37)" fg:x="2433" fg:w="1"/><text x="98.9518%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::rom::RomType::to_cartridge(gb_core::hardware::rom::RomType, gb_core::hardware::rom::Rom (1 samples, 0.04%)</title><rect x="98.7018%" y="357" width="0.0406%" height="15" fill="rgb(246,65,34)" fg:x="2433" fg:w="1"/><text x="98.9518%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::new(gb_core::hardware::rom::Rom (1 samples, 0.04%)</title><rect x="98.7018%" y="341" width="0.0406%" height="15" fill="rgb(231,100,33)" fg:x="2433" fg:w="1"/><text x="98.9518%" y="351.50"></text></g><g><title>`0x7FFE26C119DE (1 samples, 0.04%)</title><rect x="98.7018%" y="325" width="0.0406%" height="15" fill="rgb(228,126,14)" fg:x="2433" fg:w="1"/><text x="98.9518%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`__chkstk() (1 samples, 0.04%)</title><rect x="98.7424%" y="181" width="0.0406%" height="15" fill="rgb(215,173,21)" fg:x="2434" fg:w="1"/><text x="98.9924%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_str(ref$ (2 samples, 0.08%)</title><rect x="98.7424%" y="373" width="0.0811%" height="15" fill="rgb(210,6,40)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (2 samples, 0.08%)</title><rect x="98.7424%" y="357" width="0.0811%" height="15" fill="rgb(212,48,18)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize(serde_json::de::Deserializer (2 samples, 0.08%)</title><rect x="98.7424%" y="341" width="0.0811%" height="15" fill="rgb(230,214,11)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (2 samples, 0.08%)</title><rect x="98.7424%" y="325" width="0.0811%" height="15" fill="rgb(254,105,39)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize::impl$2::visit_map(gb_core::gameboy::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (2 samples, 0.08%)</title><rect x="98.7424%" y="309" width="0.0811%" height="15" fill="rgb(245,158,5)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::ppu::PPuState&gt; &gt;::is_some (2 samples, 0.08%)</title><rect x="98.7424%" y="293" width="0.0811%" height="15" fill="rgb(249,208,11)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::ppu::PPuState,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::ppu::PPuState&gt;, serde_json::de::Deserializer (2 samples, 0.08%)</title><rect x="98.7424%" y="277" width="0.0811%" height="15" fill="rgb(210,39,28)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (2 samples, 0.08%)</title><rect x="98.7424%" y="261" width="0.0811%" height="15" fill="rgb(211,56,53)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (2 samples, 0.08%)</title><rect x="98.7424%" y="245" width="0.0811%" height="15" fill="rgb(226,201,30)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (2 samples, 0.08%)</title><rect x="98.7424%" y="229" width="0.0811%" height="15" fill="rgb(239,101,34)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::ppu::Mode&gt; &gt;::is_some (2 samples, 0.08%)</title><rect x="98.7424%" y="213" width="0.0811%" height="15" fill="rgb(226,209,5)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize&lt;gb_core::hardware::ppu::VideoRam,ref_mut$&lt;serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt; &gt; &gt;(core::marker::PhantomData&lt;gb_core::hardware::ppu::VideoRam&gt;, serde_json::de::Deserializer (2 samples, 0.08%)</title><rect x="98.7424%" y="197" width="0.0811%" height="15" fill="rgb(250,105,47)" fg:x="2434" fg:w="2"/><text x="98.9924%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize(serde_json::de::Deserializer (1 samples, 0.04%)</title><rect x="98.7830%" y="181" width="0.0406%" height="15" fill="rgb(230,72,3)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (1 samples, 0.04%)</title><rect x="98.7830%" y="165" width="0.0406%" height="15" fill="rgb(232,218,39)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::impl$0::deserialize::impl$2::visit_map(gb_core::hardware::ppu::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (1 samples, 0.04%)</title><rect x="98.7830%" y="149" width="0.0406%" height="15" fill="rgb(248,166,6)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_key(serde_json::de::MapAccess (1 samples, 0.04%)</title><rect x="98.7830%" y="133" width="0.0406%" height="15" fill="rgb(247,89,20)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_key_seed(serde_json::de::MapAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1 samples, 0.04%)</title><rect x="98.7830%" y="117" width="0.0406%" height="15" fill="rgb(248,130,54)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="127.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (1 samples, 0.04%)</title><rect x="98.7830%" y="101" width="0.0406%" height="15" fill="rgb(234,196,4)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="111.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (1 samples, 0.04%)</title><rect x="98.7830%" y="85" width="0.0406%" height="15" fill="rgb(250,143,31)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="95.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$10::peek (1 samples, 0.04%)</title><rect x="98.7830%" y="69" width="0.0406%" height="15" fill="rgb(211,110,34)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="79.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::peek (1 samples, 0.04%)</title><rect x="98.7830%" y="53" width="0.0406%" height="15" fill="rgb(215,124,48)" fg:x="2435" fg:w="1"/><text x="99.0330%" y="63.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::File::open(ref$ (1 samples, 0.04%)</title><rect x="98.8235%" y="373" width="0.0406%" height="15" fill="rgb(216,46,13)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::open(ref$ (1 samples, 0.04%)</title><rect x="98.8235%" y="357" width="0.0406%" height="15" fill="rgb(205,184,25)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::_open (1 samples, 0.04%)</title><rect x="98.8235%" y="341" width="0.0406%" height="15" fill="rgb(228,1,10)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::map (1 samples, 0.04%)</title><rect x="98.8235%" y="325" width="0.0406%" height="15" fill="rgb(213,116,27)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.04%)</title><rect x="98.8235%" y="309" width="0.0406%" height="15" fill="rgb(241,95,50)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.04%)</title><rect x="98.8235%" y="293" width="0.0406%" height="15" fill="rgb(238,48,32)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.04%)</title><rect x="98.8235%" y="277" width="0.0406%" height="15" fill="rgb(235,113,49)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="287.50"></text></g><g><title>`0x7FFE41229EEC (1 samples, 0.04%)</title><rect x="98.8235%" y="261" width="0.0406%" height="15" fill="rgb(205,127,43)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="271.50"></text></g><g><title>`0x7FFE4122A580 (1 samples, 0.04%)</title><rect x="98.8235%" y="245" width="0.0406%" height="15" fill="rgb(250,162,2)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="255.50"></text></g><g><title>`0x7FFE439B0B74 (1 samples, 0.04%)</title><rect x="98.8235%" y="229" width="0.0406%" height="15" fill="rgb(220,13,41)" fg:x="2436" fg:w="1"/><text x="99.0735%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::File::metadata (1 samples, 0.04%)</title><rect x="98.8641%" y="341" width="0.0406%" height="15" fill="rgb(249,221,25)" fg:x="2437" fg:w="1"/><text x="99.1141%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::map (1 samples, 0.04%)</title><rect x="98.8641%" y="325" width="0.0406%" height="15" fill="rgb(215,208,19)" fg:x="2437" fg:w="1"/><text x="99.1141%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::file_attr (1 samples, 0.04%)</title><rect x="98.8641%" y="309" width="0.0406%" height="15" fill="rgb(236,175,2)" fg:x="2437" fg:w="1"/><text x="99.1141%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (1 samples, 0.04%)</title><rect x="98.8641%" y="293" width="0.0406%" height="15" fill="rgb(241,52,2)" fg:x="2437" fg:w="1"/><text x="99.1141%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.04%)</title><rect x="98.8641%" y="277" width="0.0406%" height="15" fill="rgb(248,140,14)" fg:x="2437" fg:w="1"/><text x="99.1141%" y="287.50"></text></g><g><title>`0x7FFE41261739 (1 samples, 0.04%)</title><rect x="98.8641%" y="261" width="0.0406%" height="15" fill="rgb(253,22,42)" fg:x="2437" fg:w="1"/><text x="99.1141%" y="271.50"></text></g><g><title>`0x7FFE439B09F4 (1 samples, 0.04%)</title><rect x="98.8641%" y="245" width="0.0406%" height="15" fill="rgb(234,61,47)" fg:x="2437" fg:w="1"/><text x="99.1141%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::File::open (1 samples, 0.04%)</title><rect x="98.9047%" y="341" width="0.0406%" height="15" fill="rgb(208,226,15)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::open (1 samples, 0.04%)</title><rect x="98.9047%" y="325" width="0.0406%" height="15" fill="rgb(217,221,4)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::OpenOptions::_open (1 samples, 0.04%)</title><rect x="98.9047%" y="309" width="0.0406%" height="15" fill="rgb(212,174,34)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::fs::File::open (1 samples, 0.04%)</title><rect x="98.9047%" y="293" width="0.0406%" height="15" fill="rgb(253,83,4)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::impl$13::try_from (1 samples, 0.04%)</title><rect x="98.9047%" y="277" width="0.0406%" height="15" fill="rgb(250,195,49)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::os::windows::io::handle::HandleOrInvalid::is_valid (1 samples, 0.04%)</title><rect x="98.9047%" y="261" width="0.0406%" height="15" fill="rgb(241,192,25)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="271.50"></text></g><g><title>`0x7FFE41229EEC (1 samples, 0.04%)</title><rect x="98.9047%" y="245" width="0.0406%" height="15" fill="rgb(208,124,10)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="255.50"></text></g><g><title>`0x7FFE4122A580 (1 samples, 0.04%)</title><rect x="98.9047%" y="229" width="0.0406%" height="15" fill="rgb(222,33,0)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="239.50"></text></g><g><title>`0x7FFE439B0B74 (1 samples, 0.04%)</title><rect x="98.9047%" y="213" width="0.0406%" height="15" fill="rgb(234,209,28)" fg:x="2438" fg:w="1"/><text x="99.1547%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="725" width="95.9838%" height="15" fill="rgb(224,11,23)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="735.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::im..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (2,366 samples, 95.98%)</title><rect x="3.0020%" y="709" width="95.9838%" height="15" fill="rgb(232,99,1)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="719.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (2,366 samples, 95.98%)</title><rect x="3.0020%" y="693" width="95.9838%" height="15" fill="rgb(237,95,45)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="703.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (2,366 samples, 95.98%)</title><rect x="3.0020%" y="677" width="95.9838%" height="15" fill="rgb(208,109,11)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="687.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (2,366 samples, 95.98%)</title><rect x="3.0020%" y="661" width="95.9838%" height="15" fill="rgb(216,190,48)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="671.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (2,366 samples, 95.98%)</title><rect x="3.0020%" y="645" width="95.9838%" height="15" fill="rgb(251,171,36)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="655.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, ref$&lt;slice2$&lt;u64&gt; &gt;, tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="629" width="95.9838%" height="15" fill="rgb(230,62,22)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="639.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="613" width="95.9838%" height="15" fill="rgb(225,114,35)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="623.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="597" width="95.9838%" height="15" fill="rgb(215,118,42)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="607.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="581" width="95.9838%" height="15" fill="rgb(243,119,21)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="591.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="565" width="95.9838%" height="15" fill="rgb(252,177,53)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="575.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::ro..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="549" width="95.9838%" height="15" fill="rgb(237,209,29)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="559.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="533" width="95.9838%" height="15" fill="rgb(212,65,23)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="543.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterio..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="517" width="95.9838%" height="15" fill="rgb(230,222,46)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="527.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routin..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="501" width="95.9838%" height="15" fill="rgb(215,135,32)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="511.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="485" width="95.9838%" height="15" fill="rgb(246,101,22)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="495.50">my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;r..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="469" width="95.9838%" height="15" fill="rgb(206,107,13)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="479.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,crite..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (2,366 samples, 95.98%)</title><rect x="3.0020%" y="453" width="95.9838%" height="15" fill="rgb(250,100,44)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="463.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (2,366 samples, 95.98%)</title><rect x="3.0020%" y="437" width="95.9838%" height="15" fill="rgb(231,147,38)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="447.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::criterion_benchmark::closure$0::closure_env$0&gt; (2,366 samples, 95.98%)</title><rect x="3.0020%" y="421" width="95.9838%" height="15" fill="rgb(229,8,40)" fg:x="74" fg:w="2366"/><text x="3.2520%" y="431.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::cr..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0 (2,365 samples, 95.94%)</title><rect x="3.0426%" y="405" width="95.9432%" height="15" fill="rgb(221,135,30)" fg:x="75" fg:w="2365"/><text x="3.2926%" y="415.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci (2,365 samples, 95.94%)</title><rect x="3.0426%" y="389" width="95.9432%" height="15" fill="rgb(249,193,18)" fg:x="75" fg:w="2365"/><text x="3.2926%" y="399.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::read_to_string(ref$ (3 samples, 0.12%)</title><rect x="98.8641%" y="373" width="0.1217%" height="15" fill="rgb(209,133,39)" fg:x="2437" fg:w="3"/><text x="99.1141%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::fs::read_to_string::inner (3 samples, 0.12%)</title><rect x="98.8641%" y="357" width="0.1217%" height="15" fill="rgb(232,100,14)" fg:x="2437" fg:w="3"/><text x="99.1141%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::default_read_to_string (1 samples, 0.04%)</title><rect x="98.9452%" y="341" width="0.0406%" height="15" fill="rgb(224,185,1)" fg:x="2439" fg:w="1"/><text x="99.1952%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::append_to_string (1 samples, 0.04%)</title><rect x="98.9452%" y="325" width="0.0406%" height="15" fill="rgb(223,139,8)" fg:x="2439" fg:w="1"/><text x="99.1952%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::default_read_to_string::closure$0 (1 samples, 0.04%)</title><rect x="98.9452%" y="309" width="0.0406%" height="15" fill="rgb(232,213,38)" fg:x="2439" fg:w="1"/><text x="99.1952%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::default_read_to_end (1 samples, 0.04%)</title><rect x="98.9452%" y="293" width="0.0406%" height="15" fill="rgb(207,94,22)" fg:x="2439" fg:w="1"/><text x="99.1952%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::read_buf (1 samples, 0.04%)</title><rect x="98.9452%" y="277" width="0.0406%" height="15" fill="rgb(219,183,54)" fg:x="2439" fg:w="1"/><text x="99.1952%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::handle::Handle::synchronous_read (1 samples, 0.04%)</title><rect x="98.9452%" y="261" width="0.0406%" height="15" fill="rgb(216,185,54)" fg:x="2439" fg:w="1"/><text x="99.1952%" y="271.50"></text></g><g><title>`0x7FFE439B0194 (1 samples, 0.04%)</title><rect x="98.9452%" y="245" width="0.0406%" height="15" fill="rgb(254,217,39)" fg:x="2439" fg:w="1"/><text x="99.1952%" y="255.50"></text></g><g><title>`0x7FFE4396AF08 (2,435 samples, 98.78%)</title><rect x="0.2434%" y="917" width="98.7830%" height="15" fill="rgb(240,178,23)" fg:x="6" fg:w="2435"/><text x="0.4934%" y="927.50">`0x7FFE4396AF08</text></g><g><title>`0x7FFE42BA257D (2,435 samples, 98.78%)</title><rect x="0.2434%" y="901" width="98.7830%" height="15" fill="rgb(218,11,47)" fg:x="6" fg:w="2435"/><text x="0.4934%" y="911.50">`0x7FFE42BA257D</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh() (2,428 samples, 98.50%)</title><rect x="0.5274%" y="885" width="98.4990%" height="15" fill="rgb(218,51,51)" fg:x="13" fg:w="2428"/><text x="0.7774%" y="895.50">my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`invoke_main() (2,417 samples, 98.05%)</title><rect x="0.9736%" y="869" width="98.0527%" height="15" fill="rgb(238,126,27)" fg:x="24" fg:w="2417"/><text x="1.2236%" y="879.50">my_benchmark-c9a97925f9d084bf.exe`invoke_main()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`main (2,417 samples, 98.05%)</title><rect x="0.9736%" y="853" width="98.0527%" height="15" fill="rgb(249,202,22)" fg:x="24" fg:w="2417"/><text x="1.2236%" y="863.50">my_benchmark-c9a97925f9d084bf.exe`main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (2,417 samples, 98.05%)</title><rect x="0.9736%" y="837" width="98.0527%" height="15" fill="rgb(254,195,49)" fg:x="24" fg:w="2417"/><text x="1.2236%" y="847.50">my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main (2,417 samples, 98.05%)</title><rect x="0.9736%" y="821" width="98.0527%" height="15" fill="rgb(208,123,14)" fg:x="24" fg:w="2417"/><text x="1.2236%" y="831.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches (2,414 samples, 97.93%)</title><rect x="1.0953%" y="805" width="97.9310%" height="15" fill="rgb(224,200,8)" fg:x="27" fg:w="2414"/><text x="1.3453%" y="815.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion (2,370 samples, 96.15%)</title><rect x="2.8803%" y="789" width="96.1460%" height="15" fill="rgb(217,61,36)" fg:x="71" fg:w="2370"/><text x="3.1303%" y="799.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (2,370 samples, 96.15%)</title><rect x="2.8803%" y="773" width="96.1460%" height="15" fill="rgb(206,35,45)" fg:x="71" fg:w="2370"/><text x="3.1303%" y="783.50">my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function (2,367 samples, 96.02%)</title><rect x="3.0020%" y="757" width="96.0243%" height="15" fill="rgb(217,65,33)" fg:x="74" fg:w="2367"/><text x="3.2520%" y="767.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (2,367 samples, 96.02%)</title><rect x="3.0020%" y="741" width="96.0243%" height="15" fill="rgb(222,158,48)" fg:x="74" fg:w="2367"/><text x="3.2520%" y="751.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkI..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::_print (1 samples, 0.04%)</title><rect x="98.9858%" y="725" width="0.0406%" height="15" fill="rgb(254,2,54)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="735.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::print_to (1 samples, 0.04%)</title><rect x="98.9858%" y="709" width="0.0406%" height="15" fill="rgb(250,143,38)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="719.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$15::write_fmt (1 samples, 0.04%)</title><rect x="98.9858%" y="693" width="0.0406%" height="15" fill="rgb(248,25,0)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="703.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$16::write_fmt (1 samples, 0.04%)</title><rect x="98.9858%" y="677" width="0.0406%" height="15" fill="rgb(206,152,27)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="98.9858%" y="661" width="0.0406%" height="15" fill="rgb(240,77,30)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::fmt::write (1 samples, 0.04%)</title><rect x="98.9858%" y="645" width="0.0406%" height="15" fill="rgb(231,5,3)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::Write::write_fmt::impl$0::write_str&lt;std::io::stdio::StdoutLock&gt; (1 samples, 0.04%)</title><rect x="98.9858%" y="629" width="0.0406%" height="15" fill="rgb(207,226,32)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$19::write_all (1 samples, 0.04%)</title><rect x="98.9858%" y="613" width="0.0406%" height="15" fill="rgb(222,207,47)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cell::RefCell::borrow_mut (1 samples, 0.04%)</title><rect x="98.9858%" y="597" width="0.0406%" height="15" fill="rgb(229,115,45)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::buffered::linewritershim::impl$1::write_all (1 samples, 0.04%)</title><rect x="98.9858%" y="581" width="0.0406%" height="15" fill="rgb(224,191,6)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (1 samples, 0.04%)</title><rect x="98.9858%" y="565" width="0.0406%" height="15" fill="rgb(230,227,24)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::buffered::bufwriter::BufWriter::flush_buf&lt;std::io::stdio::StdoutRaw&gt; (1 samples, 0.04%)</title><rect x="98.9858%" y="549" width="0.0406%" height="15" fill="rgb(228,80,19)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::impl$1::write (1 samples, 0.04%)</title><rect x="98.9858%" y="533" width="0.0406%" height="15" fill="rgb(247,229,0)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::io::stdio::handle_ebadf (1 samples, 0.04%)</title><rect x="98.9858%" y="517" width="0.0406%" height="15" fill="rgb(237,194,15)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write (1 samples, 0.04%)</title><rect x="98.9858%" y="501" width="0.0406%" height="15" fill="rgb(219,203,20)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write_valid_utf8_to_console (1 samples, 0.04%)</title><rect x="98.9858%" y="485" width="0.0406%" height="15" fill="rgb(234,128,8)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::stdio::write_u16s (1 samples, 0.04%)</title><rect x="98.9858%" y="469" width="0.0406%" height="15" fill="rgb(248,202,8)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (1 samples, 0.04%)</title><rect x="98.9858%" y="453" width="0.0406%" height="15" fill="rgb(206,104,37)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (1 samples, 0.04%)</title><rect x="98.9858%" y="437" width="0.0406%" height="15" fill="rgb(223,8,27)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="447.50"></text></g><g><title>`0x7FFE41242E50 (1 samples, 0.04%)</title><rect x="98.9858%" y="421" width="0.0406%" height="15" fill="rgb(216,217,28)" fg:x="2440" fg:w="1"/><text x="99.2358%" y="431.50"></text></g><g><title>`0x7FFE439ED091 (1 samples, 0.04%)</title><rect x="99.0264%" y="869" width="0.0406%" height="15" fill="rgb(249,199,1)" fg:x="2441" fg:w="1"/><text x="99.2764%" y="879.50"></text></g><g><title>`0x7FFE439ECF1E (1 samples, 0.04%)</title><rect x="99.0264%" y="853" width="0.0406%" height="15" fill="rgb(240,85,17)" fg:x="2441" fg:w="1"/><text x="99.2764%" y="863.50"></text></g><g><title>`0x7FFE439BF335 (1 samples, 0.04%)</title><rect x="99.0264%" y="837" width="0.0406%" height="15" fill="rgb(206,108,45)" fg:x="2441" fg:w="1"/><text x="99.2764%" y="847.50"></text></g><g><title>`0x7FFE439B0314 (1 samples, 0.04%)</title><rect x="99.0264%" y="821" width="0.0406%" height="15" fill="rgb(245,210,41)" fg:x="2441" fg:w="1"/><text x="99.2764%" y="831.50"></text></g><g><title>`0x7FFE439ED2EB (1 samples, 0.04%)</title><rect x="99.0669%" y="869" width="0.0406%" height="15" fill="rgb(206,13,37)" fg:x="2442" fg:w="1"/><text x="99.3169%" y="879.50"></text></g><g><title>`0x7FFE439EC7C7 (1 samples, 0.04%)</title><rect x="99.0669%" y="853" width="0.0406%" height="15" fill="rgb(250,61,18)" fg:x="2442" fg:w="1"/><text x="99.3169%" y="863.50"></text></g><g><title>`0x7FFE439EC663 (1 samples, 0.04%)</title><rect x="99.0669%" y="837" width="0.0406%" height="15" fill="rgb(235,172,48)" fg:x="2442" fg:w="1"/><text x="99.3169%" y="847.50"></text></g><g><title>`0x7FFE439B03B4 (1 samples, 0.04%)</title><rect x="99.0669%" y="821" width="0.0406%" height="15" fill="rgb(249,201,17)" fg:x="2442" fg:w="1"/><text x="99.3169%" y="831.50"></text></g><g><title>`0x7FFE439ED806 (1 samples, 0.04%)</title><rect x="99.1075%" y="869" width="0.0406%" height="15" fill="rgb(219,208,6)" fg:x="2443" fg:w="1"/><text x="99.3575%" y="879.50"></text></g><g><title>`0x7FFE439C02A9 (1 samples, 0.04%)</title><rect x="99.1075%" y="853" width="0.0406%" height="15" fill="rgb(248,31,23)" fg:x="2443" fg:w="1"/><text x="99.3575%" y="863.50"></text></g><g><title>`0x7FFE43A31BE5 (1 samples, 0.04%)</title><rect x="99.1075%" y="837" width="0.0406%" height="15" fill="rgb(245,15,42)" fg:x="2443" fg:w="1"/><text x="99.3575%" y="847.50"></text></g><g><title>`0x7FFE439C0ED3 (1 samples, 0.04%)</title><rect x="99.1075%" y="821" width="0.0406%" height="15" fill="rgb(222,217,39)" fg:x="2443" fg:w="1"/><text x="99.3575%" y="831.50"></text></g><g><title>`0x7FFE439574A5 (1 samples, 0.04%)</title><rect x="99.1075%" y="805" width="0.0406%" height="15" fill="rgb(210,219,27)" fg:x="2443" fg:w="1"/><text x="99.3575%" y="815.50"></text></g><g><title>`0x7FFE439B0F84 (1 samples, 0.04%)</title><rect x="99.1075%" y="789" width="0.0406%" height="15" fill="rgb(252,166,36)" fg:x="2443" fg:w="1"/><text x="99.3575%" y="799.50"></text></g><g><title>`0x7FFE439ED9FB (1 samples, 0.04%)</title><rect x="99.1481%" y="869" width="0.0406%" height="15" fill="rgb(245,132,34)" fg:x="2444" fg:w="1"/><text x="99.3981%" y="879.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.04%)</title><rect x="99.1481%" y="853" width="0.0406%" height="15" fill="rgb(236,54,3)" fg:x="2444" fg:w="1"/><text x="99.3981%" y="863.50"></text></g><g><title>`0x7FFE4394268A (1 samples, 0.04%)</title><rect x="99.1481%" y="837" width="0.0406%" height="15" fill="rgb(241,173,43)" fg:x="2444" fg:w="1"/><text x="99.3981%" y="847.50"></text></g><g><title>`0x7FFE43942517 (1 samples, 0.04%)</title><rect x="99.1481%" y="821" width="0.0406%" height="15" fill="rgb(215,190,9)" fg:x="2444" fg:w="1"/><text x="99.3981%" y="831.50"></text></g><g><title>`0x7FFE439B3B24 (1 samples, 0.04%)</title><rect x="99.1481%" y="805" width="0.0406%" height="15" fill="rgb(242,101,16)" fg:x="2444" fg:w="1"/><text x="99.3981%" y="815.50"></text></g><g><title>`0x7FFE439EDD12 (1 samples, 0.04%)</title><rect x="99.1886%" y="869" width="0.0406%" height="15" fill="rgb(223,190,21)" fg:x="2445" fg:w="1"/><text x="99.4386%" y="879.50"></text></g><g><title>`0x7FFE439B02B4 (1 samples, 0.04%)</title><rect x="99.1886%" y="853" width="0.0406%" height="15" fill="rgb(215,228,25)" fg:x="2445" fg:w="1"/><text x="99.4386%" y="863.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.04%)</title><rect x="99.2292%" y="773" width="0.0406%" height="15" fill="rgb(225,36,22)" fg:x="2446" fg:w="1"/><text x="99.4792%" y="783.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.04%)</title><rect x="99.2292%" y="757" width="0.0406%" height="15" fill="rgb(251,106,46)" fg:x="2446" fg:w="1"/><text x="99.4792%" y="767.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.04%)</title><rect x="99.2292%" y="741" width="0.0406%" height="15" fill="rgb(208,90,1)" fg:x="2446" fg:w="1"/><text x="99.4792%" y="751.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.04%)</title><rect x="99.2292%" y="725" width="0.0406%" height="15" fill="rgb(243,10,4)" fg:x="2446" fg:w="1"/><text x="99.4792%" y="735.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.04%)</title><rect x="99.2698%" y="757" width="0.0406%" height="15" fill="rgb(212,137,27)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="767.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.04%)</title><rect x="99.2698%" y="741" width="0.0406%" height="15" fill="rgb(231,220,49)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="751.50"></text></g><g><title>`0x7FFE43935D84 (1 samples, 0.04%)</title><rect x="99.2698%" y="725" width="0.0406%" height="15" fill="rgb(237,96,20)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="735.50"></text></g><g><title>`0x7FFE4393D2E9 (1 samples, 0.04%)</title><rect x="99.2698%" y="709" width="0.0406%" height="15" fill="rgb(239,229,30)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="719.50"></text></g><g><title>`0x7FFE4393C8B8 (1 samples, 0.04%)</title><rect x="99.2698%" y="693" width="0.0406%" height="15" fill="rgb(219,65,33)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="703.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.04%)</title><rect x="99.2698%" y="677" width="0.0406%" height="15" fill="rgb(243,134,7)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="687.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.04%)</title><rect x="99.2698%" y="661" width="0.0406%" height="15" fill="rgb(216,177,54)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="671.50"></text></g><g><title>`0x7FFE43935331 (1 samples, 0.04%)</title><rect x="99.2698%" y="645" width="0.0406%" height="15" fill="rgb(211,160,20)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="655.50"></text></g><g><title>`0x7FFE43929BDA (1 samples, 0.04%)</title><rect x="99.2698%" y="629" width="0.0406%" height="15" fill="rgb(239,85,39)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="639.50"></text></g><g><title>`0x7FFE43929CF1 (1 samples, 0.04%)</title><rect x="99.2698%" y="613" width="0.0406%" height="15" fill="rgb(232,125,22)" fg:x="2447" fg:w="1"/><text x="99.5198%" y="623.50"></text></g><g><title>`0x7FFE43934117 (1 samples, 0.04%)</title><rect x="99.3103%" y="741" width="0.0406%" height="15" fill="rgb(244,57,34)" fg:x="2448" fg:w="1"/><text x="99.5603%" y="751.50"></text></g><g><title>`0x7FFE43934126 (1 samples, 0.04%)</title><rect x="99.3509%" y="741" width="0.0406%" height="15" fill="rgb(214,203,32)" fg:x="2449" fg:w="1"/><text x="99.6009%" y="751.50"></text></g><g><title>`0x7FFE43938D76 (5 samples, 0.20%)</title><rect x="99.2292%" y="821" width="0.2028%" height="15" fill="rgb(207,58,43)" fg:x="2446" fg:w="5"/><text x="99.4792%" y="831.50"></text></g><g><title>`0x7FFE4393E269 (5 samples, 0.20%)</title><rect x="99.2292%" y="805" width="0.2028%" height="15" fill="rgb(215,193,15)" fg:x="2446" fg:w="5"/><text x="99.4792%" y="815.50"></text></g><g><title>`0x7FFE4393D2E9 (5 samples, 0.20%)</title><rect x="99.2292%" y="789" width="0.2028%" height="15" fill="rgb(232,15,44)" fg:x="2446" fg:w="5"/><text x="99.4792%" y="799.50"></text></g><g><title>`0x7FFE4393C8B8 (4 samples, 0.16%)</title><rect x="99.2698%" y="773" width="0.1623%" height="15" fill="rgb(212,3,48)" fg:x="2447" fg:w="4"/><text x="99.5198%" y="783.50"></text></g><g><title>`0x7FFE43934C34 (3 samples, 0.12%)</title><rect x="99.3103%" y="757" width="0.1217%" height="15" fill="rgb(218,128,7)" fg:x="2448" fg:w="3"/><text x="99.5603%" y="767.50"></text></g><g><title>`0x7FFE43934227 (1 samples, 0.04%)</title><rect x="99.3915%" y="741" width="0.0406%" height="15" fill="rgb(226,216,39)" fg:x="2450" fg:w="1"/><text x="99.6415%" y="751.50"></text></g><g><title>`0x7FFE412423AF (1 samples, 0.04%)</title><rect x="99.4320%" y="709" width="0.0406%" height="15" fill="rgb(243,47,51)" fg:x="2451" fg:w="1"/><text x="99.6820%" y="719.50"></text></g><g><title>`0x7FFE41243782 (1 samples, 0.04%)</title><rect x="99.4320%" y="693" width="0.0406%" height="15" fill="rgb(241,183,40)" fg:x="2451" fg:w="1"/><text x="99.6820%" y="703.50"></text></g><g><title>`0x7FFE4395B4A2 (1 samples, 0.04%)</title><rect x="99.4320%" y="677" width="0.0406%" height="15" fill="rgb(231,217,32)" fg:x="2451" fg:w="1"/><text x="99.6820%" y="687.50"></text></g><g><title>`0x7FFE4395B25D (1 samples, 0.04%)</title><rect x="99.4320%" y="661" width="0.0406%" height="15" fill="rgb(229,61,38)" fg:x="2451" fg:w="1"/><text x="99.6820%" y="671.50"></text></g><g><title>`0x7FFE439B1504 (1 samples, 0.04%)</title><rect x="99.4320%" y="645" width="0.0406%" height="15" fill="rgb(225,210,5)" fg:x="2451" fg:w="1"/><text x="99.6820%" y="655.50"></text></g><g><title>`0x7FFE412423DC (1 samples, 0.04%)</title><rect x="99.4726%" y="709" width="0.0406%" height="15" fill="rgb(231,79,45)" fg:x="2452" fg:w="1"/><text x="99.7226%" y="719.50"></text></g><g><title>`0x7FFE4124201D (3 samples, 0.12%)</title><rect x="99.4320%" y="725" width="0.1217%" height="15" fill="rgb(224,100,7)" fg:x="2451" fg:w="3"/><text x="99.6820%" y="735.50"></text></g><g><title>`0x7FFE41242614 (1 samples, 0.04%)</title><rect x="99.5132%" y="709" width="0.0406%" height="15" fill="rgb(241,198,18)" fg:x="2453" fg:w="1"/><text x="99.7632%" y="719.50"></text></g><g><title>`0x7FFE4127A1EE (1 samples, 0.04%)</title><rect x="99.5132%" y="693" width="0.0406%" height="15" fill="rgb(252,97,53)" fg:x="2453" fg:w="1"/><text x="99.7632%" y="703.50"></text></g><g><title>`0x7FFE4124208D (1 samples, 0.04%)</title><rect x="99.5538%" y="725" width="0.0406%" height="15" fill="rgb(220,88,7)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="735.50"></text></g><g><title>`0x7FFE41242C1D (1 samples, 0.04%)</title><rect x="99.5538%" y="709" width="0.0406%" height="15" fill="rgb(213,176,14)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="719.50"></text></g><g><title>`0x7FFE412B4D64 (1 samples, 0.04%)</title><rect x="99.5538%" y="693" width="0.0406%" height="15" fill="rgb(246,73,7)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="703.50"></text></g><g><title>`0x7FFE41241B31 (1 samples, 0.04%)</title><rect x="99.5538%" y="677" width="0.0406%" height="15" fill="rgb(245,64,36)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="687.50"></text></g><g><title>`0x7FFE41241E84 (1 samples, 0.04%)</title><rect x="99.5538%" y="661" width="0.0406%" height="15" fill="rgb(245,80,10)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="671.50"></text></g><g><title>`0x7FFE4124390D (1 samples, 0.04%)</title><rect x="99.5538%" y="645" width="0.0406%" height="15" fill="rgb(232,107,50)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="655.50"></text></g><g><title>`0x7FFE412439F1 (1 samples, 0.04%)</title><rect x="99.5538%" y="629" width="0.0406%" height="15" fill="rgb(253,3,0)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="639.50"></text></g><g><title>`0x7FFE41243B22 (1 samples, 0.04%)</title><rect x="99.5538%" y="613" width="0.0406%" height="15" fill="rgb(212,99,53)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="623.50"></text></g><g><title>`0x7FFE41244869 (1 samples, 0.04%)</title><rect x="99.5538%" y="597" width="0.0406%" height="15" fill="rgb(249,111,54)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="607.50"></text></g><g><title>`0x7FFE439B2744 (1 samples, 0.04%)</title><rect x="99.5538%" y="581" width="0.0406%" height="15" fill="rgb(249,55,30)" fg:x="2454" fg:w="1"/><text x="99.8038%" y="591.50"></text></g><g><title>`0x7FFE41242097 (1 samples, 0.04%)</title><rect x="99.5943%" y="725" width="0.0406%" height="15" fill="rgb(237,47,42)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="735.50"></text></g><g><title>`0x7FFE412428B4 (1 samples, 0.04%)</title><rect x="99.5943%" y="709" width="0.0406%" height="15" fill="rgb(211,20,18)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="719.50"></text></g><g><title>`0x7FFE41242976 (1 samples, 0.04%)</title><rect x="99.5943%" y="693" width="0.0406%" height="15" fill="rgb(231,203,46)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="703.50"></text></g><g><title>`0x7FFE412BEA85 (1 samples, 0.04%)</title><rect x="99.5943%" y="677" width="0.0406%" height="15" fill="rgb(237,142,3)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="687.50"></text></g><g><title>`0x7FFE412C988B (1 samples, 0.04%)</title><rect x="99.5943%" y="661" width="0.0406%" height="15" fill="rgb(241,107,1)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="671.50"></text></g><g><title>`0x7FFE412D0B0B (1 samples, 0.04%)</title><rect x="99.5943%" y="645" width="0.0406%" height="15" fill="rgb(229,83,13)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="655.50"></text></g><g><title>`0x7FFE412CB370 (1 samples, 0.04%)</title><rect x="99.5943%" y="629" width="0.0406%" height="15" fill="rgb(241,91,40)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="639.50"></text></g><g><title>`0x7FFE412CB61A (1 samples, 0.04%)</title><rect x="99.5943%" y="613" width="0.0406%" height="15" fill="rgb(225,3,45)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="623.50"></text></g><g><title>`0x7FFE412839C0 (1 samples, 0.04%)</title><rect x="99.5943%" y="597" width="0.0406%" height="15" fill="rgb(244,223,14)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="607.50"></text></g><g><title>`0x7FFE41283A7D (1 samples, 0.04%)</title><rect x="99.5943%" y="581" width="0.0406%" height="15" fill="rgb(224,124,37)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="591.50"></text></g><g><title>`0x7FFE41316017 (1 samples, 0.04%)</title><rect x="99.5943%" y="565" width="0.0406%" height="15" fill="rgb(251,171,30)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="575.50"></text></g><g><title>`0x7FFE412E4B66 (1 samples, 0.04%)</title><rect x="99.5943%" y="549" width="0.0406%" height="15" fill="rgb(236,46,54)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="559.50"></text></g><g><title>`0x7FFE43980F6B (1 samples, 0.04%)</title><rect x="99.5943%" y="533" width="0.0406%" height="15" fill="rgb(245,213,5)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="543.50"></text></g><g><title>`0x7FFE439810D4 (1 samples, 0.04%)</title><rect x="99.5943%" y="517" width="0.0406%" height="15" fill="rgb(230,144,27)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="527.50"></text></g><g><title>`0x7FFE439812EC (1 samples, 0.04%)</title><rect x="99.5943%" y="501" width="0.0406%" height="15" fill="rgb(220,86,6)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="511.50"></text></g><g><title>`0x7FFE439B2E44 (1 samples, 0.04%)</title><rect x="99.5943%" y="485" width="0.0406%" height="15" fill="rgb(240,20,13)" fg:x="2455" fg:w="1"/><text x="99.8443%" y="495.50"></text></g><g><title>`0x7FFE439EE843 (11 samples, 0.45%)</title><rect x="99.2292%" y="869" width="0.4462%" height="15" fill="rgb(217,89,34)" fg:x="2446" fg:w="11"/><text x="99.4792%" y="879.50"></text></g><g><title>`0x7FFE4393A71A (11 samples, 0.45%)</title><rect x="99.2292%" y="853" width="0.4462%" height="15" fill="rgb(229,13,5)" fg:x="2446" fg:w="11"/><text x="99.4792%" y="863.50"></text></g><g><title>`0x7FFE4392909C (11 samples, 0.45%)</title><rect x="99.2292%" y="837" width="0.4462%" height="15" fill="rgb(244,67,35)" fg:x="2446" fg:w="11"/><text x="99.4792%" y="847.50"></text></g><g><title>`0x7FFE43938E00 (6 samples, 0.24%)</title><rect x="99.4320%" y="821" width="0.2434%" height="15" fill="rgb(221,40,2)" fg:x="2451" fg:w="6"/><text x="99.6820%" y="831.50"></text></g><g><title>`0x7FFE4393DAED (6 samples, 0.24%)</title><rect x="99.4320%" y="805" width="0.2434%" height="15" fill="rgb(237,157,21)" fg:x="2451" fg:w="6"/><text x="99.6820%" y="815.50"></text></g><g><title>`0x7FFE4397D320 (6 samples, 0.24%)</title><rect x="99.4320%" y="789" width="0.2434%" height="15" fill="rgb(222,94,11)" fg:x="2451" fg:w="6"/><text x="99.6820%" y="799.50"></text></g><g><title>`0x7FFE4397D2AE (6 samples, 0.24%)</title><rect x="99.4320%" y="773" width="0.2434%" height="15" fill="rgb(249,113,6)" fg:x="2451" fg:w="6"/><text x="99.6820%" y="783.50"></text></g><g><title>`0x7FFE4397D4FD (6 samples, 0.24%)</title><rect x="99.4320%" y="757" width="0.2434%" height="15" fill="rgb(238,137,36)" fg:x="2451" fg:w="6"/><text x="99.6820%" y="767.50"></text></g><g><title>`0x7FFE43938B5F (6 samples, 0.24%)</title><rect x="99.4320%" y="741" width="0.2434%" height="15" fill="rgb(210,102,26)" fg:x="2451" fg:w="6"/><text x="99.6820%" y="751.50"></text></g><g><title>`0x7FFE412420BB (1 samples, 0.04%)</title><rect x="99.6349%" y="725" width="0.0406%" height="15" fill="rgb(218,30,30)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="735.50"></text></g><g><title>`0x7FFE412428EA (1 samples, 0.04%)</title><rect x="99.6349%" y="709" width="0.0406%" height="15" fill="rgb(214,67,26)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="719.50"></text></g><g><title>`0x7FFE41277228 (1 samples, 0.04%)</title><rect x="99.6349%" y="693" width="0.0406%" height="15" fill="rgb(251,9,53)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="703.50"></text></g><g><title>`0x7FFE439419A0 (1 samples, 0.04%)</title><rect x="99.6349%" y="677" width="0.0406%" height="15" fill="rgb(228,204,25)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="687.50"></text></g><g><title>`0x7FFE4394268A (1 samples, 0.04%)</title><rect x="99.6349%" y="661" width="0.0406%" height="15" fill="rgb(207,153,8)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="671.50"></text></g><g><title>`0x7FFE43942549 (1 samples, 0.04%)</title><rect x="99.6349%" y="645" width="0.0406%" height="15" fill="rgb(242,9,16)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="655.50"></text></g><g><title>`0x7FFE43941F9E (1 samples, 0.04%)</title><rect x="99.6349%" y="629" width="0.0406%" height="15" fill="rgb(217,211,10)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="639.50"></text></g><g><title>`0x7FFE4394087D (1 samples, 0.04%)</title><rect x="99.6349%" y="613" width="0.0406%" height="15" fill="rgb(219,228,52)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="623.50"></text></g><g><title>`0x7FFE41278792 (1 samples, 0.04%)</title><rect x="99.6349%" y="597" width="0.0406%" height="15" fill="rgb(231,92,29)" fg:x="2456" fg:w="1"/><text x="99.8849%" y="607.50"></text></g><g><title>`0x7FFE439EE8ED (1 samples, 0.04%)</title><rect x="99.6755%" y="869" width="0.0406%" height="15" fill="rgb(232,8,23)" fg:x="2457" fg:w="1"/><text x="99.9255%" y="879.50"></text></g><g><title>`0x7FFE439289DC (1 samples, 0.04%)</title><rect x="99.6755%" y="853" width="0.0406%" height="15" fill="rgb(216,211,34)" fg:x="2457" fg:w="1"/><text x="99.9255%" y="863.50"></text></g><g><title>`0x7FFE4393BDA1 (1 samples, 0.04%)</title><rect x="99.6755%" y="837" width="0.0406%" height="15" fill="rgb(236,151,0)" fg:x="2457" fg:w="1"/><text x="99.9255%" y="847.50"></text></g><g><title>`0x7FFE4393BEB7 (1 samples, 0.04%)</title><rect x="99.6755%" y="821" width="0.0406%" height="15" fill="rgb(209,168,3)" fg:x="2457" fg:w="1"/><text x="99.9255%" y="831.50"></text></g><g><title>`0x7FFE439333B3 (1 samples, 0.04%)</title><rect x="99.6755%" y="805" width="0.0406%" height="15" fill="rgb(208,129,28)" fg:x="2457" fg:w="1"/><text x="99.9255%" y="815.50"></text></g><g><title>`0x7FFE439EEB0D (1 samples, 0.04%)</title><rect x="99.7160%" y="869" width="0.0406%" height="15" fill="rgb(229,78,22)" fg:x="2458" fg:w="1"/><text x="99.9660%" y="879.50"></text></g><g><title>`0x7FFE4395B603 (1 samples, 0.04%)</title><rect x="99.7160%" y="853" width="0.0406%" height="15" fill="rgb(228,187,13)" fg:x="2458" fg:w="1"/><text x="99.9660%" y="863.50"></text></g><g><title>`0x7FFE43990D80 (1 samples, 0.04%)</title><rect x="99.7160%" y="837" width="0.0406%" height="15" fill="rgb(240,119,24)" fg:x="2458" fg:w="1"/><text x="99.9660%" y="847.50"></text></g><g><title>`0x7FFE439B3684 (1 samples, 0.04%)</title><rect x="99.7160%" y="821" width="0.0406%" height="15" fill="rgb(209,194,42)" fg:x="2458" fg:w="1"/><text x="99.9660%" y="831.50"></text></g><g><title>`0x7FFE43935B13 (1 samples, 0.04%)</title><rect x="99.7566%" y="821" width="0.0406%" height="15" fill="rgb(247,200,46)" fg:x="2459" fg:w="1"/><text x="100.0066%" y="831.50"></text></g><g><title>`0x7FFE43934B7B (1 samples, 0.04%)</title><rect x="99.7972%" y="773" width="0.0406%" height="15" fill="rgb(218,76,16)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="783.50"></text></g><g><title>`0x7FFE43934DC6 (1 samples, 0.04%)</title><rect x="99.7972%" y="757" width="0.0406%" height="15" fill="rgb(225,21,48)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="767.50"></text></g><g><title>`0x7FFE43935D84 (1 samples, 0.04%)</title><rect x="99.7972%" y="741" width="0.0406%" height="15" fill="rgb(239,223,50)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="751.50"></text></g><g><title>`0x7FFE4393D2E9 (1 samples, 0.04%)</title><rect x="99.7972%" y="725" width="0.0406%" height="15" fill="rgb(244,45,21)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="735.50"></text></g><g><title>`0x7FFE4393C714 (1 samples, 0.04%)</title><rect x="99.7972%" y="709" width="0.0406%" height="15" fill="rgb(232,33,43)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="719.50"></text></g><g><title>`0x7FFE4393C58A (1 samples, 0.04%)</title><rect x="99.7972%" y="693" width="0.0406%" height="15" fill="rgb(209,8,3)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="703.50"></text></g><g><title>`0x7FFE4393C98C (1 samples, 0.04%)</title><rect x="99.7972%" y="677" width="0.0406%" height="15" fill="rgb(214,25,53)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="687.50"></text></g><g><title>`0x7FFE439B05D4 (1 samples, 0.04%)</title><rect x="99.7972%" y="661" width="0.0406%" height="15" fill="rgb(254,186,54)" fg:x="2460" fg:w="1"/><text x="100.0472%" y="671.50"></text></g><g><title>`0x7FFE439EEB73 (3 samples, 0.12%)</title><rect x="99.7566%" y="869" width="0.1217%" height="15" fill="rgb(208,174,49)" fg:x="2459" fg:w="3"/><text x="100.0066%" y="879.50"></text></g><g><title>`0x7FFE43934B7B (3 samples, 0.12%)</title><rect x="99.7566%" y="853" width="0.1217%" height="15" fill="rgb(233,191,51)" fg:x="2459" fg:w="3"/><text x="100.0066%" y="863.50"></text></g><g><title>`0x7FFE43934DC6 (3 samples, 0.12%)</title><rect x="99.7566%" y="837" width="0.1217%" height="15" fill="rgb(222,134,10)" fg:x="2459" fg:w="3"/><text x="100.0066%" y="847.50"></text></g><g><title>`0x7FFE43935D84 (2 samples, 0.08%)</title><rect x="99.7972%" y="821" width="0.0811%" height="15" fill="rgb(230,226,20)" fg:x="2460" fg:w="2"/><text x="100.0472%" y="831.50"></text></g><g><title>`0x7FFE4393D2E9 (2 samples, 0.08%)</title><rect x="99.7972%" y="805" width="0.0811%" height="15" fill="rgb(251,111,25)" fg:x="2460" fg:w="2"/><text x="100.0472%" y="815.50"></text></g><g><title>`0x7FFE4393C8B8 (2 samples, 0.08%)</title><rect x="99.7972%" y="789" width="0.0811%" height="15" fill="rgb(224,40,46)" fg:x="2460" fg:w="2"/><text x="100.0472%" y="799.50"></text></g><g><title>`0x7FFE43934C09 (1 samples, 0.04%)</title><rect x="99.8377%" y="773" width="0.0406%" height="15" fill="rgb(236,108,47)" fg:x="2461" fg:w="1"/><text x="100.0877%" y="783.50"></text></g><g><title>`0x7FFE439833DF (1 samples, 0.04%)</title><rect x="99.8377%" y="757" width="0.0406%" height="15" fill="rgb(234,93,0)" fg:x="2461" fg:w="1"/><text x="100.0877%" y="767.50"></text></g><g><title>`0x7FFE43945204 (1 samples, 0.04%)</title><rect x="99.8377%" y="741" width="0.0406%" height="15" fill="rgb(224,213,32)" fg:x="2461" fg:w="1"/><text x="100.0877%" y="751.50"></text></g><g><title>`0x7FFE439453A6 (1 samples, 0.04%)</title><rect x="99.8377%" y="725" width="0.0406%" height="15" fill="rgb(251,11,48)" fg:x="2461" fg:w="1"/><text x="100.0877%" y="735.50"></text></g><g><title>`0x7FFE439B3044 (1 samples, 0.04%)</title><rect x="99.8377%" y="709" width="0.0406%" height="15" fill="rgb(236,173,5)" fg:x="2461" fg:w="1"/><text x="100.0877%" y="719.50"></text></g><g><title>`0x7FFE439EEBBC (1 samples, 0.04%)</title><rect x="99.8783%" y="869" width="0.0406%" height="15" fill="rgb(230,95,12)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="879.50"></text></g><g><title>`0x7FFE4393DAA1 (1 samples, 0.04%)</title><rect x="99.8783%" y="853" width="0.0406%" height="15" fill="rgb(232,209,1)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="863.50"></text></g><g><title>`0x7FFE4393ECC9 (1 samples, 0.04%)</title><rect x="99.8783%" y="837" width="0.0406%" height="15" fill="rgb(232,6,1)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="847.50"></text></g><g><title>`0x7FFE4393ECC9 (1 samples, 0.04%)</title><rect x="99.8783%" y="821" width="0.0406%" height="15" fill="rgb(210,224,50)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="831.50"></text></g><g><title>`0x7FFE4393ECAF (1 samples, 0.04%)</title><rect x="99.8783%" y="805" width="0.0406%" height="15" fill="rgb(228,127,35)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="815.50"></text></g><g><title>`0x7FFE4393ED8C (1 samples, 0.04%)</title><rect x="99.8783%" y="789" width="0.0406%" height="15" fill="rgb(245,102,45)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="799.50"></text></g><g><title>`0x7FFE43984100 (1 samples, 0.04%)</title><rect x="99.8783%" y="773" width="0.0406%" height="15" fill="rgb(214,1,49)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="783.50"></text></g><g><title>`0x7FFE439B0A54 (1 samples, 0.04%)</title><rect x="99.8783%" y="757" width="0.0406%" height="15" fill="rgb(226,163,40)" fg:x="2462" fg:w="1"/><text x="100.1283%" y="767.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.04%)</title><rect x="99.9189%" y="837" width="0.0406%" height="15" fill="rgb(239,212,28)" fg:x="2463" fg:w="1"/><text x="100.1689%" y="847.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.04%)</title><rect x="99.9189%" y="821" width="0.0406%" height="15" fill="rgb(220,20,13)" fg:x="2463" fg:w="1"/><text x="100.1689%" y="831.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.04%)</title><rect x="99.9189%" y="805" width="0.0406%" height="15" fill="rgb(210,164,35)" fg:x="2463" fg:w="1"/><text x="100.1689%" y="815.50"></text></g><g><title>`0x7FFE43865B20 (1 samples, 0.04%)</title><rect x="99.9189%" y="789" width="0.0406%" height="15" fill="rgb(248,109,41)" fg:x="2463" fg:w="1"/><text x="100.1689%" y="799.50"></text></g><g><title>all (2,465 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(238,23,50)" fg:x="0" fg:w="2465"/><text x="0.2500%" y="943.50"></text></g><g><title>`0x7FFE439842CE (24 samples, 0.97%)</title><rect x="99.0264%" y="917" width="0.9736%" height="15" fill="rgb(211,48,49)" fg:x="2441" fg:w="24"/><text x="99.2764%" y="927.50"></text></g><g><title>`0x7FFE439843A3 (24 samples, 0.97%)</title><rect x="99.0264%" y="901" width="0.9736%" height="15" fill="rgb(223,36,21)" fg:x="2441" fg:w="24"/><text x="99.2764%" y="911.50"></text></g><g><title>`0x7FFE439DA99A (24 samples, 0.97%)</title><rect x="99.0264%" y="885" width="0.9736%" height="15" fill="rgb(207,123,46)" fg:x="2441" fg:w="24"/><text x="99.2764%" y="895.50"></text></g><g><title>`0x7FFE439EECF9 (2 samples, 0.08%)</title><rect x="99.9189%" y="869" width="0.0811%" height="15" fill="rgb(240,218,32)" fg:x="2463" fg:w="2"/><text x="100.1689%" y="879.50"></text></g><g><title>`0x7FFE4397D320 (2 samples, 0.08%)</title><rect x="99.9189%" y="853" width="0.0811%" height="15" fill="rgb(252,5,43)" fg:x="2463" fg:w="2"/><text x="100.1689%" y="863.50"></text></g><g><title>`0x7FFE4397D320 (1 samples, 0.04%)</title><rect x="99.9594%" y="837" width="0.0406%" height="15" fill="rgb(252,84,19)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="847.50"></text></g><g><title>`0x7FFE4397D2AE (1 samples, 0.04%)</title><rect x="99.9594%" y="821" width="0.0406%" height="15" fill="rgb(243,152,39)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="831.50"></text></g><g><title>`0x7FFE4397D4FD (1 samples, 0.04%)</title><rect x="99.9594%" y="805" width="0.0406%" height="15" fill="rgb(234,160,15)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="815.50"></text></g><g><title>`0x7FFE43938B5F (1 samples, 0.04%)</title><rect x="99.9594%" y="789" width="0.0406%" height="15" fill="rgb(237,34,20)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="799.50"></text></g><g><title>`0x7FFE410076B3 (1 samples, 0.04%)</title><rect x="99.9594%" y="773" width="0.0406%" height="15" fill="rgb(229,97,13)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="783.50"></text></g><g><title>`0x7FFE41007FCA (1 samples, 0.04%)</title><rect x="99.9594%" y="757" width="0.0406%" height="15" fill="rgb(234,71,50)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="767.50"></text></g><g><title>`0x7FFE40FF63E4 (1 samples, 0.04%)</title><rect x="99.9594%" y="741" width="0.0406%" height="15" fill="rgb(253,155,4)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="751.50"></text></g><g><title>`0x7FFE40FF656F (1 samples, 0.04%)</title><rect x="99.9594%" y="725" width="0.0406%" height="15" fill="rgb(222,185,37)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="735.50"></text></g><g><title>`0x7FFE40FF67E1 (1 samples, 0.04%)</title><rect x="99.9594%" y="709" width="0.0406%" height="15" fill="rgb(251,177,13)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="719.50"></text></g><g><title>`0x7FFE40FF818A (1 samples, 0.04%)</title><rect x="99.9594%" y="693" width="0.0406%" height="15" fill="rgb(250,179,40)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="703.50"></text></g><g><title>`0x7FFE40FF82FD (1 samples, 0.04%)</title><rect x="99.9594%" y="677" width="0.0406%" height="15" fill="rgb(242,44,2)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="687.50"></text></g><g><title>`0x7FFE41235003 (1 samples, 0.04%)</title><rect x="99.9594%" y="661" width="0.0406%" height="15" fill="rgb(216,177,13)" fg:x="2464" fg:w="1"/><text x="100.2094%" y="671.50"></text></g></svg></svg>