<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="853.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="20002"><g><title>`0x7FFE4396AEE0 (5 samples, 0.02%)</title><rect x="0.0000%" y="805" width="0.0250%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="815.50"></text></g><g><title>`0x7FFE4392127B (4 samples, 0.02%)</title><rect x="0.0350%" y="725" width="0.0200%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="4"/><text x="0.2850%" y="735.50"></text></g><g><title>`0x7FFE43945E46 (8 samples, 0.04%)</title><rect x="0.0250%" y="773" width="0.0400%" height="15" fill="rgb(221,193,54)" fg:x="5" fg:w="8"/><text x="0.2750%" y="783.50"></text></g><g><title>`0x7FFE4397287A (6 samples, 0.03%)</title><rect x="0.0350%" y="757" width="0.0300%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="6"/><text x="0.2850%" y="767.50"></text></g><g><title>`0x7FFE439211BB (6 samples, 0.03%)</title><rect x="0.0350%" y="741" width="0.0300%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="6"/><text x="0.2850%" y="751.50"></text></g><g><title>`0x7FFE43938D94 (3 samples, 0.01%)</title><rect x="0.0650%" y="645" width="0.0150%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="3"/><text x="0.3150%" y="655.50"></text></g><g><title>`0x7FFE439212AF (3 samples, 0.01%)</title><rect x="0.0650%" y="629" width="0.0150%" height="15" fill="rgb(207,160,47)" fg:x="13" fg:w="3"/><text x="0.3150%" y="639.50"></text></g><g><title>`0x7FFE4100BEA8 (5 samples, 0.02%)</title><rect x="0.0650%" y="741" width="0.0250%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="5"/><text x="0.3150%" y="751.50"></text></g><g><title>`0x7FFE41018FB1 (5 samples, 0.02%)</title><rect x="0.0650%" y="725" width="0.0250%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="5"/><text x="0.3150%" y="735.50"></text></g><g><title>`0x7FFE41011C03 (5 samples, 0.02%)</title><rect x="0.0650%" y="709" width="0.0250%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="5"/><text x="0.3150%" y="719.50"></text></g><g><title>`0x7FFE4122B662 (5 samples, 0.02%)</title><rect x="0.0650%" y="693" width="0.0250%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="5"/><text x="0.3150%" y="703.50"></text></g><g><title>`0x7FFE4393A71A (5 samples, 0.02%)</title><rect x="0.0650%" y="677" width="0.0250%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="5"/><text x="0.3150%" y="687.50"></text></g><g><title>`0x7FFE4392909C (5 samples, 0.02%)</title><rect x="0.0650%" y="661" width="0.0250%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="5"/><text x="0.3150%" y="671.50"></text></g><g><title>`0x7FFE4100C099 (6 samples, 0.03%)</title><rect x="0.0650%" y="757" width="0.0300%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="6"/><text x="0.3150%" y="767.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_PLOTTING_BACKEND::closure$0 (10 samples, 0.05%)</title><rect x="0.1100%" y="597" width="0.0500%" height="15" fill="rgb(217,207,13)" fg:x="22" fg:w="10"/><text x="0.3600%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; &gt;::initialize&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*) (10 samples, 0.05%)</title><rect x="0.1100%" y="581" width="0.0500%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="10"/><text x="0.3600%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (10 samples, 0.05%)</title><rect x="0.1100%" y="565" width="0.0500%" height="15" fill="rgb(225,20,46)" fg:x="22" fg:w="10"/><text x="0.3600%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,once_cell::sync::impl$11::force::closure_env$0&lt;enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;criterion_plot::Version,enum2$&lt;criterion_plot::VersionError&gt; &gt; &gt; (*)()&gt; &gt;,enum2$ (10 samples, 0.05%)</title><rect x="0.1100%" y="549" width="0.0500%" height="15" fill="rgb(210,31,41)" fg:x="22" fg:w="10"/><text x="0.3600%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion_plot::version (10 samples, 0.05%)</title><rect x="0.1100%" y="533" width="0.0500%" height="15" fill="rgb(221,200,47)" fg:x="22" fg:w="10"/><text x="0.3600%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;, enum2$&lt;criterion_plot::VersionError&gt; (*) (10 samples, 0.05%)</title><rect x="0.1100%" y="517" width="0.0500%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="10"/><text x="0.3600%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (10 samples, 0.05%)</title><rect x="0.1100%" y="501" width="0.0500%" height="15" fill="rgb(249,33,26)" fg:x="22" fg:w="10"/><text x="0.3600%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (10 samples, 0.05%)</title><rect x="0.1100%" y="485" width="0.0500%" height="15" fill="rgb(235,183,28)" fg:x="22" fg:w="10"/><text x="0.3600%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (10 samples, 0.05%)</title><rect x="0.1100%" y="469" width="0.0500%" height="15" fill="rgb(221,5,38)" fg:x="22" fg:w="10"/><text x="0.3600%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe (10 samples, 0.05%)</title><rect x="0.1100%" y="453" width="0.0500%" height="15" fill="rgb(247,18,42)" fg:x="22" fg:w="10"/><text x="0.3600%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::search_paths (10 samples, 0.05%)</title><rect x="0.1100%" y="437" width="0.0500%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="10"/><text x="0.3600%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::resolve_exe::closure$0 (9 samples, 0.04%)</title><rect x="0.1150%" y="421" width="0.0450%" height="15" fill="rgb(249,31,29)" fg:x="23" fg:w="9"/><text x="0.3650%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.04%)</title><rect x="0.1150%" y="405" width="0.0450%" height="15" fill="rgb(225,111,53)" fg:x="23" fg:w="9"/><text x="0.3650%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.04%)</title><rect x="0.1150%" y="389" width="0.0450%" height="15" fill="rgb(238,160,17)" fg:x="23" fg:w="9"/><text x="0.3650%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.04%)</title><rect x="0.1150%" y="373" width="0.0450%" height="15" fill="rgb(214,148,48)" fg:x="23" fg:w="9"/><text x="0.3650%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.04%)</title><rect x="0.1150%" y="357" width="0.0450%" height="15" fill="rgb(232,36,49)" fg:x="23" fg:w="9"/><text x="0.3650%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.04%)</title><rect x="0.1150%" y="341" width="0.0450%" height="15" fill="rgb(209,103,24)" fg:x="23" fg:w="9"/><text x="0.3650%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place (9 samples, 0.04%)</title><rect x="0.1150%" y="325" width="0.0450%" height="15" fill="rgb(229,88,8)" fg:x="23" fg:w="9"/><text x="0.3650%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop (9 samples, 0.04%)</title><rect x="0.1150%" y="309" width="0.0450%" height="15" fill="rgb(213,181,19)" fg:x="23" fg:w="9"/><text x="0.3650%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::deallocate (9 samples, 0.04%)</title><rect x="0.1150%" y="293" width="0.0450%" height="15" fill="rgb(254,191,54)" fg:x="23" fg:w="9"/><text x="0.3650%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::current_memory (9 samples, 0.04%)</title><rect x="0.1150%" y="277" width="0.0450%" height="15" fill="rgb(241,83,37)" fg:x="23" fg:w="9"/><text x="0.3650%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::program_exists (9 samples, 0.04%)</title><rect x="0.1150%" y="261" width="0.0450%" height="15" fill="rgb(233,36,39)" fg:x="23" fg:w="9"/><text x="0.3650%" y="271.50"></text></g><g><title>`0x7FFE41232291 (9 samples, 0.04%)</title><rect x="0.1150%" y="245" width="0.0450%" height="15" fill="rgb(226,3,54)" fg:x="23" fg:w="9"/><text x="0.3650%" y="255.50"></text></g><g><title>`0x7FFE439B0874 (9 samples, 0.04%)</title><rect x="0.1150%" y="229" width="0.0450%" height="15" fill="rgb(245,192,40)" fg:x="23" fg:w="9"/><text x="0.3650%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;criterion::PlottingBackend&gt;::initialize&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*) (11 samples, 0.05%)</title><rect x="0.1100%" y="661" width="0.0550%" height="15" fill="rgb(238,167,29)" fg:x="22" fg:w="11"/><text x="0.3600%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (11 samples, 0.05%)</title><rect x="0.1100%" y="645" width="0.0550%" height="15" fill="rgb(232,182,51)" fg:x="22" fg:w="11"/><text x="0.3600%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;criterion::PlottingBackend,once_cell::sync::impl$11::force::closure_env$0&lt;criterion::PlottingBackend,criterion::PlottingBackend (*)()&gt; &gt;,enum2$ (11 samples, 0.05%)</title><rect x="0.1100%" y="629" width="0.0550%" height="15" fill="rgb(231,60,39)" fg:x="22" fg:w="11"/><text x="0.3600%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_PLOTTING_BACKEND::closure_env$0,tuple$&lt;&gt; &gt; (11 samples, 0.05%)</title><rect x="0.1100%" y="613" width="0.0550%" height="15" fill="rgb(208,69,12)" fg:x="22" fg:w="11"/><text x="0.3600%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (9 samples, 0.04%)</title><rect x="0.1700%" y="469" width="0.0450%" height="15" fill="rgb(235,93,37)" fg:x="34" fg:w="9"/><text x="0.4200%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (9 samples, 0.04%)</title><rect x="0.1700%" y="453" width="0.0450%" height="15" fill="rgb(213,116,39)" fg:x="34" fg:w="9"/><text x="0.4200%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize(serde_json::de::Deserializer (9 samples, 0.04%)</title><rect x="0.1700%" y="437" width="0.0450%" height="15" fill="rgb(222,207,29)" fg:x="34" fg:w="9"/><text x="0.4200%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (9 samples, 0.04%)</title><rect x="0.1700%" y="421" width="0.0450%" height="15" fill="rgb(206,96,30)" fg:x="34" fg:w="9"/><text x="0.4200%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::_::impl$0::deserialize::impl$2::visit_map(criterion::cargo_target_directory::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (9 samples, 0.04%)</title><rect x="0.1700%" y="405" width="0.0450%" height="15" fill="rgb(218,138,4)" fg:x="34" fg:w="9"/><text x="0.4200%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::MapAccess::next_value(serde_json::de::MapAccess (9 samples, 0.04%)</title><rect x="0.1700%" y="389" width="0.0450%" height="15" fill="rgb(250,191,14)" fg:x="34" fg:w="9"/><text x="0.4200%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$11::next_value_seed(serde_json::de::MapAccess&lt;serde_json::read::SliceRead&gt;*, core::marker::PhantomData (9 samples, 0.04%)</title><rect x="0.1700%" y="373" width="0.0450%" height="15" fill="rgb(239,60,40)" fg:x="34" fg:w="9"/><text x="0.4200%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;serde::de::ignored_any::IgnoredAny&gt;, serde_json::de::Deserializer (9 samples, 0.04%)</title><rect x="0.1700%" y="357" width="0.0450%" height="15" fill="rgb(206,27,48)" fg:x="34" fg:w="9"/><text x="0.4200%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde::de::ignored_any::impl$1::deserialize(serde_json::de::Deserializer (9 samples, 0.04%)</title><rect x="0.1700%" y="341" width="0.0450%" height="15" fill="rgb(225,35,8)" fg:x="34" fg:w="9"/><text x="0.4200%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_ignored_any(serde_json::de::Deserializer (9 samples, 0.04%)</title><rect x="0.1700%" y="325" width="0.0450%" height="15" fill="rgb(250,213,24)" fg:x="34" fg:w="9"/><text x="0.4200%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::Deserializer&lt;serde_json::read::SliceRead&gt;::ignore_value (9 samples, 0.04%)</title><rect x="0.1700%" y="309" width="0.0450%" height="15" fill="rgb(247,123,22)" fg:x="34" fg:w="9"/><text x="0.4200%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::read::impl$7::ignore_str (5 samples, 0.02%)</title><rect x="0.1900%" y="293" width="0.0250%" height="15" fill="rgb(231,138,38)" fg:x="38" fg:w="5"/><text x="0.4400%" y="303.50"></text></g><g><title>`0x7FFE41246A7A (3 samples, 0.01%)</title><rect x="0.2300%" y="341" width="0.0150%" height="15" fill="rgb(231,145,46)" fg:x="46" fg:w="3"/><text x="0.4800%" y="351.50"></text></g><g><title>`0x7FFE412B4869 (3 samples, 0.01%)</title><rect x="0.2300%" y="325" width="0.0150%" height="15" fill="rgb(251,118,11)" fg:x="46" fg:w="3"/><text x="0.4800%" y="335.50"></text></g><g><title>`0x7FFE4127EE32 (3 samples, 0.01%)</title><rect x="0.2300%" y="309" width="0.0150%" height="15" fill="rgb(217,147,25)" fg:x="46" fg:w="3"/><text x="0.4800%" y="319.50"></text></g><g><title>`0x7FFE4393BEB7 (3 samples, 0.01%)</title><rect x="0.2300%" y="293" width="0.0150%" height="15" fill="rgb(247,81,37)" fg:x="46" fg:w="3"/><text x="0.4800%" y="303.50"></text></g><g><title>`0x7FFE439330F5 (3 samples, 0.01%)</title><rect x="0.2300%" y="277" width="0.0150%" height="15" fill="rgb(209,12,38)" fg:x="46" fg:w="3"/><text x="0.4800%" y="287.50"></text></g><g><title>`0x7FFE4392607E (3 samples, 0.01%)</title><rect x="0.2300%" y="261" width="0.0150%" height="15" fill="rgb(227,1,9)" fg:x="46" fg:w="3"/><text x="0.4800%" y="271.50"></text></g><g><title>`0x7FFE43928EC0 (3 samples, 0.01%)</title><rect x="0.2300%" y="245" width="0.0150%" height="15" fill="rgb(248,47,43)" fg:x="46" fg:w="3"/><text x="0.4800%" y="255.50"></text></g><g><title>`0x7FFE41247624 (5 samples, 0.02%)</title><rect x="0.2450%" y="341" width="0.0250%" height="15" fill="rgb(221,10,30)" fg:x="49" fg:w="5"/><text x="0.4950%" y="351.50"></text></g><g><title>`0x7FFE439B1AA4 (4 samples, 0.02%)</title><rect x="0.2500%" y="325" width="0.0200%" height="15" fill="rgb(210,229,1)" fg:x="50" fg:w="4"/><text x="0.5000%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::spawn (13 samples, 0.06%)</title><rect x="0.2250%" y="421" width="0.0650%" height="15" fill="rgb(222,148,37)" fg:x="45" fg:w="13"/><text x="0.4750%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::cvt (12 samples, 0.06%)</title><rect x="0.2300%" y="405" width="0.0600%" height="15" fill="rgb(234,67,33)" fg:x="46" fg:w="12"/><text x="0.4800%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::impl$3::is_zero (12 samples, 0.06%)</title><rect x="0.2300%" y="389" width="0.0600%" height="15" fill="rgb(247,98,35)" fg:x="46" fg:w="12"/><text x="0.4800%" y="399.50"></text></g><g><title>`0x7FFE42BA61F4 (12 samples, 0.06%)</title><rect x="0.2300%" y="373" width="0.0600%" height="15" fill="rgb(247,138,52)" fg:x="46" fg:w="12"/><text x="0.4800%" y="383.50"></text></g><g><title>`0x7FFE4127EAB6 (12 samples, 0.06%)</title><rect x="0.2300%" y="357" width="0.0600%" height="15" fill="rgb(213,79,30)" fg:x="46" fg:w="12"/><text x="0.4800%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec::spare_capacity_mut (3 samples, 0.01%)</title><rect x="0.2950%" y="357" width="0.0150%" height="15" fill="rgb(246,177,23)" fg:x="59" fg:w="3"/><text x="0.5450%" y="367.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec::capacity (3 samples, 0.01%)</title><rect x="0.2950%" y="341" width="0.0150%" height="15" fill="rgb(230,62,27)" fg:x="59" fg:w="3"/><text x="0.5450%" y="351.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::capacity (3 samples, 0.01%)</title><rect x="0.2950%" y="325" width="0.0150%" height="15" fill="rgb(216,154,8)" fg:x="59" fg:w="3"/><text x="0.5450%" y="335.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt; (3 samples, 0.01%)</title><rect x="0.2950%" y="309" width="0.0150%" height="15" fill="rgb(244,35,45)" fg:x="59" fg:w="3"/><text x="0.5450%" y="319.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner::grow_amortized (3 samples, 0.01%)</title><rect x="0.2950%" y="293" width="0.0150%" height="15" fill="rgb(251,115,12)" fg:x="59" fg:w="3"/><text x="0.5450%" y="303.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (3 samples, 0.01%)</title><rect x="0.2950%" y="277" width="0.0150%" height="15" fill="rgb(240,54,50)" fg:x="59" fg:w="3"/><text x="0.5450%" y="287.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt; (3 samples, 0.01%)</title><rect x="0.2950%" y="261" width="0.0150%" height="15" fill="rgb(233,84,52)" fg:x="59" fg:w="3"/><text x="0.5450%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::grow (3 samples, 0.01%)</title><rect x="0.2950%" y="245" width="0.0150%" height="15" fill="rgb(207,117,47)" fg:x="59" fg:w="3"/><text x="0.5450%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::grow_impl (3 samples, 0.01%)</title><rect x="0.2950%" y="229" width="0.0150%" height="15" fill="rgb(249,43,39)" fg:x="59" fg:w="3"/><text x="0.5450%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::impl$26::branch (3 samples, 0.01%)</title><rect x="0.2950%" y="213" width="0.0150%" height="15" fill="rgb(209,38,44)" fg:x="59" fg:w="3"/><text x="0.5450%" y="223.50"></text></g><g><title>`0x7FFE4395216A (3 samples, 0.01%)</title><rect x="0.2950%" y="197" width="0.0150%" height="15" fill="rgb(236,212,23)" fg:x="59" fg:w="3"/><text x="0.5450%" y="207.50"></text></g><g><title>`0x7FFE439522A7 (3 samples, 0.01%)</title><rect x="0.2950%" y="181" width="0.0150%" height="15" fill="rgb(242,79,21)" fg:x="59" fg:w="3"/><text x="0.5450%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::impl$4::default (42 samples, 0.21%)</title><rect x="0.1100%" y="677" width="0.2100%" height="15" fill="rgb(211,96,35)" fg:x="22" fg:w="42"/><text x="0.3600%" y="687.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;std::path::PathBuf,std::path::PathBuf (*) (30 samples, 0.15%)</title><rect x="0.1700%" y="661" width="0.1500%" height="15" fill="rgb(253,215,40)" fg:x="34" fg:w="30"/><text x="0.4200%" y="671.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::ffi::os_str::impl$10::clone (30 samples, 0.15%)</title><rect x="0.1700%" y="645" width="0.1500%" height="15" fill="rgb(211,81,21)" fg:x="34" fg:w="30"/><text x="0.4200%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::os_str::wtf8::impl$10::clone (30 samples, 0.15%)</title><rect x="0.1700%" y="629" width="0.1500%" height="15" fill="rgb(208,190,38)" fg:x="34" fg:w="30"/><text x="0.4200%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::wtf8::impl$35::clone (30 samples, 0.15%)</title><rect x="0.1700%" y="613" width="0.1500%" height="15" fill="rgb(235,213,38)" fg:x="34" fg:w="30"/><text x="0.4200%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::OnceCell&lt;std::path::PathBuf&gt;::initialize&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*) (30 samples, 0.15%)</title><rect x="0.1700%" y="597" width="0.1500%" height="15" fill="rgb(237,122,38)" fg:x="34" fg:w="30"/><text x="0.4200%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (30 samples, 0.15%)</title><rect x="0.1700%" y="581" width="0.1500%" height="15" fill="rgb(244,218,35)" fg:x="34" fg:w="30"/><text x="0.4200%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`once_cell::imp::impl$4::initialize::closure$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;std::path::PathBuf,once_cell::sync::impl$11::force::closure_env$0&lt;std::path::PathBuf,std::path::PathBuf (*)()&gt; &gt;,enum2$ (30 samples, 0.15%)</title><rect x="0.1700%" y="565" width="0.1500%" height="15" fill="rgb(240,68,47)" fg:x="34" fg:w="30"/><text x="0.4200%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::FnOnce::call_once&lt;criterion::DEFAULT_OUTPUT_DIRECTORY::closure_env$0,tuple$&lt;&gt; &gt; (30 samples, 0.15%)</title><rect x="0.1700%" y="549" width="0.1500%" height="15" fill="rgb(210,16,53)" fg:x="34" fg:w="30"/><text x="0.4200%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::DEFAULT_OUTPUT_DIRECTORY::closure$0 (30 samples, 0.15%)</title><rect x="0.1700%" y="533" width="0.1500%" height="15" fill="rgb(235,124,12)" fg:x="34" fg:w="30"/><text x="0.4200%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory (30 samples, 0.15%)</title><rect x="0.1700%" y="517" width="0.1500%" height="15" fill="rgb(224,169,11)" fg:x="34" fg:w="30"/><text x="0.4200%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;::or_else(enum2$&lt;core::option::Option (30 samples, 0.15%)</title><rect x="0.1700%" y="501" width="0.1500%" height="15" fill="rgb(250,166,2)" fg:x="34" fg:w="30"/><text x="0.4200%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::cargo_target_directory::closure$0 (30 samples, 0.15%)</title><rect x="0.1700%" y="485" width="0.1500%" height="15" fill="rgb(242,216,29)" fg:x="34" fg:w="30"/><text x="0.4200%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::result::Result&lt;std::process::Output,std::io::error::Error&gt; &gt;::ok(enum2$&lt;core::result::Result (20 samples, 0.10%)</title><rect x="0.2200%" y="469" width="0.1000%" height="15" fill="rgb(230,116,27)" fg:x="44" fg:w="20"/><text x="0.4700%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::process::Command::output (20 samples, 0.10%)</title><rect x="0.2200%" y="453" width="0.1000%" height="15" fill="rgb(228,99,48)" fg:x="44" fg:w="20"/><text x="0.4700%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::process::Command::output (19 samples, 0.09%)</title><rect x="0.2250%" y="437" width="0.0950%" height="15" fill="rgb(253,11,6)" fg:x="45" fg:w="19"/><text x="0.4750%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys_common::process::wait_with_output (6 samples, 0.03%)</title><rect x="0.2900%" y="421" width="0.0300%" height="15" fill="rgb(247,143,39)" fg:x="58" fg:w="6"/><text x="0.5400%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::result::Result::unwrap (6 samples, 0.03%)</title><rect x="0.2900%" y="405" width="0.0300%" height="15" fill="rgb(236,97,10)" fg:x="58" fg:w="6"/><text x="0.5400%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::read2 (6 samples, 0.03%)</title><rect x="0.2900%" y="389" width="0.0300%" height="15" fill="rgb(233,208,19)" fg:x="58" fg:w="6"/><text x="0.5400%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::pal::windows::pipe::AsyncPipe::schedule_read (5 samples, 0.02%)</title><rect x="0.2950%" y="373" width="0.0250%" height="15" fill="rgb(216,164,2)" fg:x="59" fg:w="5"/><text x="0.5450%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::benchmark_group(ref$ (3 samples, 0.01%)</title><rect x="0.3200%" y="645" width="0.0150%" height="15" fill="rgb(220,129,5)" fg:x="64" fg:w="3"/><text x="0.5700%" y="655.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::convert::impl$3::into(ref$ (3 samples, 0.01%)</title><rect x="0.3200%" y="629" width="0.0150%" height="15" fill="rgb(242,17,10)" fg:x="64" fg:w="3"/><text x="0.5700%" y="639.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::string::impl$44::from(ref$ (3 samples, 0.01%)</title><rect x="0.3200%" y="613" width="0.0150%" height="15" fill="rgb(242,107,0)" fg:x="64" fg:w="3"/><text x="0.5700%" y="623.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::str::impl$4::to_owned(ref$ (3 samples, 0.01%)</title><rect x="0.3200%" y="597" width="0.0150%" height="15" fill="rgb(251,28,31)" fg:x="64" fg:w="3"/><text x="0.5700%" y="607.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="0.3200%" y="581" width="0.0150%" height="15" fill="rgb(233,223,10)" fg:x="64" fg:w="3"/><text x="0.5700%" y="591.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="0.3200%" y="565" width="0.0150%" height="15" fill="rgb(215,21,27)" fg:x="64" fg:w="3"/><text x="0.5700%" y="575.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="0.3200%" y="549" width="0.0150%" height="15" fill="rgb(232,23,21)" fg:x="64" fg:w="3"/><text x="0.5700%" y="559.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="0.3200%" y="533" width="0.0150%" height="15" fill="rgb(244,5,23)" fg:x="64" fg:w="3"/><text x="0.5700%" y="543.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="0.3200%" y="517" width="0.0150%" height="15" fill="rgb(226,81,46)" fg:x="64" fg:w="3"/><text x="0.5700%" y="527.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="0.3200%" y="501" width="0.0150%" height="15" fill="rgb(247,70,30)" fg:x="64" fg:w="3"/><text x="0.5700%" y="511.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="0.3200%" y="485" width="0.0150%" height="15" fill="rgb(212,68,19)" fg:x="64" fg:w="3"/><text x="0.5700%" y="495.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="0.3200%" y="469" width="0.0150%" height="15" fill="rgb(240,187,13)" fg:x="64" fg:w="3"/><text x="0.5700%" y="479.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.01%)</title><rect x="0.3200%" y="453" width="0.0150%" height="15" fill="rgb(223,113,26)" fg:x="64" fg:w="3"/><text x="0.5700%" y="463.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::impl$1::allocate (3 samples, 0.01%)</title><rect x="0.3200%" y="437" width="0.0150%" height="15" fill="rgb(206,192,2)" fg:x="64" fg:w="3"/><text x="0.5700%" y="447.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::Global::alloc_impl (3 samples, 0.01%)</title><rect x="0.3200%" y="421" width="0.0150%" height="15" fill="rgb(241,108,4)" fg:x="64" fg:w="3"/><text x="0.5700%" y="431.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::alloc::alloc (3 samples, 0.01%)</title><rect x="0.3200%" y="405" width="0.0150%" height="15" fill="rgb(247,173,49)" fg:x="64" fg:w="3"/><text x="0.5700%" y="415.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::read_volatile (3 samples, 0.01%)</title><rect x="0.3200%" y="389" width="0.0150%" height="15" fill="rgb(224,114,35)" fg:x="64" fg:w="3"/><text x="0.5700%" y="399.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::configure_from_args&lt;criterion::measurement::WallTime&gt;(criterion::Criterion (3 samples, 0.01%)</title><rect x="0.3200%" y="373" width="0.0150%" height="15" fill="rgb(245,159,27)" fg:x="64" fg:w="3"/><text x="0.5700%" y="383.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$6::next(core::ops::range::Range (1,557 samples, 7.78%)</title><rect x="0.3400%" y="261" width="7.7842%" height="15" fill="rgb(245,172,44)" fg:x="68" fg:w="1557"/><text x="0.5900%" y="271.50">my_benchmar..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (1,557 samples, 7.78%)</title><rect x="0.3400%" y="245" width="7.7842%" height="15" fill="rgb(236,23,11)" fg:x="68" fg:w="1557"/><text x="0.5900%" y="255.50">my_benchmar..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::cmp::impls::impl$76::lt (1,263 samples, 6.31%)</title><rect x="1.8098%" y="229" width="6.3144%" height="15" fill="rgb(205,117,38)" fg:x="362" fg:w="1263"/><text x="2.0598%" y="239.50">my_bench..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$2::play(my_benchmark::NullAudioPlayer*, ref$&lt;slice2$ (470 samples, 2.35%)</title><rect x="5.7744%" y="213" width="2.3498%" height="15" fill="rgb(237,72,25)" fg:x="1155" fg:w="470"/><text x="6.0244%" y="223.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.02%)</title><rect x="19.2681%" y="181" width="0.0250%" height="15" fill="rgb(244,70,9)" fg:x="3854" fg:w="5"/><text x="19.5181%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (5 samples, 0.02%)</title><rect x="19.2931%" y="181" width="0.0250%" height="15" fill="rgb(217,125,39)" fg:x="3859" fg:w="5"/><text x="19.5431%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (12 samples, 0.06%)</title><rect x="19.2631%" y="197" width="0.0600%" height="15" fill="rgb(235,36,10)" fg:x="3853" fg:w="12"/><text x="19.5131%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::add16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (20 samples, 0.10%)</title><rect x="19.2381%" y="213" width="0.1000%" height="15" fill="rgb(251,123,47)" fg:x="3848" fg:w="20"/><text x="19.4881%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$3::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (3 samples, 0.01%)</title><rect x="19.3231%" y="197" width="0.0150%" height="15" fill="rgb(221,13,13)" fg:x="3865" fg:w="3"/><text x="19.5731%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::add&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (7 samples, 0.03%)</title><rect x="19.3381%" y="213" width="0.0350%" height="15" fill="rgb(238,131,9)" fg:x="3868" fg:w="7"/><text x="19.5881%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (19 samples, 0.09%)</title><rect x="19.5730%" y="181" width="0.0950%" height="15" fill="rgb(211,50,8)" fg:x="3915" fg:w="19"/><text x="19.8230%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (7 samples, 0.03%)</title><rect x="19.6330%" y="165" width="0.0350%" height="15" fill="rgb(245,182,24)" fg:x="3927" fg:w="7"/><text x="19.8830%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (15 samples, 0.07%)</title><rect x="19.6680%" y="181" width="0.0750%" height="15" fill="rgb(242,14,37)" fg:x="3934" fg:w="15"/><text x="19.9180%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (39 samples, 0.19%)</title><rect x="19.5530%" y="197" width="0.1950%" height="15" fill="rgb(246,228,12)" fg:x="3911" fg:w="39"/><text x="19.8030%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (18 samples, 0.09%)</title><rect x="19.7530%" y="197" width="0.0900%" height="15" fill="rgb(213,55,15)" fg:x="3951" fg:w="18"/><text x="20.0030%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (118 samples, 0.59%)</title><rect x="19.3731%" y="213" width="0.5899%" height="15" fill="rgb(209,9,3)" fg:x="3875" fg:w="118"/><text x="19.6231%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (24 samples, 0.12%)</title><rect x="19.8430%" y="197" width="0.1200%" height="15" fill="rgb(230,59,30)" fg:x="3969" fg:w="24"/><text x="20.0930%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (11 samples, 0.05%)</title><rect x="21.1529%" y="165" width="0.0550%" height="15" fill="rgb(209,121,21)" fg:x="4231" fg:w="11"/><text x="21.4029%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (96 samples, 0.48%)</title><rect x="20.8479%" y="181" width="0.4800%" height="15" fill="rgb(220,109,13)" fg:x="4170" fg:w="96"/><text x="21.0979%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (24 samples, 0.12%)</title><rect x="21.2079%" y="165" width="0.1200%" height="15" fill="rgb(232,18,1)" fg:x="4242" fg:w="24"/><text x="21.4579%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (96 samples, 0.48%)</title><rect x="21.3279%" y="181" width="0.4800%" height="15" fill="rgb(215,41,42)" fg:x="4266" fg:w="96"/><text x="21.5779%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::and&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (373 samples, 1.86%)</title><rect x="19.9630%" y="213" width="1.8648%" height="15" fill="rgb(224,123,36)" fg:x="3993" fg:w="373"/><text x="20.2130%" y="223.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (220 samples, 1.10%)</title><rect x="20.7279%" y="197" width="1.0999%" height="15" fill="rgb(240,125,3)" fg:x="4146" fg:w="220"/><text x="20.9779%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (4 samples, 0.02%)</title><rect x="21.8078%" y="181" width="0.0200%" height="15" fill="rgb(205,98,50)" fg:x="4362" fg:w="4"/><text x="22.0578%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (4 samples, 0.02%)</title><rect x="21.8078%" y="165" width="0.0200%" height="15" fill="rgb(205,185,37)" fg:x="4362" fg:w="4"/><text x="22.0578%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (4 samples, 0.02%)</title><rect x="22.5027%" y="149" width="0.0200%" height="15" fill="rgb(238,207,15)" fg:x="4501" fg:w="4"/><text x="22.7527%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (58 samples, 0.29%)</title><rect x="22.2878%" y="165" width="0.2900%" height="15" fill="rgb(213,199,42)" fg:x="4458" fg:w="58"/><text x="22.5378%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (11 samples, 0.05%)</title><rect x="22.5227%" y="149" width="0.0550%" height="15" fill="rgb(235,201,11)" fg:x="4505" fg:w="11"/><text x="22.7727%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (60 samples, 0.30%)</title><rect x="22.5777%" y="165" width="0.3000%" height="15" fill="rgb(207,46,11)" fg:x="4516" fg:w="60"/><text x="22.8277%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (138 samples, 0.69%)</title><rect x="22.1928%" y="181" width="0.6899%" height="15" fill="rgb(241,35,35)" fg:x="4439" fg:w="138"/><text x="22.4428%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::to_le_bytes (3 samples, 0.01%)</title><rect x="22.9527%" y="165" width="0.0150%" height="15" fill="rgb(243,32,47)" fg:x="4591" fg:w="3"/><text x="23.2027%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::to_ne_bytes (3 samples, 0.01%)</title><rect x="22.9527%" y="149" width="0.0150%" height="15" fill="rgb(247,202,23)" fg:x="4591" fg:w="3"/><text x="23.2027%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_sub (35 samples, 0.17%)</title><rect x="22.9677%" y="165" width="0.1750%" height="15" fill="rgb(219,102,11)" fg:x="4594" fg:w="35"/><text x="23.2177%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16 (133 samples, 0.66%)</title><rect x="22.8827%" y="181" width="0.6649%" height="15" fill="rgb(243,110,44)" fg:x="4577" fg:w="133"/><text x="23.1327%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (81 samples, 0.40%)</title><rect x="23.1427%" y="165" width="0.4050%" height="15" fill="rgb(222,74,54)" fg:x="4629" fg:w="81"/><text x="23.3927%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_call&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (379 samples, 1.89%)</title><rect x="21.9628%" y="197" width="1.8948%" height="15" fill="rgb(216,99,12)" fg:x="4393" fg:w="379"/><text x="22.2128%" y="207.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (62 samples, 0.31%)</title><rect x="23.5476%" y="181" width="0.3100%" height="15" fill="rgb(226,22,26)" fg:x="4710" fg:w="62"/><text x="23.7976%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (5 samples, 0.02%)</title><rect x="24.3426%" y="133" width="0.0250%" height="15" fill="rgb(217,163,10)" fg:x="4869" fg:w="5"/><text x="24.5926%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (52 samples, 0.26%)</title><rect x="24.1626%" y="149" width="0.2600%" height="15" fill="rgb(213,25,53)" fg:x="4833" fg:w="52"/><text x="24.4126%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (11 samples, 0.05%)</title><rect x="24.3676%" y="133" width="0.0550%" height="15" fill="rgb(252,105,26)" fg:x="4874" fg:w="11"/><text x="24.6176%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (83 samples, 0.41%)</title><rect x="24.1226%" y="181" width="0.4150%" height="15" fill="rgb(220,39,43)" fg:x="4825" fg:w="83"/><text x="24.3726%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (83 samples, 0.41%)</title><rect x="24.1226%" y="165" width="0.4150%" height="15" fill="rgb(229,68,48)" fg:x="4825" fg:w="83"/><text x="24.3726%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (23 samples, 0.11%)</title><rect x="24.4226%" y="149" width="0.1150%" height="15" fill="rgb(252,8,32)" fg:x="4885" fg:w="23"/><text x="24.6726%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (9 samples, 0.04%)</title><rect x="24.5675%" y="165" width="0.0450%" height="15" fill="rgb(223,20,43)" fg:x="4914" fg:w="9"/><text x="24.8175%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (9 samples, 0.04%)</title><rect x="24.5675%" y="149" width="0.0450%" height="15" fill="rgb(229,81,49)" fg:x="4914" fg:w="9"/><text x="24.8175%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (7 samples, 0.03%)</title><rect x="24.7725%" y="149" width="0.0350%" height="15" fill="rgb(236,28,36)" fg:x="4955" fg:w="7"/><text x="25.0225%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (57 samples, 0.28%)</title><rect x="24.6125%" y="165" width="0.2850%" height="15" fill="rgb(249,185,26)" fg:x="4923" fg:w="57"/><text x="24.8625%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (18 samples, 0.09%)</title><rect x="24.8075%" y="149" width="0.0900%" height="15" fill="rgb(249,174,33)" fg:x="4962" fg:w="18"/><text x="25.0575%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::call (679 samples, 3.39%)</title><rect x="21.8278%" y="213" width="3.3947%" height="15" fill="rgb(233,201,37)" fg:x="4366" fg:w="679"/><text x="22.0778%" y="223.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (273 samples, 1.36%)</title><rect x="23.8576%" y="197" width="1.3649%" height="15" fill="rgb(221,78,26)" fg:x="4772" fg:w="273"/><text x="24.1076%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (137 samples, 0.68%)</title><rect x="24.5375%" y="181" width="0.6849%" height="15" fill="rgb(250,127,30)" fg:x="4908" fg:w="137"/><text x="24.7875%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (65 samples, 0.32%)</title><rect x="24.8975%" y="165" width="0.3250%" height="15" fill="rgb(230,49,44)" fg:x="4980" fg:w="65"/><text x="25.1475%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::call_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (4 samples, 0.02%)</title><rect x="25.2225%" y="213" width="0.0200%" height="15" fill="rgb(229,67,23)" fg:x="5045" fg:w="4"/><text x="25.4725%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_call (3 samples, 0.01%)</title><rect x="25.2275%" y="197" width="0.0150%" height="15" fill="rgb(249,83,47)" fg:x="5046" fg:w="3"/><text x="25.4775%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (5 samples, 0.02%)</title><rect x="25.4875%" y="165" width="0.0250%" height="15" fill="rgb(215,43,3)" fg:x="5098" fg:w="5"/><text x="25.7375%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (3 samples, 0.01%)</title><rect x="25.4975%" y="149" width="0.0150%" height="15" fill="rgb(238,154,13)" fg:x="5100" fg:w="3"/><text x="25.7475%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::bit&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(unsigned long long, enum2$ (14 samples, 0.07%)</title><rect x="25.4775%" y="181" width="0.0700%" height="15" fill="rgb(219,56,2)" fg:x="5096" fg:w="14"/><text x="25.7275%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (7 samples, 0.03%)</title><rect x="25.5124%" y="165" width="0.0350%" height="15" fill="rgb(233,0,4)" fg:x="5103" fg:w="7"/><text x="25.7624%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.01%)</title><rect x="25.6824%" y="133" width="0.0150%" height="15" fill="rgb(235,30,7)" fg:x="5137" fg:w="3"/><text x="25.9324%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (15 samples, 0.07%)</title><rect x="25.6524%" y="149" width="0.0750%" height="15" fill="rgb(250,79,13)" fg:x="5131" fg:w="15"/><text x="25.9024%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (6 samples, 0.03%)</title><rect x="25.6974%" y="133" width="0.0300%" height="15" fill="rgb(211,146,34)" fg:x="5140" fg:w="6"/><text x="25.9474%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::bit&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (55 samples, 0.27%)</title><rect x="25.5474%" y="181" width="0.2750%" height="15" fill="rgb(228,22,38)" fg:x="5110" fg:w="55"/><text x="25.7974%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (37 samples, 0.18%)</title><rect x="25.6374%" y="165" width="0.1850%" height="15" fill="rgb(235,168,5)" fg:x="5128" fg:w="37"/><text x="25.8874%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (19 samples, 0.09%)</title><rect x="25.7274%" y="149" width="0.0950%" height="15" fill="rgb(221,155,16)" fg:x="5146" fg:w="19"/><text x="25.9774%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_decode_execute (103 samples, 0.51%)</title><rect x="25.3225%" y="197" width="0.5149%" height="15" fill="rgb(215,215,53)" fg:x="5065" fg:w="103"/><text x="25.5725%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (3 samples, 0.01%)</title><rect x="25.8374%" y="197" width="0.0150%" height="15" fill="rgb(223,4,10)" fg:x="5168" fg:w="3"/><text x="26.0874%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (27 samples, 0.13%)</title><rect x="25.8524%" y="197" width="0.1350%" height="15" fill="rgb(234,103,6)" fg:x="5171" fg:w="27"/><text x="26.1024%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (4 samples, 0.02%)</title><rect x="25.9674%" y="181" width="0.0200%" height="15" fill="rgb(227,97,0)" fg:x="5194" fg:w="4"/><text x="26.2174%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cb_prefix&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (169 samples, 0.84%)</title><rect x="25.2425%" y="213" width="0.8449%" height="15" fill="rgb(234,150,53)" fg:x="5049" fg:w="169"/><text x="25.4925%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (20 samples, 0.10%)</title><rect x="25.9874%" y="197" width="0.1000%" height="15" fill="rgb(228,201,54)" fg:x="5198" fg:w="20"/><text x="26.2374%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (9 samples, 0.04%)</title><rect x="26.3924%" y="165" width="0.0450%" height="15" fill="rgb(222,22,37)" fg:x="5279" fg:w="9"/><text x="26.6424%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (13 samples, 0.06%)</title><rect x="26.3824%" y="181" width="0.0650%" height="15" fill="rgb(237,53,32)" fg:x="5277" fg:w="13"/><text x="26.6324%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (26 samples, 0.13%)</title><rect x="26.4924%" y="165" width="0.1300%" height="15" fill="rgb(233,25,53)" fg:x="5299" fg:w="26"/><text x="26.7424%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (8 samples, 0.04%)</title><rect x="26.5823%" y="149" width="0.0400%" height="15" fill="rgb(210,40,34)" fg:x="5317" fg:w="8"/><text x="26.8323%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (43 samples, 0.21%)</title><rect x="26.4474%" y="181" width="0.2150%" height="15" fill="rgb(241,220,44)" fg:x="5290" fg:w="43"/><text x="26.6974%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (8 samples, 0.04%)</title><rect x="26.6223%" y="165" width="0.0400%" height="15" fill="rgb(235,28,35)" fg:x="5325" fg:w="8"/><text x="26.8723%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (37 samples, 0.18%)</title><rect x="26.6873%" y="149" width="0.1850%" height="15" fill="rgb(210,56,17)" fg:x="5338" fg:w="37"/><text x="26.9373%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (18 samples, 0.09%)</title><rect x="26.7823%" y="133" width="0.0900%" height="15" fill="rgb(224,130,29)" fg:x="5357" fg:w="18"/><text x="27.0323%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (138 samples, 0.69%)</title><rect x="26.2824%" y="197" width="0.6899%" height="15" fill="rgb(235,212,8)" fg:x="5257" fg:w="138"/><text x="26.5324%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (62 samples, 0.31%)</title><rect x="26.6623%" y="181" width="0.3100%" height="15" fill="rgb(223,33,50)" fg:x="5333" fg:w="62"/><text x="26.9123%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (62 samples, 0.31%)</title><rect x="26.6623%" y="165" width="0.3100%" height="15" fill="rgb(219,149,13)" fg:x="5333" fg:w="62"/><text x="26.9123%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (20 samples, 0.10%)</title><rect x="26.8723%" y="149" width="0.1000%" height="15" fill="rgb(250,156,29)" fg:x="5375" fg:w="20"/><text x="27.1223%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (10 samples, 0.05%)</title><rect x="28.0272%" y="149" width="0.0500%" height="15" fill="rgb(216,193,19)" fg:x="5606" fg:w="10"/><text x="28.2772%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (101 samples, 0.50%)</title><rect x="27.7622%" y="165" width="0.5049%" height="15" fill="rgb(216,135,14)" fg:x="5553" fg:w="101"/><text x="28.0122%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (38 samples, 0.19%)</title><rect x="28.0772%" y="149" width="0.1900%" height="15" fill="rgb(241,47,5)" fg:x="5616" fg:w="38"/><text x="28.3272%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (221 samples, 1.10%)</title><rect x="27.6172%" y="181" width="1.1049%" height="15" fill="rgb(233,42,35)" fg:x="5524" fg:w="221"/><text x="27.8672%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (91 samples, 0.45%)</title><rect x="28.2672%" y="165" width="0.4550%" height="15" fill="rgb(231,13,6)" fg:x="5654" fg:w="91"/><text x="28.5172%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (10 samples, 0.05%)</title><rect x="28.9371%" y="165" width="0.0500%" height="15" fill="rgb(207,181,40)" fg:x="5788" fg:w="10"/><text x="29.1871%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (12 samples, 0.06%)</title><rect x="29.1471%" y="149" width="0.0600%" height="15" fill="rgb(254,173,49)" fg:x="5830" fg:w="12"/><text x="29.3971%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (70 samples, 0.35%)</title><rect x="28.9871%" y="165" width="0.3500%" height="15" fill="rgb(221,1,38)" fg:x="5798" fg:w="70"/><text x="29.2371%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (26 samples, 0.13%)</title><rect x="29.2071%" y="149" width="0.1300%" height="15" fill="rgb(206,124,46)" fg:x="5842" fg:w="26"/><text x="29.4571%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctrl_jr (246 samples, 1.23%)</title><rect x="28.7221%" y="181" width="1.2299%" height="15" fill="rgb(249,21,11)" fg:x="5745" fg:w="246"/><text x="28.9721%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (123 samples, 0.61%)</title><rect x="29.3371%" y="165" width="0.6149%" height="15" fill="rgb(222,201,40)" fg:x="5868" fg:w="123"/><text x="29.5871%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (787 samples, 3.93%)</title><rect x="26.0924%" y="213" width="3.9346%" height="15" fill="rgb(235,61,29)" fg:x="5219" fg:w="787"/><text x="26.3424%" y="223.50">my_b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jr_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (611 samples, 3.05%)</title><rect x="26.9723%" y="197" width="3.0547%" height="15" fill="rgb(219,207,3)" fg:x="5395" fg:w="611"/><text x="27.2223%" y="207.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (15 samples, 0.07%)</title><rect x="29.9520%" y="181" width="0.0750%" height="15" fill="rgb(222,56,46)" fg:x="5991" fg:w="15"/><text x="30.2020%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (3 samples, 0.01%)</title><rect x="30.0120%" y="165" width="0.0150%" height="15" fill="rgb(239,76,54)" fg:x="6003" fg:w="3"/><text x="30.2620%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (23 samples, 0.11%)</title><rect x="30.2570%" y="181" width="0.1150%" height="15" fill="rgb(231,124,27)" fg:x="6052" fg:w="23"/><text x="30.5070%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::alu_sub (61 samples, 0.30%)</title><rect x="30.2020%" y="197" width="0.3050%" height="15" fill="rgb(249,195,6)" fg:x="6041" fg:w="61"/><text x="30.4520%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (27 samples, 0.13%)</title><rect x="30.3720%" y="181" width="0.1350%" height="15" fill="rgb(237,174,47)" fg:x="6075" fg:w="27"/><text x="30.6220%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (20 samples, 0.10%)</title><rect x="30.5419%" y="181" width="0.1000%" height="15" fill="rgb(206,201,31)" fg:x="6109" fg:w="20"/><text x="30.7919%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (4 samples, 0.02%)</title><rect x="30.6219%" y="165" width="0.0200%" height="15" fill="rgb(231,57,52)" fg:x="6125" fg:w="4"/><text x="30.8719%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (11 samples, 0.05%)</title><rect x="30.6419%" y="181" width="0.0550%" height="15" fill="rgb(248,177,22)" fg:x="6129" fg:w="11"/><text x="30.8919%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (48 samples, 0.24%)</title><rect x="30.5069%" y="197" width="0.2400%" height="15" fill="rgb(215,211,37)" fg:x="6102" fg:w="48"/><text x="30.7569%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (10 samples, 0.05%)</title><rect x="30.6969%" y="181" width="0.0500%" height="15" fill="rgb(241,128,51)" fg:x="6140" fg:w="10"/><text x="30.9469%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (10 samples, 0.05%)</title><rect x="30.6969%" y="165" width="0.0500%" height="15" fill="rgb(227,165,31)" fg:x="6140" fg:w="10"/><text x="30.9469%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cp&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8&gt; (146 samples, 0.73%)</title><rect x="30.0270%" y="213" width="0.7299%" height="15" fill="rgb(228,167,24)" fg:x="6006" fg:w="146"/><text x="30.2770%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::cpl (4 samples, 0.02%)</title><rect x="30.7569%" y="213" width="0.0200%" height="15" fill="rgb(228,143,12)" fg:x="6152" fg:w="4"/><text x="31.0069%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (4 samples, 0.02%)</title><rect x="30.7569%" y="197" width="0.0200%" height="15" fill="rgb(249,149,8)" fg:x="6152" fg:w="4"/><text x="31.0069%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::dec&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(enum2$ (3 samples, 0.01%)</title><rect x="30.7769%" y="213" width="0.0150%" height="15" fill="rgb(243,35,44)" fg:x="6156" fg:w="3"/><text x="31.0269%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (3 samples, 0.01%)</title><rect x="30.8069%" y="181" width="0.0150%" height="15" fill="rgb(246,89,9)" fg:x="6162" fg:w="3"/><text x="31.0569%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (15 samples, 0.07%)</title><rect x="30.8219%" y="181" width="0.0750%" height="15" fill="rgb(233,213,13)" fg:x="6165" fg:w="15"/><text x="31.0719%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (23 samples, 0.11%)</title><rect x="30.8019%" y="197" width="0.1150%" height="15" fill="rgb(233,141,41)" fg:x="6161" fg:w="23"/><text x="31.0519%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (4 samples, 0.02%)</title><rect x="30.8969%" y="181" width="0.0200%" height="15" fill="rgb(239,167,4)" fg:x="6180" fg:w="4"/><text x="31.1469%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (4 samples, 0.02%)</title><rect x="30.8969%" y="165" width="0.0200%" height="15" fill="rgb(209,217,16)" fg:x="6180" fg:w="4"/><text x="31.1469%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (6 samples, 0.03%)</title><rect x="30.9169%" y="197" width="0.0300%" height="15" fill="rgb(219,88,35)" fg:x="6184" fg:w="6"/><text x="31.1669%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::dec&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (32 samples, 0.16%)</title><rect x="30.7919%" y="213" width="0.1600%" height="15" fill="rgb(220,193,23)" fg:x="6159" fg:w="32"/><text x="31.0419%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_add (3 samples, 0.01%)</title><rect x="31.0269%" y="197" width="0.0150%" height="15" fill="rgb(230,90,52)" fg:x="6206" fg:w="3"/><text x="31.2769%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.01%)</title><rect x="31.0969%" y="165" width="0.0150%" height="15" fill="rgb(252,106,19)" fg:x="6220" fg:w="3"/><text x="31.3469%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (11 samples, 0.05%)</title><rect x="31.0669%" y="181" width="0.0550%" height="15" fill="rgb(206,74,20)" fg:x="6214" fg:w="11"/><text x="31.3169%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (11 samples, 0.05%)</title><rect x="31.1219%" y="181" width="0.0550%" height="15" fill="rgb(230,138,44)" fg:x="6225" fg:w="11"/><text x="31.3719%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (28 samples, 0.14%)</title><rect x="31.0419%" y="197" width="0.1400%" height="15" fill="rgb(235,182,43)" fg:x="6209" fg:w="28"/><text x="31.2919%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::inc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (51 samples, 0.25%)</title><rect x="30.9569%" y="213" width="0.2550%" height="15" fill="rgb(242,16,51)" fg:x="6192" fg:w="51"/><text x="31.2069%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$1::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (6 samples, 0.03%)</title><rect x="31.1819%" y="197" width="0.0300%" height="15" fill="rgb(248,9,4)" fg:x="6237" fg:w="6"/><text x="31.4319%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jp (10 samples, 0.05%)</title><rect x="31.2119%" y="213" width="0.0500%" height="15" fill="rgb(210,31,22)" fg:x="6243" fg:w="10"/><text x="31.4619%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::jr&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (6 samples, 0.03%)</title><rect x="31.2619%" y="213" width="0.0300%" height="15" fill="rgb(239,54,39)" fg:x="6253" fg:w="6"/><text x="31.5119%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctrl_jr (4 samples, 0.02%)</title><rect x="31.2719%" y="197" width="0.0200%" height="15" fill="rgb(230,99,41)" fg:x="6255" fg:w="4"/><text x="31.5219%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (6 samples, 0.03%)</title><rect x="31.3569%" y="181" width="0.0300%" height="15" fill="rgb(253,106,12)" fg:x="6272" fg:w="6"/><text x="31.6069%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (9 samples, 0.04%)</title><rect x="31.3469%" y="197" width="0.0450%" height="15" fill="rgb(213,46,41)" fg:x="6270" fg:w="9"/><text x="31.5969%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (4 samples, 0.02%)</title><rect x="31.4169%" y="181" width="0.0200%" height="15" fill="rgb(215,133,35)" fg:x="6284" fg:w="4"/><text x="31.6669%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (13 samples, 0.06%)</title><rect x="31.3919%" y="197" width="0.0650%" height="15" fill="rgb(213,28,5)" fg:x="6279" fg:w="13"/><text x="31.6419%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (4 samples, 0.02%)</title><rect x="31.4369%" y="181" width="0.0200%" height="15" fill="rgb(215,77,49)" fg:x="6288" fg:w="4"/><text x="31.6869%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (9 samples, 0.04%)</title><rect x="31.4619%" y="149" width="0.0450%" height="15" fill="rgb(248,100,22)" fg:x="6293" fg:w="9"/><text x="31.7119%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate16,gb_core::cpu::registers::Reg16&gt; (44 samples, 0.22%)</title><rect x="31.2919%" y="213" width="0.2200%" height="15" fill="rgb(208,67,9)" fg:x="6259" fg:w="44"/><text x="31.5419%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$6::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (11 samples, 0.05%)</title><rect x="31.4569%" y="197" width="0.0550%" height="15" fill="rgb(219,133,21)" fg:x="6292" fg:w="11"/><text x="31.7069%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (11 samples, 0.05%)</title><rect x="31.4569%" y="181" width="0.0550%" height="15" fill="rgb(246,46,29)" fg:x="6292" fg:w="11"/><text x="31.7069%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (11 samples, 0.05%)</title><rect x="31.4569%" y="165" width="0.0550%" height="15" fill="rgb(246,185,52)" fg:x="6292" fg:w="11"/><text x="31.7069%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (21 samples, 0.10%)</title><rect x="32.7267%" y="165" width="0.1050%" height="15" fill="rgb(252,136,11)" fg:x="6546" fg:w="21"/><text x="32.9767%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (142 samples, 0.71%)</title><rect x="32.3068%" y="181" width="0.7099%" height="15" fill="rgb(219,138,53)" fg:x="6462" fg:w="142"/><text x="32.5568%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (37 samples, 0.18%)</title><rect x="32.8317%" y="165" width="0.1850%" height="15" fill="rgb(211,51,23)" fg:x="6567" fg:w="37"/><text x="33.0817%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (219 samples, 1.09%)</title><rect x="33.0167%" y="181" width="1.0949%" height="15" fill="rgb(247,221,28)" fg:x="6604" fg:w="219"/><text x="33.2667%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (423 samples, 2.11%)</title><rect x="32.1668%" y="197" width="2.1148%" height="15" fill="rgb(251,222,45)" fg:x="6434" fg:w="423"/><text x="32.4168%" y="207.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (34 samples, 0.17%)</title><rect x="34.1116%" y="181" width="0.1700%" height="15" fill="rgb(217,162,53)" fg:x="6823" fg:w="34"/><text x="34.3616%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (34 samples, 0.17%)</title><rect x="34.1116%" y="165" width="0.1700%" height="15" fill="rgb(229,93,14)" fg:x="6823" fg:w="34"/><text x="34.3616%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.01%)</title><rect x="35.2565%" y="117" width="0.0150%" height="15" fill="rgb(209,67,49)" fg:x="7052" fg:w="3"/><text x="35.5065%" y="127.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (32 samples, 0.16%)</title><rect x="35.1415%" y="133" width="0.1600%" height="15" fill="rgb(213,87,29)" fg:x="7029" fg:w="32"/><text x="35.3915%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (6 samples, 0.03%)</title><rect x="35.2715%" y="117" width="0.0300%" height="15" fill="rgb(205,151,52)" fg:x="7055" fg:w="6"/><text x="35.5215%" y="127.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (55 samples, 0.27%)</title><rect x="35.1365%" y="165" width="0.2750%" height="15" fill="rgb(253,215,39)" fg:x="7028" fg:w="55"/><text x="35.3865%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (55 samples, 0.27%)</title><rect x="35.1365%" y="149" width="0.2750%" height="15" fill="rgb(221,220,41)" fg:x="7028" fg:w="55"/><text x="35.3865%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (22 samples, 0.11%)</title><rect x="35.3015%" y="133" width="0.1100%" height="15" fill="rgb(218,133,21)" fg:x="7061" fg:w="22"/><text x="35.5515%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (10 samples, 0.05%)</title><rect x="35.4265%" y="149" width="0.0500%" height="15" fill="rgb(221,193,43)" fg:x="7086" fg:w="10"/><text x="35.6765%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.01%)</title><rect x="35.5914%" y="133" width="0.0150%" height="15" fill="rgb(240,128,52)" fg:x="7119" fg:w="3"/><text x="35.8414%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (36 samples, 0.18%)</title><rect x="35.4765%" y="149" width="0.1800%" height="15" fill="rgb(253,114,12)" fg:x="7096" fg:w="36"/><text x="35.7265%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (10 samples, 0.05%)</title><rect x="35.6064%" y="133" width="0.0500%" height="15" fill="rgb(215,223,47)" fg:x="7122" fg:w="10"/><text x="35.8564%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (121 samples, 0.60%)</title><rect x="35.1365%" y="181" width="0.6049%" height="15" fill="rgb(248,225,23)" fg:x="7028" fg:w="121"/><text x="35.3865%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (66 samples, 0.33%)</title><rect x="35.4115%" y="165" width="0.3300%" height="15" fill="rgb(250,108,0)" fg:x="7083" fg:w="66"/><text x="35.6615%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (17 samples, 0.08%)</title><rect x="35.6564%" y="149" width="0.0850%" height="15" fill="rgb(228,208,7)" fg:x="7132" fg:w="17"/><text x="35.9064%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (8 samples, 0.04%)</title><rect x="35.7414%" y="149" width="0.0400%" height="15" fill="rgb(244,45,10)" fg:x="7149" fg:w="8"/><text x="35.9914%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (14 samples, 0.07%)</title><rect x="35.7414%" y="181" width="0.0700%" height="15" fill="rgb(207,125,25)" fg:x="7149" fg:w="14"/><text x="35.9914%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (14 samples, 0.07%)</title><rect x="35.7414%" y="165" width="0.0700%" height="15" fill="rgb(210,195,18)" fg:x="7149" fg:w="14"/><text x="35.9914%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::increment_pc (6 samples, 0.03%)</title><rect x="35.7814%" y="149" width="0.0300%" height="15" fill="rgb(249,80,12)" fg:x="7157" fg:w="6"/><text x="36.0314%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (6 samples, 0.03%)</title><rect x="35.7814%" y="133" width="0.0300%" height="15" fill="rgb(221,65,9)" fg:x="7157" fg:w="6"/><text x="36.0314%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (10 samples, 0.05%)</title><rect x="36.2864%" y="165" width="0.0500%" height="15" fill="rgb(235,49,36)" fg:x="7258" fg:w="10"/><text x="36.5364%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (139 samples, 0.69%)</title><rect x="35.8214%" y="181" width="0.6949%" height="15" fill="rgb(225,32,20)" fg:x="7165" fg:w="139"/><text x="36.0714%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (36 samples, 0.18%)</title><rect x="36.3364%" y="165" width="0.1800%" height="15" fill="rgb(215,141,46)" fg:x="7268" fg:w="36"/><text x="36.5864%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$10::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (592 samples, 2.96%)</title><rect x="34.2816%" y="197" width="2.9597%" height="15" fill="rgb(250,160,47)" fg:x="6857" fg:w="592"/><text x="34.5316%" y="207.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (145 samples, 0.72%)</title><rect x="36.5163%" y="181" width="0.7249%" height="15" fill="rgb(216,222,40)" fg:x="7304" fg:w="145"/><text x="36.7663%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_a (20 samples, 0.10%)</title><rect x="37.6862%" y="181" width="0.1000%" height="15" fill="rgb(234,217,39)" fg:x="7538" fg:w="20"/><text x="37.9362%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (487 samples, 2.43%)</title><rect x="37.7862%" y="181" width="2.4348%" height="15" fill="rgb(207,178,40)" fg:x="7558" fg:w="487"/><text x="38.0362%" y="191.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,enum2$&lt;gb_core::cpu::address::Addr&gt;,gb_core::cpu::registers::Reg8&gt;(gb_core::cpu::registers::Reg8, enum2$ (1,744 samples, 8.72%)</title><rect x="31.5168%" y="213" width="8.7191%" height="15" fill="rgb(221,136,13)" fg:x="6304" fg:w="1744"/><text x="31.7668%" y="223.50">my_benchmark..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (599 samples, 2.99%)</title><rect x="37.2413%" y="197" width="2.9947%" height="15" fill="rgb(249,199,10)" fg:x="7449" fg:w="599"/><text x="37.4913%" y="207.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::timer::impl$1::get_byte (3 samples, 0.01%)</title><rect x="40.2210%" y="181" width="0.0150%" height="15" fill="rgb(249,222,13)" fg:x="8045" fg:w="3"/><text x="40.4710%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::timer::Timer::rb (3 samples, 0.01%)</title><rect x="40.2210%" y="165" width="0.0150%" height="15" fill="rgb(244,185,38)" fg:x="8045" fg:w="3"/><text x="40.4710%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (21 samples, 0.10%)</title><rect x="40.4810%" y="181" width="0.1050%" height="15" fill="rgb(236,202,9)" fg:x="8097" fg:w="21"/><text x="40.7310%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (9 samples, 0.04%)</title><rect x="40.5409%" y="165" width="0.0450%" height="15" fill="rgb(250,229,37)" fg:x="8109" fg:w="9"/><text x="40.7909%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (20 samples, 0.10%)</title><rect x="40.5859%" y="181" width="0.1000%" height="15" fill="rgb(206,174,23)" fg:x="8118" fg:w="20"/><text x="40.8359%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (57 samples, 0.28%)</title><rect x="40.4160%" y="197" width="0.2850%" height="15" fill="rgb(211,33,43)" fg:x="8084" fg:w="57"/><text x="40.6660%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (3 samples, 0.01%)</title><rect x="40.6859%" y="181" width="0.0150%" height="15" fill="rgb(245,58,50)" fg:x="8138" fg:w="3"/><text x="40.9359%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (3 samples, 0.01%)</title><rect x="40.6859%" y="165" width="0.0150%" height="15" fill="rgb(244,68,36)" fg:x="8138" fg:w="3"/><text x="40.9359%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.01%)</title><rect x="40.7959%" y="165" width="0.0150%" height="15" fill="rgb(232,229,15)" fg:x="8160" fg:w="3"/><text x="41.0459%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (18 samples, 0.09%)</title><rect x="40.7459%" y="181" width="0.0900%" height="15" fill="rgb(254,30,23)" fg:x="8150" fg:w="18"/><text x="40.9959%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (5 samples, 0.02%)</title><rect x="40.8109%" y="165" width="0.0250%" height="15" fill="rgb(235,160,14)" fg:x="8163" fg:w="5"/><text x="41.0609%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::address::Immediate8,gb_core::cpu::registers::Reg8&gt; (140 samples, 0.70%)</title><rect x="40.2360%" y="213" width="0.6999%" height="15" fill="rgb(212,155,44)" fg:x="8048" fg:w="140"/><text x="40.4860%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (47 samples, 0.23%)</title><rect x="40.7009%" y="197" width="0.2350%" height="15" fill="rgb(226,2,50)" fg:x="8141" fg:w="47"/><text x="40.9509%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (20 samples, 0.10%)</title><rect x="40.8359%" y="181" width="0.1000%" height="15" fill="rgb(234,177,6)" fg:x="8168" fg:w="20"/><text x="41.0859%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (22 samples, 0.11%)</title><rect x="42.4408%" y="165" width="0.1100%" height="15" fill="rgb(217,24,9)" fg:x="8489" fg:w="22"/><text x="42.6908%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (151 samples, 0.75%)</title><rect x="42.0658%" y="181" width="0.7549%" height="15" fill="rgb(220,13,46)" fg:x="8414" fg:w="151"/><text x="42.3158%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (54 samples, 0.27%)</title><rect x="42.5507%" y="165" width="0.2700%" height="15" fill="rgb(239,221,27)" fg:x="8511" fg:w="54"/><text x="42.8007%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (151 samples, 0.75%)</title><rect x="42.8257%" y="181" width="0.7549%" height="15" fill="rgb(222,198,25)" fg:x="8566" fg:w="151"/><text x="43.0757%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (380 samples, 1.90%)</title><rect x="41.7808%" y="197" width="1.8998%" height="15" fill="rgb(211,99,13)" fg:x="8357" fg:w="380"/><text x="42.0308%" y="207.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (20 samples, 0.10%)</title><rect x="43.5806%" y="181" width="0.1000%" height="15" fill="rgb(232,111,31)" fg:x="8717" fg:w="20"/><text x="43.8306%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (20 samples, 0.10%)</title><rect x="43.5806%" y="165" width="0.1000%" height="15" fill="rgb(245,82,37)" fg:x="8717" fg:w="20"/><text x="43.8306%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (5 samples, 0.02%)</title><rect x="44.3356%" y="149" width="0.0250%" height="15" fill="rgb(227,149,46)" fg:x="8868" fg:w="5"/><text x="44.5856%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (11 samples, 0.05%)</title><rect x="44.5155%" y="133" width="0.0550%" height="15" fill="rgb(218,36,50)" fg:x="8904" fg:w="11"/><text x="44.7655%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (58 samples, 0.29%)</title><rect x="44.3706%" y="149" width="0.2900%" height="15" fill="rgb(226,80,48)" fg:x="8875" fg:w="58"/><text x="44.6206%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (18 samples, 0.09%)</title><rect x="44.5705%" y="133" width="0.0900%" height="15" fill="rgb(238,224,15)" fg:x="8915" fg:w="18"/><text x="44.8205%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_word (119 samples, 0.59%)</title><rect x="44.2806%" y="181" width="0.5949%" height="15" fill="rgb(241,136,10)" fg:x="8857" fg:w="119"/><text x="44.5306%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (118 samples, 0.59%)</title><rect x="44.2856%" y="165" width="0.5899%" height="15" fill="rgb(208,32,45)" fg:x="8858" fg:w="118"/><text x="44.5356%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (43 samples, 0.21%)</title><rect x="44.6605%" y="149" width="0.2150%" height="15" fill="rgb(207,135,9)" fg:x="8933" fg:w="43"/><text x="44.9105%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_pc (20 samples, 0.10%)</title><rect x="44.8955%" y="149" width="0.1000%" height="15" fill="rgb(206,86,44)" fg:x="8980" fg:w="20"/><text x="45.1455%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (19 samples, 0.09%)</title><rect x="45.4755%" y="133" width="0.0950%" height="15" fill="rgb(245,177,15)" fg:x="9096" fg:w="19"/><text x="45.7255%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (145 samples, 0.72%)</title><rect x="45.0055%" y="149" width="0.7249%" height="15" fill="rgb(206,64,50)" fg:x="9002" fg:w="145"/><text x="45.2555%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (32 samples, 0.16%)</title><rect x="45.5704%" y="133" width="0.1600%" height="15" fill="rgb(234,36,40)" fg:x="9115" fg:w="32"/><text x="45.8204%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$5::read_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (280 samples, 1.40%)</title><rect x="44.8755%" y="181" width="1.3999%" height="15" fill="rgb(213,64,8)" fg:x="8976" fg:w="280"/><text x="45.1255%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::read_next_byte (280 samples, 1.40%)</title><rect x="44.8755%" y="165" width="1.3999%" height="15" fill="rgb(210,75,36)" fg:x="8976" fg:w="280"/><text x="45.1255%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (109 samples, 0.54%)</title><rect x="45.7304%" y="149" width="0.5449%" height="15" fill="rgb(229,88,21)" fg:x="9147" fg:w="109"/><text x="45.9804%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$9::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;*, enum2$ (519 samples, 2.59%)</title><rect x="43.6906%" y="197" width="2.5947%" height="15" fill="rgb(252,204,47)" fg:x="8739" fg:w="519"/><text x="43.9406%" y="207.50">my..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;::transfer_dma&lt;my_benchmark::DummyScreen&gt; (51 samples, 0.25%)</title><rect x="46.2854%" y="197" width="0.2550%" height="15" fill="rgb(208,77,27)" fg:x="9258" fg:w="51"/><text x="46.5354%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::write_oam (49 samples, 0.24%)</title><rect x="46.2954%" y="181" width="0.2450%" height="15" fill="rgb(221,76,26)" fg:x="9260" fg:w="49"/><text x="46.5454%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (35 samples, 0.17%)</title><rect x="46.3654%" y="165" width="0.1750%" height="15" fill="rgb(225,139,18)" fg:x="9274" fg:w="35"/><text x="46.6154%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$11::write_ram&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (5 samples, 0.02%)</title><rect x="46.5403%" y="197" width="0.0250%" height="15" fill="rgb(230,137,11)" fg:x="9309" fg:w="5"/><text x="46.7903%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (436 samples, 2.18%)</title><rect x="46.5653%" y="197" width="2.1798%" height="15" fill="rgb(212,28,1)" fg:x="9314" fg:w="436"/><text x="46.8153%" y="207.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8,enum2$&lt;gb_core::cpu::address::Addr&gt; &gt;(enum2$ (1,565 samples, 7.82%)</title><rect x="40.9359%" y="213" width="7.8242%" height="15" fill="rgb(248,164,17)" fg:x="8188" fg:w="1565"/><text x="41.1859%" y="223.50">my_benchmar..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::wb (3 samples, 0.01%)</title><rect x="48.7451%" y="197" width="0.0150%" height="15" fill="rgb(222,171,42)" fg:x="9750" fg:w="3"/><text x="48.9951%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (10 samples, 0.05%)</title><rect x="49.9000%" y="165" width="0.0500%" height="15" fill="rgb(243,84,45)" fg:x="9981" fg:w="10"/><text x="50.1500%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (117 samples, 0.58%)</title><rect x="49.4651%" y="181" width="0.5849%" height="15" fill="rgb(252,49,23)" fg:x="9894" fg:w="117"/><text x="49.7151%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (20 samples, 0.10%)</title><rect x="49.9500%" y="165" width="0.1000%" height="15" fill="rgb(215,19,7)" fg:x="9991" fg:w="20"/><text x="50.2000%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (120 samples, 0.60%)</title><rect x="50.0500%" y="181" width="0.5999%" height="15" fill="rgb(238,81,41)" fg:x="10011" fg:w="120"/><text x="50.3000%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (278 samples, 1.39%)</title><rect x="49.2651%" y="197" width="1.3899%" height="15" fill="rgb(210,199,37)" fg:x="9854" fg:w="278"/><text x="49.5151%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_a (9 samples, 0.04%)</title><rect x="50.9449%" y="181" width="0.0450%" height="15" fill="rgb(244,192,49)" fg:x="10190" fg:w="9"/><text x="51.1949%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_d (4 samples, 0.02%)</title><rect x="50.9899%" y="181" width="0.0200%" height="15" fill="rgb(226,211,11)" fg:x="10199" fg:w="4"/><text x="51.2399%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::load_8&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8,gb_core::cpu::registers::Reg8&gt; (451 samples, 2.25%)</title><rect x="48.7601%" y="213" width="2.2548%" height="15" fill="rgb(236,162,54)" fg:x="9753" fg:w="451"/><text x="49.0101%" y="223.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$2::write_8(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (72 samples, 0.36%)</title><rect x="50.6549%" y="197" width="0.3600%" height="15" fill="rgb(220,229,9)" fg:x="10132" fg:w="72"/><text x="50.9049%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (5 samples, 0.02%)</title><rect x="51.2999%" y="165" width="0.0250%" height="15" fill="rgb(250,87,22)" fg:x="10261" fg:w="5"/><text x="51.5499%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (20 samples, 0.10%)</title><rect x="51.2499%" y="181" width="0.1000%" height="15" fill="rgb(239,43,17)" fg:x="10251" fg:w="20"/><text x="51.4999%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (5 samples, 0.02%)</title><rect x="51.3249%" y="165" width="0.0250%" height="15" fill="rgb(231,177,25)" fg:x="10266" fg:w="5"/><text x="51.5749%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (33 samples, 0.16%)</title><rect x="51.3499%" y="181" width="0.1650%" height="15" fill="rgb(219,179,1)" fg:x="10271" fg:w="33"/><text x="51.5999%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (62 samples, 0.31%)</title><rect x="51.2099%" y="197" width="0.3100%" height="15" fill="rgb(238,219,53)" fg:x="10243" fg:w="62"/><text x="51.4599%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (7 samples, 0.03%)</title><rect x="51.5448%" y="181" width="0.0350%" height="15" fill="rgb(232,167,36)" fg:x="10310" fg:w="7"/><text x="51.7948%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16 (95 samples, 0.47%)</title><rect x="51.5198%" y="197" width="0.4750%" height="15" fill="rgb(244,19,51)" fg:x="10305" fg:w="95"/><text x="51.7698%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (83 samples, 0.41%)</title><rect x="51.5798%" y="181" width="0.4150%" height="15" fill="rgb(224,6,22)" fg:x="10317" fg:w="83"/><text x="51.8298%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::set_af (6 samples, 0.03%)</title><rect x="52.0748%" y="181" width="0.0300%" height="15" fill="rgb(224,145,5)" fg:x="10416" fg:w="6"/><text x="52.3248%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::flags::Flags::set_value (5 samples, 0.02%)</title><rect x="52.0798%" y="165" width="0.0250%" height="15" fill="rgb(234,130,49)" fg:x="10417" fg:w="5"/><text x="52.3298%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (219 samples, 1.09%)</title><rect x="51.0249%" y="213" width="1.0949%" height="15" fill="rgb(254,6,2)" fg:x="10206" fg:w="219"/><text x="51.2749%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$4::write_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (25 samples, 0.12%)</title><rect x="51.9948%" y="197" width="0.1250%" height="15" fill="rgb(208,96,46)" fg:x="10400" fg:w="25"/><text x="52.2448%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (4 samples, 0.02%)</title><rect x="52.4098%" y="165" width="0.0200%" height="15" fill="rgb(239,3,39)" fg:x="10483" fg:w="4"/><text x="52.6598%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (16 samples, 0.08%)</title><rect x="52.3548%" y="181" width="0.0800%" height="15" fill="rgb(233,210,1)" fg:x="10472" fg:w="16"/><text x="52.6048%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (28 samples, 0.14%)</title><rect x="52.4348%" y="181" width="0.1400%" height="15" fill="rgb(244,137,37)" fg:x="10488" fg:w="28"/><text x="52.6848%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (59 samples, 0.29%)</title><rect x="52.3098%" y="197" width="0.2950%" height="15" fill="rgb(240,136,2)" fg:x="10463" fg:w="59"/><text x="52.5598%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (6 samples, 0.03%)</title><rect x="52.5747%" y="181" width="0.0300%" height="15" fill="rgb(239,18,37)" fg:x="10516" fg:w="6"/><text x="52.8247%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (6 samples, 0.03%)</title><rect x="52.5747%" y="165" width="0.0300%" height="15" fill="rgb(218,185,22)" fg:x="10516" fg:w="6"/><text x="52.8247%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_sub (4 samples, 0.02%)</title><rect x="52.6297%" y="181" width="0.0200%" height="15" fill="rgb(225,218,4)" fg:x="10527" fg:w="4"/><text x="52.8797%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push_u16 (47 samples, 0.23%)</title><rect x="52.6047%" y="197" width="0.2350%" height="15" fill="rgb(230,182,32)" fg:x="10522" fg:w="47"/><text x="52.8547%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (38 samples, 0.19%)</title><rect x="52.6497%" y="181" width="0.1900%" height="15" fill="rgb(242,56,43)" fg:x="10531" fg:w="38"/><text x="52.8997%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::registers::Registers::get_af (5 samples, 0.02%)</title><rect x="52.8597%" y="181" width="0.0250%" height="15" fill="rgb(233,99,24)" fg:x="10573" fg:w="5"/><text x="53.1097%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::flags::Flags::read_value (4 samples, 0.02%)</title><rect x="52.8647%" y="165" width="0.0200%" height="15" fill="rgb(234,209,42)" fg:x="10574" fg:w="4"/><text x="53.1147%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::impl$3::read_16(gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware (11 samples, 0.05%)</title><rect x="52.8397%" y="197" width="0.0550%" height="15" fill="rgb(227,7,12)" fg:x="10569" fg:w="11"/><text x="53.0897%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::push16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg16&gt; (178 samples, 0.89%)</title><rect x="52.1198%" y="213" width="0.8899%" height="15" fill="rgb(245,203,43)" fg:x="10425" fg:w="178"/><text x="52.3698%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::set_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (23 samples, 0.11%)</title><rect x="52.8947%" y="197" width="0.1150%" height="15" fill="rgb(238,205,33)" fg:x="10580" fg:w="23"/><text x="53.1447%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (6 samples, 0.03%)</title><rect x="53.3797%" y="165" width="0.0300%" height="15" fill="rgb(231,56,7)" fg:x="10677" fg:w="6"/><text x="53.6297%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (6 samples, 0.03%)</title><rect x="53.3797%" y="149" width="0.0300%" height="15" fill="rgb(244,186,29)" fg:x="10677" fg:w="6"/><text x="53.6297%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (6 samples, 0.03%)</title><rect x="53.4097%" y="165" width="0.0300%" height="15" fill="rgb(234,111,31)" fg:x="10683" fg:w="6"/><text x="53.6597%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret (216 samples, 1.08%)</title><rect x="53.0097%" y="213" width="1.0799%" height="15" fill="rgb(241,149,10)" fg:x="10603" fg:w="216"/><text x="53.2597%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (216 samples, 1.08%)</title><rect x="53.0097%" y="197" width="1.0799%" height="15" fill="rgb(249,206,44)" fg:x="10603" fg:w="216"/><text x="53.2597%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (188 samples, 0.94%)</title><rect x="53.1497%" y="181" width="0.9399%" height="15" fill="rgb(251,153,30)" fg:x="10631" fg:w="188"/><text x="53.3997%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (130 samples, 0.65%)</title><rect x="53.4397%" y="165" width="0.6499%" height="15" fill="rgb(239,152,38)" fg:x="10689" fg:w="130"/><text x="53.6897%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::check_cond (6 samples, 0.03%)</title><rect x="54.2846%" y="197" width="0.0300%" height="15" fill="rgb(249,139,47)" fg:x="10858" fg:w="6"/><text x="54.5346%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_le_bytes (10 samples, 0.05%)</title><rect x="54.3546%" y="165" width="0.0500%" height="15" fill="rgb(244,64,35)" fg:x="10872" fg:w="10"/><text x="54.6046%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::from_ne_bytes (10 samples, 0.05%)</title><rect x="54.3546%" y="149" width="0.0500%" height="15" fill="rgb(216,46,15)" fg:x="10872" fg:w="10"/><text x="54.6046%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$7::wrapping_add (6 samples, 0.03%)</title><rect x="54.4046%" y="165" width="0.0300%" height="15" fill="rgb(250,74,19)" fg:x="10882" fg:w="6"/><text x="54.6546%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (91 samples, 0.45%)</title><rect x="54.3146%" y="197" width="0.4550%" height="15" fill="rgb(249,42,33)" fg:x="10864" fg:w="91"/><text x="54.5646%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16 (89 samples, 0.44%)</title><rect x="54.3246%" y="181" width="0.4450%" height="15" fill="rgb(242,149,17)" fg:x="10866" fg:w="89"/><text x="54.5746%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (67 samples, 0.33%)</title><rect x="54.4346%" y="165" width="0.3350%" height="15" fill="rgb(244,29,21)" fg:x="10888" fg:w="67"/><text x="54.6846%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (16 samples, 0.08%)</title><rect x="54.7695%" y="197" width="0.0800%" height="15" fill="rgb(220,130,37)" fg:x="10955" fg:w="16"/><text x="55.0195%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ret_cc&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (171 samples, 0.85%)</title><rect x="54.0896%" y="213" width="0.8549%" height="15" fill="rgb(211,67,2)" fg:x="10819" fg:w="171"/><text x="54.3396%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (19 samples, 0.09%)</title><rect x="54.8495%" y="197" width="0.0950%" height="15" fill="rgb(235,68,52)" fg:x="10971" fg:w="19"/><text x="55.0995%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::reti&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (6 samples, 0.03%)</title><rect x="54.9445%" y="213" width="0.0300%" height="15" fill="rgb(246,142,3)" fg:x="10990" fg:w="6"/><text x="55.1945%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::ctr_return (6 samples, 0.03%)</title><rect x="54.9445%" y="197" width="0.0300%" height="15" fill="rgb(241,25,7)" fg:x="10990" fg:w="6"/><text x="55.1945%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::pop_u16 (4 samples, 0.02%)</title><rect x="54.9545%" y="181" width="0.0200%" height="15" fill="rgb(242,119,39)" fg:x="10992" fg:w="4"/><text x="55.2045%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (3 samples, 0.01%)</title><rect x="54.9595%" y="165" width="0.0150%" height="15" fill="rgb(241,98,45)" fg:x="10993" fg:w="3"/><text x="55.2095%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (3 samples, 0.01%)</title><rect x="55.2995%" y="165" width="0.0150%" height="15" fill="rgb(254,28,30)" fg:x="11061" fg:w="3"/><text x="55.5495%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (40 samples, 0.20%)</title><rect x="55.1645%" y="181" width="0.2000%" height="15" fill="rgb(241,142,54)" fg:x="11034" fg:w="40"/><text x="55.4145%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (10 samples, 0.05%)</title><rect x="55.3145%" y="165" width="0.0500%" height="15" fill="rgb(222,85,15)" fg:x="11064" fg:w="10"/><text x="55.5645%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (44 samples, 0.22%)</title><rect x="55.3645%" y="181" width="0.2200%" height="15" fill="rgb(210,85,47)" fg:x="11074" fg:w="44"/><text x="55.6145%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::rst (125 samples, 0.62%)</title><rect x="54.9745%" y="213" width="0.6249%" height="15" fill="rgb(224,206,25)" fg:x="10996" fg:w="125"/><text x="55.2245%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (121 samples, 0.60%)</title><rect x="54.9945%" y="197" width="0.6049%" height="15" fill="rgb(243,201,19)" fg:x="11000" fg:w="121"/><text x="55.2445%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::step(gb_core::hardware::Hardware (3 samples, 0.01%)</title><rect x="55.5844%" y="181" width="0.0150%" height="15" fill="rgb(236,59,4)" fg:x="11118" fg:w="3"/><text x="55.8344%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::step (3 samples, 0.01%)</title><rect x="55.5844%" y="165" width="0.0150%" height="15" fill="rgb(254,179,45)" fg:x="11118" fg:w="3"/><text x="55.8344%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::Mbc3Cartridge&lt;my_benchmark::ByteRomManager&gt;::compare (4 samples, 0.02%)</title><rect x="55.9044%" y="165" width="0.0200%" height="15" fill="rgb(226,14,10)" fg:x="11182" fg:w="4"/><text x="56.1544%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::cartridge::impl$12::get_byte&lt;my_benchmark::ByteRomManager&gt;(gb_core::hardware::cartridge::Mbc3Cartridge (38 samples, 0.19%)</title><rect x="55.7994%" y="181" width="0.1900%" height="15" fill="rgb(244,27,41)" fg:x="11161" fg:w="38"/><text x="56.0494%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$4::read_from_offset (13 samples, 0.06%)</title><rect x="55.9244%" y="165" width="0.0650%" height="15" fill="rgb(235,35,32)" fg:x="11186" fg:w="13"/><text x="56.1744%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::decode&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt; (8,853 samples, 44.26%)</title><rect x="11.9188%" y="229" width="44.2606%" height="15" fill="rgb(218,68,31)" fg:x="2384" fg:w="8853"/><text x="12.1688%" y="239.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::har..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::xor&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt;,gb_core::cpu::registers::Reg8&gt; (114 samples, 0.57%)</title><rect x="55.6094%" y="213" width="0.5699%" height="15" fill="rgb(207,120,37)" fg:x="11123" fg:w="114"/><text x="55.8594%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::handle_return (80 samples, 0.40%)</title><rect x="55.7794%" y="197" width="0.4000%" height="15" fill="rgb(227,98,0)" fg:x="11157" fg:w="80"/><text x="56.0294%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::impl$1::get_byte&lt;my_benchmark::DummyScreen&gt;(gb_core::hardware::Hardware (38 samples, 0.19%)</title><rect x="55.9894%" y="181" width="0.1900%" height="15" fill="rgb(207,7,3)" fg:x="11199" fg:w="38"/><text x="56.2394%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardware::Hardware&lt;my_benchmark::DummyScreen&gt; &gt;::step (9,244 samples, 46.22%)</title><rect x="9.9690%" y="245" width="46.2154%" height="15" fill="rgb(206,98,19)" fg:x="1994" fg:w="9244"/><text x="10.2190%" y="255.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::cpu::address::Cpu&lt;gb_core::hardwa..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::InputController::update_state (259 samples, 1.29%)</title><rect x="56.1844%" y="245" width="1.2949%" height="15" fill="rgb(217,5,26)" fg:x="11238" fg:w="259"/><text x="56.4344%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::input::impl$9::clone (193 samples, 0.96%)</title><rect x="56.5143%" y="229" width="0.9649%" height="15" fill="rgb(235,190,38)" fg:x="11304" fg:w="193"/><text x="56.7643%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_pixel (6 samples, 0.03%)</title><rect x="62.6887%" y="149" width="0.0300%" height="15" fill="rgb(247,86,24)" fg:x="12539" fg:w="6"/><text x="62.9387%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$1::set_pixel (6 samples, 0.03%)</title><rect x="62.6887%" y="133" width="0.0300%" height="15" fill="rgb(205,101,16)" fg:x="12539" fg:w="6"/><text x="62.9387%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (4 samples, 0.02%)</title><rect x="62.7187%" y="149" width="0.0200%" height="15" fill="rgb(246,168,33)" fg:x="12545" fg:w="4"/><text x="62.9687%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Palette::shade (30 samples, 0.15%)</title><rect x="62.7887%" y="133" width="0.1500%" height="15" fill="rgb(231,114,1)" fg:x="12559" fg:w="30"/><text x="63.0387%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_pixel (55 samples, 0.27%)</title><rect x="62.6687%" y="165" width="0.2750%" height="15" fill="rgb(207,184,53)" fg:x="12535" fg:w="55"/><text x="62.9187%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (41 samples, 0.20%)</title><rect x="62.7387%" y="149" width="0.2050%" height="15" fill="rgb(224,95,51)" fg:x="12549" fg:w="41"/><text x="62.9887%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptHandler::request (59 samples, 0.29%)</title><rect x="62.6687%" y="229" width="0.2950%" height="15" fill="rgb(212,188,45)" fg:x="12535" fg:w="59"/><text x="62.9187%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::InterruptLine::insert (59 samples, 0.29%)</title><rect x="62.6687%" y="213" width="0.2950%" height="15" fill="rgb(223,154,38)" fg:x="12535" fg:w="59"/><text x="62.9187%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::interrupt_handler::_::InternalBitFlags::insert (59 samples, 0.29%)</title><rect x="62.6687%" y="197" width="0.2950%" height="15" fill="rgb(251,22,52)" fg:x="12535" fg:w="59"/><text x="62.9187%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (59 samples, 0.29%)</title><rect x="62.6687%" y="181" width="0.2950%" height="15" fill="rgb(229,209,22)" fg:x="12535" fg:w="59"/><text x="62.9187%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_sprites (4 samples, 0.02%)</title><rect x="62.9437%" y="165" width="0.0200%" height="15" fill="rgb(234,138,34)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="149" width="0.0200%" height="15" fill="rgb(212,95,11)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$26::from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="133" width="0.0200%" height="15" fill="rgb(240,179,47)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$24::extend(arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;*, core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="117" width="0.0200%" height="15" fill="rgb(240,163,11)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="127.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;::extend_from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="101" width="0.0200%" height="15" fill="rgb(236,37,12)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="111.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="85" width="0.0200%" height="15" fill="rgb(232,164,16)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="95.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="69" width="0.0200%" height="15" fill="rgb(244,205,15)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="79.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="53" width="0.0200%" height="15" fill="rgb(223,117,47)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="63.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::find(core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;*, gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (4 samples, 0.02%)</title><rect x="62.9437%" y="37" width="0.0200%" height="15" fill="rgb(244,107,35)" fg:x="12590" fg:w="4"/><text x="63.1937%" y="47.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_add (9 samples, 0.04%)</title><rect x="63.2337%" y="213" width="0.0450%" height="15" fill="rgb(205,140,8)" fg:x="12648" fg:w="9"/><text x="63.4837%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_mul (8 samples, 0.04%)</title><rect x="64.9485%" y="197" width="0.0400%" height="15" fill="rgb(228,84,46)" fg:x="12991" fg:w="8"/><text x="65.1985%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Control::contains (3 samples, 0.01%)</title><rect x="64.9885%" y="197" width="0.0150%" height="15" fill="rgb(254,188,9)" fg:x="12999" fg:w="3"/><text x="65.2385%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (3 samples, 0.01%)</title><rect x="64.9885%" y="181" width="0.0150%" height="15" fill="rgb(206,112,54)" fg:x="12999" fg:w="3"/><text x="65.2385%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_pixel (691 samples, 3.45%)</title><rect x="65.0035%" y="197" width="3.4547%" height="15" fill="rgb(216,84,49)" fg:x="13002" fg:w="691"/><text x="65.2535%" y="207.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::impl$1::set_pixel (691 samples, 3.45%)</title><rect x="65.0035%" y="181" width="3.4547%" height="15" fill="rgb(214,194,35)" fg:x="13002" fg:w="691"/><text x="65.2535%" y="191.50">my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::tile_at (414 samples, 2.07%)</title><rect x="68.4582%" y="197" width="2.0698%" height="15" fill="rgb(249,28,3)" fg:x="13693" fg:w="414"/><text x="68.7082%" y="207.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Palette::shade (3,621 samples, 18.10%)</title><rect x="74.1576%" y="181" width="18.1032%" height="15" fill="rgb(222,56,52)" fg:x="14833" fg:w="3621"/><text x="74.4076%" y="191.50">my_benchmark-c9a97925f9d084b..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$29::bitand (96 samples, 0.48%)</title><rect x="92.2608%" y="165" width="0.4800%" height="15" fill="rgb(245,217,50)" fg:x="18454" fg:w="96"/><text x="92.5108%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_background_pixel (6,118 samples, 30.59%)</title><rect x="63.2787%" y="213" width="30.5869%" height="15" fill="rgb(213,201,24)" fg:x="12657" fg:w="6118"/><text x="63.5287%" y="223.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardwa..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Tile::shade_at (4,668 samples, 23.34%)</title><rect x="70.5279%" y="197" width="23.3377%" height="15" fill="rgb(248,116,28)" fg:x="14107" fg:w="4668"/><text x="70.7779%" y="207.50">my_benchmark-c9a97925f9d084bf.exe`gb_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::util::int::impl$0::bit (321 samples, 1.60%)</title><rect x="92.2608%" y="181" width="1.6048%" height="15" fill="rgb(219,72,43)" fg:x="18454" fg:w="321"/><text x="92.5108%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::bit::impl$779::shr (225 samples, 1.12%)</title><rect x="92.7407%" y="165" width="1.1249%" height="15" fill="rgb(209,138,14)" fg:x="18550" fg:w="225"/><text x="92.9907%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::enumerate::impl$1::next(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (264 samples, 1.32%)</title><rect x="94.0256%" y="133" width="1.3199%" height="15" fill="rgb(222,18,33)" fg:x="18807" fg:w="264"/><text x="94.2756%" y="143.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (264 samples, 1.32%)</title><rect x="94.0256%" y="117" width="1.3199%" height="15" fill="rgb(213,199,7)" fg:x="18807" fg:w="264"/><text x="94.2756%" y="127.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (264 samples, 1.32%)</title><rect x="94.0256%" y="101" width="1.3199%" height="15" fill="rgb(250,110,10)" fg:x="18807" fg:w="264"/><text x="94.2756%" y="111.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::find(core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;*, gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (264 samples, 1.32%)</title><rect x="94.0256%" y="85" width="1.3199%" height="15" fill="rgb(248,123,6)" fg:x="18807" fg:w="264"/><text x="94.2756%" y="95.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ops::function::impls::impl$3::call_mut(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (185 samples, 0.92%)</title><rect x="94.4206%" y="69" width="0.9249%" height="15" fill="rgb(206,91,31)" fg:x="18886" fg:w="185"/><text x="94.6706%" y="79.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::impl$1::draw_sprites::closure$0(gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (185 samples, 0.92%)</title><rect x="94.4206%" y="53" width="0.9249%" height="15" fill="rgb(211,154,13)" fg:x="18886" fg:w="185"/><text x="94.6706%" y="63.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::num::impl$6::wrapping_sub (105 samples, 0.52%)</title><rect x="94.8205%" y="37" width="0.5249%" height="15" fill="rgb(225,148,7)" fg:x="18966" fg:w="105"/><text x="95.0705%" y="47.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_scan_line&lt;my_benchmark::DummyScreen&gt; (6,478 samples, 32.39%)</title><rect x="62.9637%" y="229" width="32.3868%" height="15" fill="rgb(220,160,43)" fg:x="12594" fg:w="6478"/><text x="63.2137%" y="239.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware:..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_sprites (297 samples, 1.48%)</title><rect x="93.8656%" y="213" width="1.4849%" height="15" fill="rgb(213,52,39)" fg:x="18775" fg:w="297"/><text x="94.1156%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (265 samples, 1.32%)</title><rect x="94.0256%" y="197" width="1.3249%" height="15" fill="rgb(243,137,7)" fg:x="18807" fg:w="265"/><text x="94.2756%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$26::from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (265 samples, 1.32%)</title><rect x="94.0256%" y="181" width="1.3249%" height="15" fill="rgb(230,79,13)" fg:x="18807" fg:w="265"/><text x="94.2756%" y="191.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::impl$24::extend(arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;*, core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (265 samples, 1.32%)</title><rect x="94.0256%" y="165" width="1.3249%" height="15" fill="rgb(247,105,23)" fg:x="18807" fg:w="265"/><text x="94.2756%" y="175.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`arrayvec::arrayvec::ArrayVec&lt;tuple$&lt;usize,ref$&lt;gb_core::hardware::ppu::Sprite&gt; &gt;,10&gt;::extend_from_iter(core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::take::Take&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;gb_core::hardware::ppu::Sprite&gt;,gb_core::hardware::ppu::impl$1::draw_sprites::closure_env$0 (265 samples, 1.32%)</title><rect x="94.0256%" y="149" width="1.3249%" height="15" fill="rgb(223,179,41)" fg:x="18807" fg:w="265"/><text x="94.2756%" y="159.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::draw_to_screen (6 samples, 0.03%)</title><rect x="95.3505%" y="229" width="0.0300%" height="15" fill="rgb(218,9,34)" fg:x="19072" fg:w="6"/><text x="95.6005%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_current_mode_sec (19 samples, 0.09%)</title><rect x="96.7803%" y="213" width="0.0950%" height="15" fill="rgb(222,106,8)" fg:x="19358" fg:w="19"/><text x="97.0303%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::step (7,954 samples, 39.77%)</title><rect x="57.4793%" y="245" width="39.7660%" height="15" fill="rgb(211,220,0)" fg:x="11497" fg:w="7954"/><text x="57.7293%" y="255.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Ppu&lt;my_benchmark::DummyScreen&gt;::update_lcd_stat_interrupts (373 samples, 1.86%)</title><rect x="95.3805%" y="229" width="1.8648%" height="15" fill="rgb(229,52,16)" fg:x="19078" fg:w="373"/><text x="95.6305%" y="239.50">m..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::Stat::contains (74 samples, 0.37%)</title><rect x="96.8753%" y="213" width="0.3700%" height="15" fill="rgb(212,155,18)" fg:x="19377" fg:w="74"/><text x="97.1253%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::ppu::_::InternalBitFlags::contains (74 samples, 0.37%)</title><rect x="96.8753%" y="197" width="0.3700%" height="15" fill="rgb(242,21,14)" fg:x="19377" fg:w="74"/><text x="97.1253%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::sound::Sound::do_cycle (206 samples, 1.03%)</title><rect x="97.2453%" y="245" width="1.0299%" height="15" fill="rgb(222,19,48)" fg:x="19451" fg:w="206"/><text x="97.4953%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick (18,342 samples, 91.70%)</title><rect x="8.1392%" y="261" width="91.7008%" height="15" fill="rgb(232,45,27)" fg:x="1628" fg:w="18342"/><text x="8.3892%" y="271.50">my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::GameBoy&lt;my_benchmark::DummyScreen&gt;::tick</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::hardware::timer::Timer::do_cycle (313 samples, 1.56%)</title><rect x="98.2752%" y="245" width="1.5648%" height="15" fill="rgb(249,103,42)" fg:x="19657" fg:w="313"/><text x="98.5252%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_str(ref$ (3 samples, 0.01%)</title><rect x="99.8450%" y="261" width="0.0150%" height="15" fill="rgb(246,81,33)" fg:x="19971" fg:w="3"/><text x="100.0950%" y="271.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::from_trait (3 samples, 0.01%)</title><rect x="99.8450%" y="245" width="0.0150%" height="15" fill="rgb(252,33,42)" fg:x="19971" fg:w="3"/><text x="100.0950%" y="255.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize(serde_json::de::Deserializer (3 samples, 0.01%)</title><rect x="99.8450%" y="229" width="0.0150%" height="15" fill="rgb(209,212,41)" fg:x="19971" fg:w="3"/><text x="100.0950%" y="239.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`serde_json::de::impl$7::deserialize_struct(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (3 samples, 0.01%)</title><rect x="99.8450%" y="213" width="0.0150%" height="15" fill="rgb(207,154,6)" fg:x="19971" fg:w="3"/><text x="100.0950%" y="223.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`gb_core::gameboy::_::impl$0::deserialize::impl$2::visit_map(gb_core::gameboy::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (3 samples, 0.01%)</title><rect x="99.8450%" y="197" width="0.0150%" height="15" fill="rgb(223,64,47)" fg:x="19971" fg:w="3"/><text x="100.0950%" y="207.50"></text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`enum2$&lt;core::option::Option&lt;gb_core::hardware::ppu::PPuState&gt; &gt;::is_some (3 samples, 0.01%)</title><rect x="99.8450%" y="181" width="0.0150%" height="15" fill="rgb(211,161,38)" fg:x="19971" fg:w="3"/><text x="100.0950%" y="191.50"></text></g><g><title>`0x7FFE4396AF08 (19,970 samples, 99.84%)</title><rect x="0.0250%" y="805" width="99.8400%" height="15" fill="rgb(219,138,40)" fg:x="5" fg:w="19970"/><text x="0.2750%" y="815.50">`0x7FFE4396AF08</text></g><g><title>`0x7FFE42BA257D (19,970 samples, 99.84%)</title><rect x="0.0250%" y="789" width="99.8400%" height="15" fill="rgb(241,228,46)" fg:x="5" fg:w="19970"/><text x="0.2750%" y="799.50">`0x7FFE42BA257D</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh() (19,962 samples, 99.80%)</title><rect x="0.0650%" y="773" width="99.8000%" height="15" fill="rgb(223,209,38)" fg:x="13" fg:w="19962"/><text x="0.3150%" y="783.50">my_benchmark-c9a97925f9d084bf.exe`__scrt_common_main_seh()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`invoke_main() (19,956 samples, 99.77%)</title><rect x="0.0950%" y="757" width="99.7700%" height="15" fill="rgb(236,164,45)" fg:x="19" fg:w="19956"/><text x="0.3450%" y="767.50">my_benchmark-c9a97925f9d084bf.exe`invoke_main()</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`main (19,956 samples, 99.77%)</title><rect x="0.0950%" y="741" width="99.7700%" height="15" fill="rgb(231,15,5)" fg:x="19" fg:w="19956"/><text x="0.3450%" y="751.50">my_benchmark-c9a97925f9d084bf.exe`main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (19,956 samples, 99.77%)</title><rect x="0.0950%" y="725" width="99.7700%" height="15" fill="rgb(252,35,15)" fg:x="19" fg:w="19956"/><text x="0.3450%" y="735.50">my_benchmark-c9a97925f9d084bf.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main (19,956 samples, 99.77%)</title><rect x="0.0950%" y="709" width="99.7700%" height="15" fill="rgb(248,181,18)" fg:x="19" fg:w="19956"/><text x="0.3450%" y="719.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::main</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches (19,953 samples, 99.76%)</title><rect x="0.1100%" y="693" width="99.7550%" height="15" fill="rgb(233,39,42)" fg:x="22" fg:w="19953"/><text x="0.3600%" y="703.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::benches</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion (19,911 samples, 99.55%)</title><rect x="0.3200%" y="677" width="99.5450%" height="15" fill="rgb(238,110,33)" fg:x="64" fg:w="19911"/><text x="0.5700%" y="687.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark(criterion::Criterion</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$ (19,911 samples, 99.55%)</title><rect x="0.3200%" y="661" width="99.5450%" height="15" fill="rgb(233,195,10)" fg:x="64" fg:w="19911"/><text x="0.5700%" y="671.50">my_benchmark-c9a97925f9d084bf.exe`criterion::Criterion&lt;criterion::measurement::WallTime&gt;::bench_function(ref$</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function (19,908 samples, 99.53%)</title><rect x="0.3350%" y="645" width="99.5300%" height="15" fill="rgb(254,105,3)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="655.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::bench_function</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tuple$&lt;&gt;*, criterion::benchmark_group::impl$0::bench_function::closure_env$0 (19,908 samples, 99.53%)</title><rect x="0.3350%" y="629" width="99.5300%" height="15" fill="rgb(221,225,9)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="639.50">my_benchmark-c9a97925f9d084bf.exe`criterion::benchmark_group::BenchmarkGroup&lt;criterion::measurement::WallTime&gt;::run_bench(criterion::benchmark_group::BenchmarkId, tup..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="613" width="99.5300%" height="15" fill="rgb(224,227,45)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="623.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::Routine::test(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec (19,908 samples, 99.53%)</title><rect x="0.3350%" y="597" width="99.5300%" height="15" fill="rgb(229,198,43)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="607.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::vec::Vec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (19,908 samples, 99.53%)</title><rect x="0.3350%" y="581" width="99.5300%" height="15" fill="rgb(206,209,35)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="591.50">my_benchmark-c9a97925f9d084bf.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (19,908 samples, 99.53%)</title><rect x="0.3350%" y="565" width="99.5300%" height="15" fill="rgb(245,195,53)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="575.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (19,908 samples, 99.53%)</title><rect x="0.3350%" y="549" width="99.5300%" height="15" fill="rgb(240,92,26)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="559.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (19,908 samples, 99.53%)</title><rect x="0.3350%" y="533" width="99.5300%" height="15" fill="rgb(207,40,23)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="543.50">my_benchmark-c9a97925f9d084bf.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;(criterion::routine::Function&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;*, criterion::measurement::WallTime*, ref$&lt;slice2$&lt;u64&gt; &gt;, tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="517" width="99.5300%" height="15" fill="rgb(223,111,35)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="527.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="501" width="99.5300%" height="15" fill="rgb(229,147,28)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="511.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="485" width="99.5300%" height="15" fill="rgb(211,29,28)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="495.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closur..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="469" width="99.5300%" height="15" fill="rgb(228,72,33)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="479.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="453" width="99.5300%" height="15" fill="rgb(205,214,31)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="463.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_from_iter_nested::impl$1::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine:..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="437" width="99.5300%" height="15" fill="rgb(224,111,15)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="447.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::spec_extend::impl$1::spec_extend(alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::slice:..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="421" width="99.5300%" height="15" fill="rgb(253,21,26)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="431.50">my_benchmark-c9a97925f9d084bf.exe`alloc::vec::Vec&lt;f64,alloc::alloc::Global&gt;::extend_trusted(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::rou..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="405" width="99.5300%" height="15" fill="rgb(245,139,43)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="415.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::traits::iterator::Iterator::for_each(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::imp..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt;, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="389" width="99.5300%" height="15" fill="rgb(252,170,7)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="399.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::benc..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="373" width="99.5300%" height="15" fill="rgb(231,118,14)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="383.50">my_benchmark-c9a97925f9d084bf.exe`core::slice::iter::impl$182::fold(core::slice::iter::Iter&lt;u64&gt;, tuple$&lt;&gt;, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u6..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt;,core::iter::traits::iterator::Iterator::for_each::call::closure_env$0&lt;f64,alloc::vec::impl$20::extend_trusted::closure_env$0&lt;f64,alloc::alloc::Global,core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;u64&gt;,criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;*, tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="357" width="99.5300%" height="15" fill="rgb(238,83,0)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="367.50">my_benchmark-c9a97925f9d084bf.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;u64&gt;,f64,tuple$&lt;&gt;,criterion::..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::impl$0::bench_function::closure_env$0&lt;criterion::measurement::WallTime,criterion::benchmark_group::BenchmarkId,my_benchmark::criterion_benchmark::closure_env$0&gt;,tuple$ (19,908 samples, 99.53%)</title><rect x="0.3350%" y="341" width="99.5300%" height="15" fill="rgb(221,39,39)" fg:x="67" fg:w="19908"/><text x="0.5850%" y="351.50">my_benchmark-c9a97925f9d084bf.exe`criterion::routine::impl$1::bench::closure$0(criterion::routine::impl$1::bench::closure_env$0&lt;criterion::measurement::WallTime,crite..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated (19,907 samples, 99.53%)</title><rect x="0.3400%" y="325" width="99.5250%" height="15" fill="rgb(222,119,46)" fg:x="68" fg:w="19907"/><text x="0.5900%" y="335.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::assert_iterated</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::criterion_benchmark::closure$0::closure_env$0&gt; (19,907 samples, 99.53%)</title><rect x="0.3400%" y="309" width="99.5250%" height="15" fill="rgb(222,165,49)" fg:x="68" fg:w="19907"/><text x="0.5900%" y="319.50">my_benchmark-c9a97925f9d084bf.exe`criterion::bencher::Bencher&lt;criterion::measurement::WallTime&gt;::iter&lt;criterion::measurement::WallTime,tuple$&lt;&gt;,my_benchmark::criterio..</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0 (19,907 samples, 99.53%)</title><rect x="0.3400%" y="293" width="99.5250%" height="15" fill="rgb(219,113,52)" fg:x="68" fg:w="19907"/><text x="0.5900%" y="303.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::criterion_benchmark::closure$0::closure$0</text></g><g><title>my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci (19,907 samples, 99.53%)</title><rect x="0.3400%" y="277" width="99.5250%" height="15" fill="rgb(214,7,15)" fg:x="68" fg:w="19907"/><text x="0.5900%" y="287.50">my_benchmark-c9a97925f9d084bf.exe`my_benchmark::fibonacci</text></g><g><title>`0x7FFE43938D76 (6 samples, 0.03%)</title><rect x="99.8900%" y="709" width="0.0300%" height="15" fill="rgb(235,32,4)" fg:x="19980" fg:w="6"/><text x="100.1400%" y="719.50"></text></g><g><title>`0x7FFE4393E269 (6 samples, 0.03%)</title><rect x="99.8900%" y="693" width="0.0300%" height="15" fill="rgb(238,90,54)" fg:x="19980" fg:w="6"/><text x="100.1400%" y="703.50"></text></g><g><title>`0x7FFE4393D2E9 (5 samples, 0.02%)</title><rect x="99.8950%" y="677" width="0.0250%" height="15" fill="rgb(213,208,19)" fg:x="19981" fg:w="5"/><text x="100.1450%" y="687.50"></text></g><g><title>`0x7FFE4393C8B8 (5 samples, 0.02%)</title><rect x="99.8950%" y="661" width="0.0250%" height="15" fill="rgb(233,156,4)" fg:x="19981" fg:w="5"/><text x="100.1450%" y="671.50"></text></g><g><title>`0x7FFE43934C34 (3 samples, 0.01%)</title><rect x="99.9050%" y="645" width="0.0150%" height="15" fill="rgb(207,194,5)" fg:x="19983" fg:w="3"/><text x="100.1550%" y="655.50"></text></g><g><title>`0x7FFE439EE843 (12 samples, 0.06%)</title><rect x="99.8900%" y="757" width="0.0600%" height="15" fill="rgb(206,111,30)" fg:x="19980" fg:w="12"/><text x="100.1400%" y="767.50"></text></g><g><title>`0x7FFE4393A71A (12 samples, 0.06%)</title><rect x="99.8900%" y="741" width="0.0600%" height="15" fill="rgb(243,70,54)" fg:x="19980" fg:w="12"/><text x="100.1400%" y="751.50"></text></g><g><title>`0x7FFE4392909C (12 samples, 0.06%)</title><rect x="99.8900%" y="725" width="0.0600%" height="15" fill="rgb(242,28,8)" fg:x="19980" fg:w="12"/><text x="100.1400%" y="735.50"></text></g><g><title>`0x7FFE43938E00 (5 samples, 0.02%)</title><rect x="99.9250%" y="709" width="0.0250%" height="15" fill="rgb(219,106,18)" fg:x="19987" fg:w="5"/><text x="100.1750%" y="719.50"></text></g><g><title>`0x7FFE4393DAED (5 samples, 0.02%)</title><rect x="99.9250%" y="693" width="0.0250%" height="15" fill="rgb(244,222,10)" fg:x="19987" fg:w="5"/><text x="100.1750%" y="703.50"></text></g><g><title>`0x7FFE4397D320 (5 samples, 0.02%)</title><rect x="99.9250%" y="677" width="0.0250%" height="15" fill="rgb(236,179,52)" fg:x="19987" fg:w="5"/><text x="100.1750%" y="687.50"></text></g><g><title>`0x7FFE4397D2AE (5 samples, 0.02%)</title><rect x="99.9250%" y="661" width="0.0250%" height="15" fill="rgb(213,23,39)" fg:x="19987" fg:w="5"/><text x="100.1750%" y="671.50"></text></g><g><title>`0x7FFE4397D4FD (5 samples, 0.02%)</title><rect x="99.9250%" y="645" width="0.0250%" height="15" fill="rgb(238,48,10)" fg:x="19987" fg:w="5"/><text x="100.1750%" y="655.50"></text></g><g><title>`0x7FFE43938B5F (5 samples, 0.02%)</title><rect x="99.9250%" y="629" width="0.0250%" height="15" fill="rgb(251,196,23)" fg:x="19987" fg:w="5"/><text x="100.1750%" y="639.50"></text></g><g><title>`0x7FFE439EEB73 (4 samples, 0.02%)</title><rect x="99.9600%" y="757" width="0.0200%" height="15" fill="rgb(250,152,24)" fg:x="19994" fg:w="4"/><text x="100.2100%" y="767.50"></text></g><g><title>`0x7FFE43934B7B (4 samples, 0.02%)</title><rect x="99.9600%" y="741" width="0.0200%" height="15" fill="rgb(209,150,17)" fg:x="19994" fg:w="4"/><text x="100.2100%" y="751.50"></text></g><g><title>`0x7FFE43934DC6 (4 samples, 0.02%)</title><rect x="99.9600%" y="725" width="0.0200%" height="15" fill="rgb(234,202,34)" fg:x="19994" fg:w="4"/><text x="100.2100%" y="735.50"></text></g><g><title>`0x7FFE43935D84 (4 samples, 0.02%)</title><rect x="99.9600%" y="709" width="0.0200%" height="15" fill="rgb(253,148,53)" fg:x="19994" fg:w="4"/><text x="100.2100%" y="719.50"></text></g><g><title>`0x7FFE4393D2E9 (3 samples, 0.01%)</title><rect x="99.9650%" y="693" width="0.0150%" height="15" fill="rgb(218,129,16)" fg:x="19995" fg:w="3"/><text x="100.2150%" y="703.50"></text></g><g><title>`0x7FFE4393C8B8 (3 samples, 0.01%)</title><rect x="99.9650%" y="677" width="0.0150%" height="15" fill="rgb(216,85,19)" fg:x="19995" fg:w="3"/><text x="100.2150%" y="687.50"></text></g><g><title>`0x7FFE439EECF9 (3 samples, 0.01%)</title><rect x="99.9800%" y="757" width="0.0150%" height="15" fill="rgb(235,228,7)" fg:x="19998" fg:w="3"/><text x="100.2300%" y="767.50"></text></g><g><title>`0x7FFE4397D320 (3 samples, 0.01%)</title><rect x="99.9800%" y="741" width="0.0150%" height="15" fill="rgb(245,175,0)" fg:x="19998" fg:w="3"/><text x="100.2300%" y="751.50"></text></g><g><title>all (20,002 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(208,168,36)" fg:x="0" fg:w="20002"/><text x="0.2500%" y="831.50"></text></g><g><title>`0x7FFE439842CE (26 samples, 0.13%)</title><rect x="99.8700%" y="805" width="0.1300%" height="15" fill="rgb(246,171,24)" fg:x="19976" fg:w="26"/><text x="100.1200%" y="815.50"></text></g><g><title>`0x7FFE439843A3 (26 samples, 0.13%)</title><rect x="99.8700%" y="789" width="0.1300%" height="15" fill="rgb(215,142,24)" fg:x="19976" fg:w="26"/><text x="100.1200%" y="799.50"></text></g><g><title>`0x7FFE439DA99A (26 samples, 0.13%)</title><rect x="99.8700%" y="773" width="0.1300%" height="15" fill="rgb(250,187,7)" fg:x="19976" fg:w="26"/><text x="100.1200%" y="783.50"></text></g></svg></svg>